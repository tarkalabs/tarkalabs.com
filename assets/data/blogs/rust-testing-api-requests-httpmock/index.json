{"hash":"1ce8472a455abf88af7afb52880617df980382b4","data":{"blog":{"id":"2c1a0bee057dcde607a535d0db26a08f","slug":"rust-testing-api-requests-httpmock","content":"<p>During my internship, I started working as a software engineer intern in TarkaLabs. During my time there, I developed an internal tool that involved creating web services in Rust. For API testing in Rust, we tried different approaches, and below, I have listed an easy approach (API was simple and straightforward) and one that fits our use case.</p>\n<p>We will have a basic rust program that makes a GET HTTP request to the following resource <a href=\"http://jsonplaceholder.typicode.com/users\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://jsonplaceholder.typicode.com/users</a> which will return a static response of 10 users. Our function will return those users to the calling function and our test will validate if the function properly returns the users when the service is returning them.</p>\n<p>Dependencies that will be used are listed below</p>\n<ul>\n<li>hyper - To build the client to make the GET requests</li>\n<li>tokio - Runtime to support async operations</li>\n<li>serde, serde_json - To serialize the JSON response that we will receive from the service</li>\n<li>actix-rt - To run tests in async mode</li>\n<li>httpmock - To mock the responses when a certain service is called</li>\n</ul>\n<p>Letâ€™s create the struct that will be used to hold the information from the service</p>\n<div class=\"gridsome-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">use</span> <span class=\"token namespace\">serde<span class=\"token punctuation\">::</span></span><span class=\"token punctuation\">{</span><span class=\"token class-name\">Deserialize</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Serialize</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token attribute attr-name\">#[derive(Deserialize, Debug, Serialize, Eq, PartialEq)]</span>\n<span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">User</span> <span class=\"token punctuation\">{</span>\n    id<span class=\"token punctuation\">:</span> <span class=\"token keyword\">i32</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Deserialize and Serialize attributes are added to support the serialization</span>\n<span class=\"token comment\">// Eq and PartialEq is added for assertions</span></code></pre></div>\n<p>Next we build the function that makes the request to the service</p>\n<div class=\"gridsome-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">use</span> <span class=\"token namespace\">hyper<span class=\"token punctuation\">::</span></span><span class=\"token punctuation\">{</span><span class=\"token class-name\">Client</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Uri</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token namespace\">hyper<span class=\"token punctuation\">::</span>body<span class=\"token punctuation\">::</span></span><span class=\"token class-name\">Buf</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// We define the result with generic type and error</span>\n<span class=\"token keyword\">type</span> <span class=\"token type-definition class-name\">Result</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token namespace\">std<span class=\"token punctuation\">::</span>result<span class=\"token punctuation\">::</span></span><span class=\"token class-name\">Result</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Box</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">dyn</span> <span class=\"token namespace\">std<span class=\"token punctuation\">::</span>error<span class=\"token punctuation\">::</span></span><span class=\"token class-name\">Error</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Send</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Sync</span><span class=\"token operator\">>></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Function will take the service url and returns Result of</span>\n<span class=\"token comment\">// collection of users</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">make_request</span><span class=\"token punctuation\">(</span>base_url<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Uri</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Result</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Vec</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token operator\">>></span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">let</span> client <span class=\"token operator\">=</span> <span class=\"token class-name\">Client</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> resp <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>base_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">await</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> body <span class=\"token operator\">=</span> <span class=\"token namespace\">hyper<span class=\"token punctuation\">::</span>body<span class=\"token punctuation\">::</span></span><span class=\"token function\">aggregate</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">await</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> users <span class=\"token operator\">=</span> <span class=\"token namespace\">serde_json<span class=\"token punctuation\">::</span></span><span class=\"token function\">from_reader</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">reader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Ok</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token attribute attr-name\">#[tokio::main]</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Result</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> service <span class=\"token operator\">=</span>              <span class=\"token string\">\"http://jsonplaceholder.typicode.com/users\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">make_request</span><span class=\"token punctuation\">(</span>service<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">await</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Finally let us build the test for the above function, just like regular tests, we will create a module with config as tests.</p>\n<div class=\"gridsome-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token comment\">// Starts the mock server</span>\n<span class=\"token keyword\">let</span> server <span class=\"token operator\">=</span> <span class=\"token class-name\">MockServer</span><span class=\"token punctuation\">::</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Adds mock response for patterns using mock method</span>\n<span class=\"token comment\">// Here, we mocked when server gets GET API call with path /</span>\n<span class=\"token comment\">// Then return status as 200 and return expected json</span>\n<span class=\"token keyword\">let</span> _hello_mock <span class=\"token operator\">=</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">mock</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>when<span class=\"token punctuation\">,</span> then<span class=\"token closure-punctuation punctuation\">|</span></span> <span class=\"token punctuation\">{</span>\n    when<span class=\"token punctuation\">.</span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token constant\">GET</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    then<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content-type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/json\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">json_body</span><span class=\"token punctuation\">(</span><span class=\"token macro property\">json!</span><span class=\"token punctuation\">(</span>expected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The completed test:</p>\n<div class=\"gridsome-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token attribute attr-name\">#[cfg(test)]</span>\n<span class=\"token keyword\">mod</span> <span class=\"token module-declaration namespace\">tests</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">use</span> <span class=\"token namespace\">httpmock<span class=\"token punctuation\">::</span>prelude<span class=\"token punctuation\">::</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">use</span> <span class=\"token namespace\">serde_json<span class=\"token punctuation\">::</span></span>json<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">use</span> <span class=\"token keyword\">crate</span><span class=\"token punctuation\">::</span><span class=\"token punctuation\">{</span>make_request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Uri</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Enables running test asynchronously</span>\n    <span class=\"token attribute attr-name\">#[actix_rt::test]</span>\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">test_expected_response_is_retrieved</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> expected <span class=\"token operator\">=</span> <span class=\"token macro property\">vec!</span><span class=\"token punctuation\">[</span>\n            <span class=\"token class-name\">User</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abcd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token class-name\">User</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"efgh\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> server <span class=\"token operator\">=</span> <span class=\"token class-name\">MockServer</span><span class=\"token punctuation\">::</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> _hello_mock <span class=\"token operator\">=</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">mock</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>when<span class=\"token punctuation\">,</span> then<span class=\"token closure-punctuation punctuation\">|</span></span> <span class=\"token punctuation\">{</span>\n            when<span class=\"token punctuation\">.</span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token constant\">GET</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            then<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content-type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/json\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">json_body</span><span class=\"token punctuation\">(</span><span class=\"token macro property\">json!</span><span class=\"token punctuation\">(</span>expected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> actual <span class=\"token operator\">=</span> <span class=\"token function\">make_request</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">.</span><span class=\"token function\">base_url</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Uri</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">await</span><span class=\"token punctuation\">;</span>\n        <span class=\"token macro property\">assert!</span><span class=\"token punctuation\">(</span>actual<span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>item<span class=\"token closure-punctuation punctuation\">|</span></span> expected<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>After calling the actual function with mocked responses, we then check it against the expected response.</p>\n<p>What is your preferred approach to async testing in RUST?</p>\n<p><strong>References</strong></p>\n<p><a href=\"https://github.com/hyperium/hyper/blob/master/examples/client_json.rs?source=post_page-----4cbd6211ad53--------------------------------\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">hyper/client_json.rs at master . hyperium/hyper</a></p>\n<p><a href=\"https://blog.x5ff.xyz/blog/async-tests-tokio-rust/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Two easy ways to test async functions in Rust</a></p>\n<p><a href=\"https://github.com/alexliesenfeld/httpmock/blob/master/tests/examples/json_body_tests.rs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/alexliesenfeld/httpmock/blob/master/tests/examples/json_body_tests.rs</a></p>\n"},"blogs":{"edges":[{"node":{"tag":"careers","title":"A Marketer's Guide to Surviving B2B IT Consulting","description":"","duration":"3 min read","thumbnail_alt":"A growing plant is layered over the artwork of a human brain","slug":"a-marketers-guide-to-surviving-b2b-it-consulting","tarkan":{"name":"Saudnya Kharade","role":"Brand Specialist","image":"saudnya.jpg","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"a-marketers-guide/b2b-blog.webp"}},{"node":{"tag":"web","title":"Blockchain as public ledger","description":"","duration":"5 min read","thumbnail_alt":"Blockchain FTW","slug":"smart-contracts-store-information","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":""}},{"node":{"tag":"web","title":"Using Tarka Chat in your React/Vue apps","description":"Using Tarka Chat in your React/Vue apps","duration":"5 min read","thumbnail_alt":"Using Tarka Chat in your React/Vue apps","slug":"using-tarka-chat-in-your-react-vue-apps","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"using-tarka-chat-in-your-react-vue-apps/Photo-by-Volodymyr-Hryshchenko-on-Unsplash.webp"}},{"node":{"tag":"web","title":"Neovim as a java IDE","description":"Neovim as a java IDE","duration":"5 min read","thumbnail_alt":"Neovim as a java IDE","slug":"neovim-as-java-ide","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":""}},{"node":{"tag":"consulting","title":"Navigating Change: The BA's Role in Managing Agile Transformations","description":"Navigating change: The BA's Role in Managing Agile Transformations","duration":"3 min read","thumbnail_alt":"Navigating change: The BA's Role in Managing Agile Transformations","slug":"navigating-change","tarkan":{"name":"Sparsh Gupta","role":"Product Owner","image":"sparsh.png","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@sparsh28"}},"coverImage":"navigating-change/navigating-change.webp"}},{"node":{"tag":"AI","title":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","description":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","duration":"7 min read","thumbnail_alt":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","slug":"extracting-structured-data","tarkan":{"name":"Kesavan","role":"Developer","image":"k7.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@itzk7"}},"coverImage":""}},{"node":{"tag":"","title":"Functional Programming for Humans â€” Foundations","description":"Functional Programming for Humans â€” Foundations","duration":"6 min read","thumbnail_alt":"Functional Programming for Humans â€” Foundations","slug":"functional-programming-for-humans-foundation","tarkan":{"name":"Sameer Kumar","role":"Technical Consultant","image":"sameer.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"functional-programming-for-humans-foundation/Functional-Programming-for-Humansâ€”Foundations.webp"}},{"node":{"tag":"web","title":"Leveraging DTO pattern in Go-based web apps","description":"Leveraging DTO pattern in Go-based web apps","duration":"4 min read","thumbnail_alt":"Leveraging DTO pattern in Go-based web apps","slug":"go-dto-pattern","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"go-dto-pattern/go-dto-pattern.webp"}},{"node":{"tag":"web","title":"Handling message duplication in Kafka","description":"Handling message duplication in Kafka","duration":"5 min read","thumbnail_alt":"Handling message duplication in Kafka","slug":"kafka-message-duplication","tarkan":{"name":"Vignesh Ravichandran","role":"Developer","image":"vignesh.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@vignesh-ravichandran"}},"coverImage":"kafka-message-duplication/kafka-message-duplication.webp"}},{"node":{"tag":"web","title":"Generic Callbacks in Rust","description":"Generic Callbacks in Rust","duration":"3 min read","thumbnail_alt":"Generic Callbacks in Rust","slug":"generic-callbacks-rust","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"generic-callbacks-rust/generic-callbacks-rust.webp"}},{"node":{"tag":"AI","title":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","description":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","duration":"8 min read","thumbnail_alt":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","slug":"batch-transcription","tarkan":{"name":"Kesavan","role":"Developer","image":"k7.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@itzk7"}},"coverImage":"batch-transcription/batch-transcription.webp"}},{"node":{"tag":"mobile","title":"5 essential tools and tips for every iOS developer","description":"5 essential tools and tips for every iOS developer","duration":"4 min read","thumbnail_alt":"5 essential tools and tips for every iOS developer","slug":"essential-tools-and-tips-for-every-ios-developer","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"ios-tips-and-tools/Recommended-tools-tips-for-iOS-developers.png"}},{"node":{"tag":"mobile","title":"The ultimate VPN detection guide for iOS and Android","description":"The ultimate VPN detection guide for iOS and Android","duration":"3 min read","thumbnail_alt":"The ultimate VPN detection guide for iOS and Android","slug":"vpn-detection-guide-ios-android","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"the-ultimate-vpn-detection/the-ultimate-vpn.webp"}},{"node":{"tag":"mobile","title":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","description":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","duration":"3 min read","thumbnail_alt":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","slug":"kotlin-multiplatform-mobile","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"kotlin-multiplatform-mobile/kotlin-multiplatform-mobile.webp"}},{"node":{"tag":"web","title":"Reshaping data with PostgreSQL pivot tables","description":"Reshaping data with PostgreSQL pivot tables","duration":"4 min read","thumbnail_alt":"Reshaping data with PostgreSQL pivot tables","slug":"reshaping-data-postgresql-pivot-tables","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"reshaping-data-with-postgres/reshaping-data-with-postgreSQL.webp"}},{"node":{"tag":"consulting","title":"Documentation: Yes, We Should!","description":"Imagine you recently joined a new team, and after a couple of weeks, you were assigned a bug ticket. You look at the ticket and decide to see if this issue surfaced in the past and so do a search in the bug tracking tool.","duration":"4 min read","thumbnail_alt":"A 3D image of a file folder with purple, yellow and green color rectangles for pages","slug":"documentation-yes-we-should","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"documentation-yes-we-should/documentation-yes-we-should.png"}},{"node":{"tag":"consulting","title":"Building Serious Software","description":"Do you know what every software startup entrepreneur dreams of after they validate the market? Software that does not break with scale and is adaptable to change.","duration":"4 min read","thumbnail_alt":"A cartoon of loosely held blocks which are held by stick figures from collapsing","slug":"building-serious-software","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":"building-serious-software/banner.png"}},{"node":{"tag":"consulting","title":"Wait! Don't write code yet","description":"As developers, it is necessary to understand how the code we write helps solve real-world problems. Often, it is easier to think about users while writing the application layer of code.","duration":"3 min read","thumbnail_alt":"A isometric image of a 3D maze","slug":"wait-dont-write-code-yet","tarkan":{"name":"Vidhya Desikan","role":"Developer","image":"vidhya.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@vdviddin"}},"coverImage":"wait-dont-write-code-yet/wait-dont-write-code-yet.png"}},{"node":{"tag":"web","title":"Rust : Testing API Requests â€” HttpMock","description":"Rust : Testing API Requests â€” HttpMock","duration":"3 min read","thumbnail_alt":"Rust : Testing API Requests â€” HttpMock","slug":"rust-testing-api-requests-httpmock","tarkan":{"name":"Arun Kumar","role":"A tarkan","image":"anonymous.jpg","blurb":"She is still thiking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@arunkumar_33617"}},"coverImage":"rust-testing/Rust-testing.webp"}},{"node":{"tag":"consulting","title":"What does a CTO do?","description":"There has been a lot of hand-wringing and discussions about what a CTO does on the interwebs. Does a CTO write code? Does a CTO's calendar look like it is on the maker's or the manager's schedule? Does a CTO sit in on interviews?","duration":"6 min read","thumbnail_alt":"A isometric image of a balancing scale with code on one side and detective lens on the other side","slug":"what-does-a-cto-do","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"what-does-a-cto-do/cover.png"}},{"node":{"tag":"careers","title":"A writer's guide to working in a tech consultancy","description":"A manual for writers who work with cross-functional teams or roles.","duration":"4 min read","thumbnail_alt":"A circular red shape surrounded by cubes","slug":"a-writers-guide-to-working-in-a-tech-consultancy","tarkan":{"name":"Puneetha Jagannathan","role":"Brand Communications Specialist","image":"puneetha.jpg","blurb":"She is still thiking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://puneetha-j.medium.com/"}},"coverImage":"a-writers-guide-to-working-in-a-tech-consultancy/a-writers-guide-to-working-in-a-tech-consultancy.png"}},{"node":{"tag":"web","title":"How to setup SFTP in Golang Authentication Using Go","description":"How to setup SFTP in Golang Authentication Using Go","duration":"2 min read","thumbnail_alt":"How to setup SFTP in Golang Authentication Using Go","slug":"set-up-sftp-authentication-go","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":""}},{"node":{"tag":"devops","title":"How to reduce your Node.js docker image size by 70%","description":"How to reduce your Node.js docker image size by 70%","duration":"4 min read","thumbnail_alt":"How to reduce your Node.js docker image size by 70%","slug":"reduce-nodejs-docker-image-size","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"reduce-nodejs-docker-image-size/how-to-reduce.gif"}},{"node":{"tag":"careers","title":"Our Guide To Hiring Great People","description":"How Tarka Labs approaches hiring.","duration":"5 min read","thumbnail_alt":"Colors in geometric shapes with hand-drawn sketches on them","slug":"our-guide-to-hiring-great-people","tarkan":{"name":"Jenifa Newlin","role":"People Champion","image":"jenifa.jpg","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@jenifa_85990"}},"coverImage":"our-guide-to-hiring-great-people/our-guide-to-hiring-great-people.png"}},{"node":{"tag":"web","title":"Learnings from a failed product","description":"Learnings from a failed product","duration":"3 min read","thumbnail_alt":"Learnings from a failed product","slug":"learnings-from-a-failed-product","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"learning-from-a-failed-product/learning-from.webp"}},{"node":{"tag":"web","title":"How To Learn Coding Through Live Streaming","description":"How To Learn Coding Through Live Streaming","duration":"5 min read","thumbnail_alt":"How To Learn Coding Through Live Streaming","slug":"learn-coding-through-live-streaming","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"learn-youtube-video/rahul-blog-1.webp"}},{"node":{"tag":"web","title":"Remote pairing in mac (with low latency)","description":"Remote pairing in mac (with low latency)","duration":"3 min read","thumbnail_alt":"Remote pairing in mac (with low latency)","slug":"remote-pairing-mac-low-latency","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":""}},{"node":{"tag":"mobile","title":"Debounce in Swift","description":"All about debounce: 4 ways to achieve debounce in Swift","duration":"5 min read","thumbnail_alt":"A representation of a function called 'debounce' which is accepting, as input, a green circle labelled '3' and outputting an identical-looking green circle with no label","slug":"debounce-in-swift","tarkan":{"name":"Pavan Kumar C","role":"iOS Developer","image":"pavan.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://pavankumarchalla.medium.com/"}},"coverImage":""}},{"node":{"tag":"web","title":"Service Mesh in Kubernetes â€” Pictorially","description":"Service Mesh in Kubernetes â€” Pictorially","duration":"5 min read","thumbnail_alt":"Service Mesh in Kubernetes â€” Pictorially","slug":"service-mesh-kubernetes-guide","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":"service-mesh-in-kubernetes/service-mesh-2.webp"}},{"node":{"tag":"web","title":"Javascript Sandbox for your Node Project","description":"Guide to safely run customer javascript code in your node.js environment using vm2.","duration":"3 min read","thumbnail_alt":"Sandbox with a pail and shovel","slug":"javascript-sandbox-for-your-node-project","tarkan":{"name":"Utkarsh Mehta","role":"Developer","image":"bitman.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://life-of-utkarsh.medium.com/"}},"coverImage":"javascript-sandbox-for-your-node-project/javascript-sandbox-for-your-node-project.png"}},{"node":{"tag":"web","title":"Why we refuse fixed bid projects","description":"Why we refuse fixed bid projects","duration":"4 min read","thumbnail_alt":"Why we refuse fixed bid projects","slug":"why-we-refuse-fixed-bid-project","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"why-we-refuse-fixed-bid-project/why-we-refuse-fixed-big-projects.webp"}},{"node":{"tag":"web","title":"Know Kubernetes - Pictorially","description":"Understand kubernetes and its components with easily relatable pictorial representations.","duration":"7 min read","thumbnail_alt":"Black and white sketch of a square room labelled 'MASTER' with the following items: disk pack, chest of drawers with a wifi signal-emitting device on top, and two tables","slug":"know-kubernetes-pictorially","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":""}},{"node":{"tag":"mobile","title":"Why flutter","description":"Look beyond react native and why flutter is exciting.","duration":"5 min read","thumbnail_alt":"A hummingbird in flight","slug":"why-flutter","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"why-flutter/why-flutter.png"}},{"node":{"tag":"web","title":"PDF Comparison in Pure Ruby","description":"PDF Comparison in Pure Ruby","duration":"2 min read","thumbnail_alt":"PDF Comparison in Pure Ruby","slug":"pdf-comparison-pure-ruby","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"pdf-comparison-in-pure-ruby/pdf-comparison-in-pure-ruby.webp"}},{"node":{"tag":"careers","title":"How we hire engineers","description":"How Tarka Labs hires engineers. Published in the interest of transparency.","duration":"3 min read","thumbnail_alt":"A dark room with two empty chairs facing each other across a table","slug":"how-we-hire-engineers","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"how-we-hire-engineers/how-we-hire-engineers.png"}},{"node":{"tag":"web","title":"Power of SSH Tunneling","description":"Most developers spend a considerable amount of their time ssh'd into remote machines, however, few are aware of the power of ssh tunnels.","duration":"4 min read","thumbnail_alt":"Silhouette of a man standing inside a glowing blue tunnel with a glowing white circle in front of him","slug":"power-of-ssh-tunneling","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"power-of-ssh-tunneling/power-of-ssh-tunneling.png"}},{"node":{"tag":"careers","title":"All in one's mind.","description":"The effectiveness of a positive mindset and the ability to self-assess.","duration":"4 min read","thumbnail_alt":"A growing plant is layered over the artwork of a human brain","slug":"all-in-ones-mind","tarkan":{"name":"Ramya Raghavan","role":"A tarkan","image":"bitman.png","blurb":"She is still thiking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ramyaraghavan"}},"coverImage":"all-in-ones-mind/onion.webp"}},{"node":{"tag":"web","title":"Event Delegation: Simple yet awesome!","description":"Event Delegation: Simple yet awesome!","duration":"2 min read","thumbnail_alt":"Event Delegation: Simple yet awesome!","slug":"event-delegation-simple-yet-awesome","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"event-delegation/event-delegation.webp"}}]}},"context":{}}