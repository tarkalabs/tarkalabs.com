{"hash":"ca63d4b895843a4474e6c91fad541ae01319d09e","data":{"blog":{"id":"9bac21e85d877887138ea658ba26ace6","slug":"neovim-as-java-ide","content":"<p><strong>Neovim</strong> has come a long way today from it’s original goal of being able to support asynchronous jobs. Today it comes packed with a ton of useful and high performance libraries and plugins. To add to that it also has a highly enthusiastic and vibrant community of lua developers who are working tirelessly to make neovim better.</p>\n<p>Today we’ll look at how one can easily configure neovim to work similar to a modern Java IDE.</p>\n<img src=\"https://miro.medium.com/v2/resize:fit:828/format:webp/1*s_H-IEIjYY4ZGlUS-nFUNg.png\">\n<h1 id=\"installing-dependencies\"><a href=\"#installing-dependencies\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing Dependencies</h1>\n<p>Ensure that you have the following dependencies installed on your system.</p>\n<ul>\n<li>Install NeoVIM, if you haven’t already. Needless to say this is a hard requirement</li>\n<li>Install Java (JDK), preferably version 17 or above for better compatibility with jdtls our Java Language Server</li>\n<li>Configure a NeoVIM to use a plugin manager. My plugin manager of choice is Lazy.nvim, however you can use any plugin manager you prefer, just refer to your plugin’s documentation for instructions on how to install and manage plugins that we’ll be using for this tutorial</li>\n</ul>\n<h1 id=\"install-java-specific-plugins\"><a href=\"#install-java-specific-plugins\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Install Java Specific Plugins</h1>\n<h2 id=\"install-the-plugin-none-ls-for-formatting\"><a href=\"#install-the-plugin-none-ls-for-formatting\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Install the Plugin none-ls for Formatting</h2>\n<p><a href=\"https://github.com/nvimtools/none-ls.nvim\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">none-ls</a> is a fork of <a href=\"https://github.com/jose-elias-alvarez/null-ls.nvim\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">null-ls</a> that is actively maintained.</p>\n<ol>\n<li>We install none-ls and configure it to use google-java-format as a formatter and checkstyle as a diagnostic.</li>\n<li>Checkstyle is configured with an additional argument to use the google checks xml file (this is from public domain).</li>\n<li>We also install <a href=\"https://github.com/jay-babu/mason-null-ls.nvim\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">mason-null-ls</a> that helps us ensure both google-java-format and checkstyle are installed using mason</li>\n</ol>\n<div class=\"gridsome-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\"><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"nvimtools/none-ls.nvim\"</span><span class=\"token punctuation\">,</span>\n        config <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">local</span> nls <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"null-ls\"</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">local</span> fmt <span class=\"token operator\">=</span> nls<span class=\"token punctuation\">.</span>builtins<span class=\"token punctuation\">.</span>formatting\n          <span class=\"token keyword\">local</span> dgn <span class=\"token operator\">=</span> nls<span class=\"token punctuation\">.</span>builtins<span class=\"token punctuation\">.</span>diagnostics\n          <span class=\"token keyword\">local</span> augroup <span class=\"token operator\">=</span> vim<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span><span class=\"token function\">nvim_create_augroup</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LspFormatting\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n          nls<span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            sources <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token comment\">-- # FORMATTING #</span>\n              fmt<span class=\"token punctuation\">.</span>google_java_format<span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> extra_args <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"--aosp\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token comment\">-- # DIAGNOSTICS #</span>\n              dgn<span class=\"token punctuation\">.</span>checkstyle<span class=\"token punctuation\">.</span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                extra_args <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span>\n                  vim<span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">.</span><span class=\"token function\">expand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"~/dotfiles/config/google_checks.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            on_attach <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">,</span> bufnr<span class=\"token punctuation\">)</span>\n              <span class=\"token keyword\">if</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">supports_method</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"textDocument/formatting\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">then</span>\n                vim<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span><span class=\"token function\">nvim_clear_autocmds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> group <span class=\"token operator\">=</span> augroup<span class=\"token punctuation\">,</span> buffer <span class=\"token operator\">=</span> bufnr <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                vim<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span><span class=\"token function\">nvim_create_autocmd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BufWritePre\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                  group <span class=\"token operator\">=</span> augroup<span class=\"token punctuation\">,</span>\n                  buffer <span class=\"token operator\">=</span> bufnr<span class=\"token punctuation\">,</span>\n                  callback <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>buf<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> bufnr <span class=\"token operator\">=</span> bufnr <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                  <span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n              <span class=\"token keyword\">end</span>\n            <span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"jay-babu/mason-null-ls.nvim\"</span><span class=\"token punctuation\">,</span>\n        event <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"BufReadPre\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"BufNewFile\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        dependencies <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token string\">\"williamboman/mason.nvim\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"nvimtools/none-ls.nvim\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        opt <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n          ensure_installed <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"checkstyle\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"google-java-format\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"install-dap-debug-adapter-protocol-client\"><a href=\"#install-dap-debug-adapter-protocol-client\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Install DAP (Debug Adapter Protocol client)</h2>\n<p>Here we’ll install the following plugins that help us setup a working DAP client that can be used for real-time debugging.</p>\n<ul>\n<li><a href=\"https://github.com/mfussenegger/nvim-dap\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">nvim-dap</a> DAP Client implementation for NeoVIM</li>\n<li><a href=\"https://github.com/rcarriga/nvim-dap-ui\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">nvim-dap-ui</a>: A UI for DAP</li>\n<li><a href=\"https://github.com/theHamsta/nvim-dap-virtual-text\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">nvim-dap-virtual-text</a>: A plugin that adds helpful virtual text for DAP</li>\n</ul>\n<div class=\"gridsome-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\"><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">-- DAP</span>\n    <span class=\"token string\">\"mfussenegger/nvim-dap\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">-- DAP UI</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token string\">\"rcarriga/nvim-dap-ui\"</span><span class=\"token punctuation\">,</span>\n\t\tlazy <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">,</span>\n\t\tdependencies <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"mfussenegger/nvim-dap\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"nvim-neotest/nvim-nio\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tconfig <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dapui\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">-- DAP Virtual Text</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token string\">\"theHamsta/nvim-dap-virtual-text\"</span><span class=\"token punctuation\">,</span>\n\t\tdependencies <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"mfussenegger/nvim-dap\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"nvim-treesitter/nvim-treesitter\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tconfig <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nvim-dap-virtual-text\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"install-lsp-plugins\"><a href=\"#install-lsp-plugins\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Install LSP Plugins</h2>\n<p>Here we’ll install the plugins to help with configuring NeoVIM LSP configuration for Java</p>\n<ul>\n<li><a href=\"https://github.com/williamboman/mason-lspconfig.nvim\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">mason-lspconfig.nvim</a>: This helps us ensure our required lsp servers are installed using mason</li>\n<li><a href=\"https://github.com/nvim-java/nvim-java\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">nvim-java</a>: For helping automate all configurations for Java in an automated way</li>\n</ul>\n<div class=\"gridsome-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\"><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"williamboman/mason-lspconfig.nvim\"</span><span class=\"token punctuation\">,</span>\n      dependencies <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"williamboman/mason.nvim\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"neovim/nvim-lspconfig\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">-- Setups up neovim for</span>\n    <span class=\"token comment\">-- 1. lsp (with the help of lspconfig)</span>\n    <span class=\"token comment\">-- 2. Dap configurations, etc.</span>\n    <span class=\"token comment\">-- LSP Configuration</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token string\">\"nvim-java/nvim-java\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"lsp-configuration\"><a href=\"#lsp-configuration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>LSP Configuration</h1>\n<p>Now that we have installed all the required plugins, we can configure LSP to work with NeoVIM. Here we’ll configure a bunch of LSP specific keybindings that are helpful in leveraging LSP functionality.</p>\n<div class=\"gridsome-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> on_attach <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span>\n  vim<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span><span class=\"token function\">nvim_set_option_value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"omnifunc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"v:lua.vim.lsp.omnifunc\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> buf <span class=\"token operator\">=</span> bufnr <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">local</span> nmap <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>keys<span class=\"token punctuation\">,</span> func<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> desc <span class=\"token keyword\">then</span>\n      desc <span class=\"token operator\">=</span> <span class=\"token string\">\"LSP: \"</span> <span class=\"token operator\">..</span> desc\n    <span class=\"token keyword\">end</span>\n\n    vim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> keys<span class=\"token punctuation\">,</span> func<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> buffer <span class=\"token operator\">=</span> bufnr<span class=\"token punctuation\">,</span> desc <span class=\"token operator\">=</span> desc <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token comment\">-- Useful LSP Keymaps</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gd\"</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>buf<span class=\"token punctuation\">.</span>definition<span class=\"token punctuation\">,</span> <span class=\"token string\">\"[G]oto [D]efinition\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gr\"</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>buf<span class=\"token punctuation\">.</span>references<span class=\"token punctuation\">,</span> <span class=\"token string\">\"[G]oto [R]eferences\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gI\"</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>buf<span class=\"token punctuation\">.</span>implementation<span class=\"token punctuation\">,</span> <span class=\"token string\">\"[G]oto [I]mplementation\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;leader>rn\"</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>buf<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">,</span> <span class=\"token string\">\"[R]e[n]ame\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;leader>ca\"</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>buf<span class=\"token punctuation\">.</span>code_action<span class=\"token punctuation\">,</span> <span class=\"token string\">\"[C]ode [A]ction\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;leader>D\"</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>buf<span class=\"token punctuation\">.</span>type_definition<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Type [D]efinition\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;leader>ds\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"telescope.builtin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>lsp_document_symbols<span class=\"token punctuation\">,</span> <span class=\"token string\">\"[D]ocument [S]ymbols\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;leader>ws\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"telescope.builtin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>lsp_dynamic_workspace_symbols<span class=\"token punctuation\">,</span> <span class=\"token string\">\"[W]orkspace [S]ymbols\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;leader>lr\"</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>codelens<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">,</span> <span class=\"token string\">\"[R]un [C]odelens\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;Leader>ih\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>inlay_hint<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">not</span> vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>inlay_hint<span class=\"token punctuation\">.</span><span class=\"token function\">is_enabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"[I]nlay [H]ints\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">-- See `:help K` for why this keymap</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"K\"</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>buf<span class=\"token punctuation\">.</span>hover<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hover Documentation\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;C-k>\"</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>buf<span class=\"token punctuation\">.</span>signature_help<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Signature Documentation\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">-- Lesser used LSP functionality</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gD\"</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>buf<span class=\"token punctuation\">.</span>declaration<span class=\"token punctuation\">,</span> <span class=\"token string\">\"[G]oto [D]eclaration\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;leader>wa\"</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>buf<span class=\"token punctuation\">.</span>add_workspace_folder<span class=\"token punctuation\">,</span> <span class=\"token string\">\"[W]orkspace [A]dd Folder\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;leader>wr\"</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>buf<span class=\"token punctuation\">.</span>remove_workspace_folder<span class=\"token punctuation\">,</span> <span class=\"token string\">\"[W]orkspace [R]emove Folder\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;leader>wl\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>vim<span class=\"token punctuation\">.</span><span class=\"token function\">inspect</span><span class=\"token punctuation\">(</span>vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>buf<span class=\"token punctuation\">.</span><span class=\"token function\">list_workspace_folders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"[W]orkspace [L]ist Folders\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">-- Diagnostics</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gl\"</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>diagnostic<span class=\"token punctuation\">.</span>open_float<span class=\"token punctuation\">,</span> <span class=\"token string\">\"[O]pen [D]iagnostics\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[d\"</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>diagnostic<span class=\"token punctuation\">.</span>goto_prev<span class=\"token punctuation\">,</span> <span class=\"token string\">\"[G]oto [P]revious Diagnostics\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">nmap</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"]d\"</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>diagnostic<span class=\"token punctuation\">.</span>goto_next<span class=\"token punctuation\">,</span> <span class=\"token string\">\"[G]oto [N]ext Diagnostics\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">-- Enable Inalay Hints if the lsp server supports it</span>\n  <span class=\"token keyword\">if</span> client<span class=\"token punctuation\">.</span>server_capabilities<span class=\"token punctuation\">.</span>inlayHintProvider <span class=\"token keyword\">then</span>\n    vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>inlay_hint<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">true</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mason\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">-- List of LSP servers to be installed using mason with the help of mason-lspconfig</span>\n<span class=\"token keyword\">local</span> servers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    jdtls <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        settings <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            java <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                configuration <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                    runtimes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token punctuation\">{</span>\n                            name <span class=\"token operator\">=</span> <span class=\"token string\">\"Java 22\"</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token comment\">-- Set this to the path of the JDK installation</span>\n                            path <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;path/to/jdk>\"</span><span class=\"token punctuation\">,</span>\n                            default <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">local</span> capabilities <span class=\"token operator\">=</span> vim<span class=\"token punctuation\">.</span>lsp<span class=\"token punctuation\">.</span>protocol<span class=\"token punctuation\">.</span><span class=\"token function\">make_client_capabilities</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncapabilities <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cmp_nvim_lsp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">default_capabilities</span><span class=\"token punctuation\">(</span>capabilities<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">local</span> mason_lspconfig <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mason-lspconfig\"</span><span class=\"token punctuation\">)</span>\nmason_lspconfig<span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  ensure_installed <span class=\"token operator\">=</span> vim<span class=\"token punctuation\">.</span><span class=\"token function\">tbl_keys</span><span class=\"token punctuation\">(</span>servers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nmason_lspconfig<span class=\"token punctuation\">.</span><span class=\"token function\">setup_handlers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>server_name<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lspconfig\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>server_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      capabilities <span class=\"token operator\">=</span> capabilities<span class=\"token punctuation\">,</span>\n      on_attach <span class=\"token operator\">=</span> on_attach<span class=\"token punctuation\">,</span>\n      settings <span class=\"token operator\">=</span> servers<span class=\"token punctuation\">[</span>server_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"dap-configuration\"><a href=\"#dap-configuration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>DAP Configuration</h1>\n<p>Now that LSP has been configured, lets configure DAP as well.</p>\n<div class=\"gridsome-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> dap<span class=\"token punctuation\">,</span> dapui <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dapui\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">-- Auto Open DAP UI when debugging starts</span>\ndap<span class=\"token punctuation\">.</span>listeners<span class=\"token punctuation\">.</span>after<span class=\"token punctuation\">.</span>event_initialized<span class=\"token punctuation\">[</span><span class=\"token string\">\"dapui_config\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  dapui<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token comment\">-- Auto Close DAP UI when debugging ends</span>\ndap<span class=\"token punctuation\">.</span>listeners<span class=\"token punctuation\">.</span>before<span class=\"token punctuation\">.</span>event_terminated<span class=\"token punctuation\">[</span><span class=\"token string\">\"dapui_config\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  dapui<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\ndap<span class=\"token punctuation\">.</span>listeners<span class=\"token punctuation\">.</span>after<span class=\"token punctuation\">.</span>event_exited<span class=\"token punctuation\">[</span><span class=\"token string\">\"dapui_config\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  dapui<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token comment\">-- Useful DAP Keymaps</span>\nvim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Leader>do\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dapui\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> desc <span class=\"token operator\">=</span> <span class=\"token string\">\"dapui.open\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nvim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Leader>dc\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">continue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> desc <span class=\"token operator\">=</span> <span class=\"token string\">\"dap.continue\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nvim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Leader>dso\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">step_over</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> desc <span class=\"token operator\">=</span> <span class=\"token string\">\"dap.step_over\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nvim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Leader>dsi\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">step_into</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> desc <span class=\"token operator\">=</span> <span class=\"token string\">\"dap.step_into\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nvim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Leader>dsb\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">step_out</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> desc <span class=\"token operator\">=</span> <span class=\"token string\">\"dap.step_out\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nvim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Leader>b\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toggle_breakpoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> desc <span class=\"token operator\">=</span> <span class=\"token string\">\"dap.toggle_breakpoint\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nvim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Leader>B\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set_breakpoint</span><span class=\"token punctuation\">(</span>vim<span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">.</span><span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Breakpoint condition: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> desc <span class=\"token operator\">=</span> <span class=\"token string\">\"dap.set_breakpoint with condition\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nvim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Leader>lp\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set_breakpoint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nil</span><span class=\"token punctuation\">,</span> vim<span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">.</span><span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Log point message: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> desc <span class=\"token operator\">=</span> <span class=\"token string\">\"dap.set_breakpoint with log point message\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nvim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Leader>dr\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>repl<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> desc <span class=\"token operator\">=</span> <span class=\"token string\">\"dap.repl.open\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nvim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Leader>dl\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">run_last</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> desc <span class=\"token operator\">=</span> <span class=\"token string\">\"dap.run_last\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nvim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Leader>dq\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dapui\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> desc <span class=\"token operator\">=</span> <span class=\"token string\">\"dapui.close\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nvim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"v\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Leader>dh\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dap.ui.widgets\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hover</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> desc <span class=\"token operator\">=</span> <span class=\"token string\">\"dap.ui.widgets.hover\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nvim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"v\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Leader>dp\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dap.ui.widgets\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">preview</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> desc <span class=\"token operator\">=</span> <span class=\"token string\">\"dap.ui.widgets.preview\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nvim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Leader>df\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">local</span> widgets <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dap.ui.widgets\"</span><span class=\"token punctuation\">)</span>\n  widgets<span class=\"token punctuation\">.</span><span class=\"token function\">centered_float</span><span class=\"token punctuation\">(</span>widgets<span class=\"token punctuation\">.</span>frames<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> desc <span class=\"token operator\">=</span> <span class=\"token string\">\"dap.ui.widgets.frames\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nvim<span class=\"token punctuation\">.</span>keymap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;Leader>dsc\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">local</span> widgets <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dap.ui.widgets\"</span><span class=\"token punctuation\">)</span>\n  widgets<span class=\"token punctuation\">.</span><span class=\"token function\">centered_float</span><span class=\"token punctuation\">(</span>widgets<span class=\"token punctuation\">.</span>scopes<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> desc <span class=\"token operator\">=</span> <span class=\"token string\">\"dap.ui.widgets.scopes\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>If you want to debug remotely or by running the debug server within docker, you can use the VS Code <code class=\"language-inline-text\">launch.json</code> file to configure the debug server.</p>\n<p>You can load vscode <code class=\"language-inline-text\">launch.json</code> file which is typically found ta <code class=\"language-inline-text\">./.vscode/launch.json</code> using this:</p>\n<div class=\"gridsome-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dap.ext.vscode\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">load_launchjs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>This is how your launch.json would look like :</p>\n<div class=\"gridsome-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"version\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"0.2.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"configurations\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Debug Project\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"java\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"request\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"attach\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"hostName\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"port\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8000</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"projectName\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&lt;project-name>\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"sourcePaths\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"mainClass\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"com.package.MainClass\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Conclusion</h1>\n<p>With this setup, Neovim now provides a robust environment for Java development, including syntax highlighting, LSP support, autocompletion, and debugging capabilities. This setup ensures that you have a streamlined and efficient workflow for Java development.</p>\n<p>If you have any questions or need further clarifications, feel free to ask.</p>\n"},"blogs":{"edges":[{"node":{"tag":"careers","title":"A Marketer's Guide to Surviving B2B IT Consulting","description":"","duration":"3 min read","thumbnail_alt":"A growing plant is layered over the artwork of a human brain","slug":"a-marketers-guide-to-surviving-b2b-it-consulting","tarkan":{"name":"Saudnya Kharade","role":"Brand Specialist","image":"saudnya.jpg","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"a-marketers-guide/b2b-blog.webp"}},{"node":{"tag":"web","title":"Blockchain as public ledger","description":"","duration":"5 min read","thumbnail_alt":"Blockchain FTW","slug":"smart-contracts-store-information","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":""}},{"node":{"tag":"web","title":"Using Tarka Chat in your React/Vue apps","description":"Using Tarka Chat in your React/Vue apps","duration":"5 min read","thumbnail_alt":"Using Tarka Chat in your React/Vue apps","slug":"using-tarka-chat-in-your-react-vue-apps","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"using-tarka-chat-in-your-react-vue-apps/Photo-by-Volodymyr-Hryshchenko-on-Unsplash.webp"}},{"node":{"tag":"web","title":"Neovim as a java IDE","description":"Neovim as a java IDE","duration":"5 min read","thumbnail_alt":"Neovim as a java IDE","slug":"neovim-as-java-ide","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":""}},{"node":{"tag":"consulting","title":"Navigating Change: The BA's Role in Managing Agile Transformations","description":"Navigating change: The BA's Role in Managing Agile Transformations","duration":"3 min read","thumbnail_alt":"Navigating change: The BA's Role in Managing Agile Transformations","slug":"navigating-change","tarkan":{"name":"Sparsh Gupta","role":"Product Owner","image":"sparsh.png","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@sparsh28"}},"coverImage":"navigating-change/navigating-change.webp"}},{"node":{"tag":"AI","title":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","description":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","duration":"7 min read","thumbnail_alt":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","slug":"extracting-structured-data","tarkan":{"name":"Kesavan","role":"Developer","image":"k7.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@itzk7"}},"coverImage":""}},{"node":{"tag":"web","title":"Functional Programming for Humans — Foundations","description":"Functional Programming for Humans — Foundations","duration":"6 min read","thumbnail_alt":"Functional Programming for Humans — Foundations","slug":"functional-programming-for-humans-foundation","tarkan":{"name":"Sameer Kumar","role":"Technical Consultant","image":"sameer.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"functional-programming-for-humans-foundation/Functional-Programming-for-Humans—Foundations.webp"}},{"node":{"tag":"web","title":"Leveraging DTO pattern in Go-based web apps","description":"Leveraging DTO pattern in Go-based web apps","duration":"4 min read","thumbnail_alt":"Leveraging DTO pattern in Go-based web apps","slug":"go-dto-pattern","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"go-dto-pattern/go-dto-pattern.webp"}},{"node":{"tag":"web","title":"Handling message duplication in Kafka","description":"Handling message duplication in Kafka","duration":"5 min read","thumbnail_alt":"Handling message duplication in Kafka","slug":"kafka-message-duplication","tarkan":{"name":"Vignesh Ravichandran","role":"Developer","image":"vignesh.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@vignesh-ravichandran"}},"coverImage":"kafka-message-duplication/kafka-message-duplication.webp"}},{"node":{"tag":"web","title":"Generic Callbacks in Rust","description":"Generic Callbacks in Rust","duration":"3 min read","thumbnail_alt":"Generic Callbacks in Rust","slug":"generic-callbacks-rust","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"generic-callbacks-rust/generic-callbacks-rust.webp"}},{"node":{"tag":"AI","title":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","description":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","duration":"8 min read","thumbnail_alt":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","slug":"batch-transcription","tarkan":{"name":"Kesavan","role":"Developer","image":"k7.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@itzk7"}},"coverImage":"batch-transcription/batch-transcription.webp"}},{"node":{"tag":"devops","title":"OpenText Magellan and AKS: An unofficial deployment guide","description":"OpenText Magellan and AKS: An unofficial deployment guide","duration":"11 min read","thumbnail_alt":"OpenText Magellan and AKS: An unofficial deployment guide","slug":"opentext-magellan-aks-unofficial-deployment-guide","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":""}},{"node":{"tag":"web","title":"Searching For The Perfect Fit: Our Move from Algolia to Typesense","description":"Our search for an open-source, cost-effective, scalable, and self-hosted solution led us to Typesense, an alternative to the very popular Algolia.","duration":"5 min read","thumbnail_alt":"Searching For The Perfect Fit: Our Move from Algolia to Typesense","slug":"searching-perfect-fit-move-from-algolia-to-typesense","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"searching-perfect-fit-move-from-algolia-to-typesense/searching-perfect-fit-move-from-algolia-to-typesense.webp"}},{"node":{"tag":"mobile","title":"5 essential tools and tips for every iOS developer","description":"5 essential tools and tips for every iOS developer","duration":"4 min read","thumbnail_alt":"5 essential tools and tips for every iOS developer","slug":"essential-tools-and-tips-for-every-ios-developer","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"ios-tips-and-tools/Recommended-tools-tips-for-iOS-developers.png"}},{"node":{"tag":"web","title":"Build your first Swift command-line tool with ArgumentParser","description":"Using Swift Package Manager (SPM) and swift-argument-parser, it's easy to create command-line tools in Swift. Here's how you can do it.","duration":"10 min read","thumbnail_alt":"Build your first Swift command-line tool with ArgumentParser","slug":"build-your-first-swift-command-line-tool-with-argumentparser","tarkan":{"name":"Ajith Renjala","role":"A tarkan","image":"bitman.png","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ajithrnayak"}},"coverImage":"build-your-first-swift-command-line-tool-with-argumentparser/build-your-first-swift-command-line-tool-with-argumentparser.webp"}},{"node":{"tag":"mobile","title":"The ultimate VPN detection guide for iOS and Android","description":"The ultimate VPN detection guide for iOS and Android","duration":"3 min read","thumbnail_alt":"The ultimate VPN detection guide for iOS and Android","slug":"vpn-detection-guide-ios-android","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"the-ultimate-vpn-detection/the-ultimate-vpn.webp"}},{"node":{"tag":"mobile","title":"React Native vs. Flutter in 2023: A Comprehensive Comparison","description":"A detailed comparison of React Native vs. Flutter to help engineering managers make decisions on how, where, and when to use React or Flutter.","duration":"14 min read","thumbnail_alt":"React Native vs. Flutter in 2023: A Comprehensive Comparison","slug":"react-native-vs-flutter-2023-comparison","tarkan":{"name":"Ajith Renjala","role":"A tarkan","image":"bitman.png","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ajithrnayak"}},"coverImage":"react-native-vs-flutter-2023-comparison/react-native-vs-flutter-2023-comparison.webp"}},{"node":{"tag":"mobile","title":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","description":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","duration":"3 min read","thumbnail_alt":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","slug":"kotlin-multiplatform-mobile","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"kotlin-multiplatform-mobile/kotlin-multiplatform-mobile.webp"}},{"node":{"tag":"web","title":"Reshaping data with PostgreSQL pivot tables","description":"Reshaping data with PostgreSQL pivot tables","duration":"4 min read","thumbnail_alt":"Reshaping data with PostgreSQL pivot tables","slug":"reshaping-data-postgresql-pivot-tables","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"reshaping-data-with-postgres/reshaping-data-with-postgreSQL.webp"}},{"node":{"tag":"web","title":"Effortlessly update YouTube videos on your Gridsome site","description":"How to build an auto-updating YouTube feed on your site using the YouTube API and Gridsome for Vue.js with step-by-step instructions and code samples.","duration":"10 min read","thumbnail_alt":"Effortlessly update YouTube videos on your Gridsome site","slug":"effortlessly-update-youtube-videos-on-your-gridsome-site","tarkan":{"name":"Ajith Renjala","role":"A tarkan","image":"bitman.png","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ajithrnayak"}},"coverImage":"effortlessly-update-youtube-videos-on-your-gridsome-site/effortlessly-update-youtube-videos-on-your-gridsome-site.webp"}},{"node":{"tag":"devops","title":"The only in-depth AWS ECS monitoring solution you'll need","description":"This is a detailed blog on how to set up in-depth AWS ECS monitoring. The bundled alerts that come with ECS are inadequate. DevOps teams need more insight to be efficient.","duration":"6 min read","thumbnail_alt":"The only in-depth AWS ECS monitoring solution you'll need","slug":"aws-ecs-monitoring-solution","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"aws-ecs-monitoring-solution/cover.gif"}},{"node":{"tag":"devops","title":"Designing a centralized alert routing system using AWS Lambda","description":"Who wouldn't love a centralized monitoring and alerting system, right? Are you in the process of consolidating all your alerting systems into a single one?","duration":"4 min read","thumbnail_alt":"Designing a centralized alert routing system using AWS Lambda","slug":"centralized-alert-routing-system-aws-lambda","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"centralized-alert-routing-system-aws-lambda/cover.gif"}},{"node":{"tag":"web","title":"Rate limiting for distributed environments","description":"Different ways to architect distributed environments with rate limiting code snippets available","duration":"5 min read","thumbnail_alt":"Rate limiting for distributed environments","slug":"rate-limiting-for-distributed-environments","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"rate-limiting-for-distributed-environments/rate-limiting-for-distributed-environments.webp"}},{"node":{"tag":"consulting","title":"Documentation: Yes, We Should!","description":"Imagine you recently joined a new team, and after a couple of weeks, you were assigned a bug ticket. You look at the ticket and decide to see if this issue surfaced in the past and so do a search in the bug tracking tool.","duration":"4 min read","thumbnail_alt":"A 3D image of a file folder with purple, yellow and green color rectangles for pages","slug":"documentation-yes-we-should","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"documentation-yes-we-should/documentation-yes-we-should.png"}},{"node":{"tag":"mobile","title":"Java Life vs Kotlin Life","description":"Developers using Kotlin don't use it to its fullest potential because they use it just like Java. Kotlin is so much more powerful and concise. Here's how.","duration":"3 min read","thumbnail_alt":"Java Life vs Kotlin Life","slug":"java-life-vs-kotlin-life","tarkan":{"name":"Nandagopal Ravichandran","role":"Mobile Developer","image":"nanda.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"java-life-vs-kotlin-life/java-life-vs-kotlin-life.webp"}},{"node":{"tag":"consulting","title":"Building Serious Software","description":"Do you know what every software startup entrepreneur dreams of after they validate the market? Software that does not break with scale and is adaptable to change.","duration":"4 min read","thumbnail_alt":"A cartoon of loosely held blocks which are held by stick figures from collapsing","slug":"building-serious-software","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":"building-serious-software/banner.png"}},{"node":{"tag":"consulting","title":"Wait! Don't write code yet","description":"As developers, it is necessary to understand how the code we write helps solve real-world problems. Often, it is easier to think about users while writing the application layer of code.","duration":"3 min read","thumbnail_alt":"A isometric image of a 3D maze","slug":"wait-dont-write-code-yet","tarkan":{"name":"Vidhya Desikan","role":"Developer","image":"vidhya.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@vdviddin"}},"coverImage":"wait-dont-write-code-yet/wait-dont-write-code-yet.png"}},{"node":{"tag":"web","title":"Rust : Testing API Requests — HttpMock","description":"Rust : Testing API Requests — HttpMock","duration":"3 min read","thumbnail_alt":"Rust : Testing API Requests — HttpMock","slug":"rust-testing-api-requests-httpmock","tarkan":{"name":"Arun Kumar","role":"A tarkan","image":"anonymous.jpg","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@arunkumar_33617"}},"coverImage":"rust-testing/Rust-testing.webp"}},{"node":{"tag":"web","title":"Considering a GraphQL switch? Here's why it is worth it.","description":"Considering a switch to GraphQL? From better data aggregation to schema stitching, here's why you should consider adopting GraphQL in your stack.","duration":"5 min read","thumbnail_alt":"Considering a GraphQL switch? Here's why it is worth it.","slug":"graphql-switch-worth-it","tarkan":{"name":"Deepak Prasanna","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@deepakprasanna"}},"coverImage":"graphql-switch-worth-it/graphql-switch-worth-it.webp"}},{"node":{"tag":"consulting","title":"What does a CTO do?","description":"There has been a lot of hand-wringing and discussions about what a CTO does on the interwebs. Does a CTO write code? Does a CTO's calendar look like it is on the maker's or the manager's schedule? Does a CTO sit in on interviews?","duration":"6 min read","thumbnail_alt":"A isometric image of a balancing scale with code on one side and detective lens on the other side","slug":"what-does-a-cto-do","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"what-does-a-cto-do/cover.png"}},{"node":{"tag":"careers","title":"A writer's guide to working in a tech consultancy","description":"A manual for writers who work with cross-functional teams or roles.","duration":"4 min read","thumbnail_alt":"A circular red shape surrounded by cubes","slug":"a-writers-guide-to-working-in-a-tech-consultancy","tarkan":{"name":"Puneetha Jagannathan","role":"Brand Communications Specialist","image":"puneetha.jpg","blurb":"She is still thiking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://puneetha-j.medium.com/"}},"coverImage":"a-writers-guide-to-working-in-a-tech-consultancy/a-writers-guide-to-working-in-a-tech-consultancy.png"}},{"node":{"tag":"mobile","title":"How to create shortcuts in your Android app","description":"Here's how you can implement static, dynamic and pinned shortcuts using our code snippets and guidelines.","duration":"4 min read","thumbnail_alt":"How to create shortcuts in your Android app","slug":"create-shortcuts-android-app","tarkan":{"name":"Raja Jawahar","role":"Mobile Developer","image":"raja.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"create-shortcuts-android-app/create-shortcuts-android-app.webp"}},{"node":{"tag":"mobile","title":"Launching a screen within an app using custom Siri voice commands","description":"Here's how you can configure NSUserActivity and IntentsUI in iOS to enable users to navigate to a specific screen inside an app using voice commands.","duration":"3 min read","thumbnail_alt":"Launching a screen within an app using custom Siri voice commands","slug":"launch-screen-siri-voice-commands","tarkan":{"name":"Naren Krishna","role":"iOS Developer","image":"naren.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"launch-screen-siri-voice-commands/launch-screen-siri-voice-commands.gif"}},{"node":{"tag":"web","title":"Testim 101: Automation Testing on Steroids","description":"Testim is an AI-based testing framework that helps you automate website testing. Here's a detailed review of its features, pros, and cons.","duration":"5 min read","thumbnail_alt":"Testim 101: Automation Testing on Steroids","slug":"testim-automation-testing-on-steroids","tarkan":{"name":"Sameer Kumar","role":"Technical Consultant","image":"sameer.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"testim-automation-testing-on-steroids/testim-automation-testing-on-steroids.webp"}},{"node":{"tag":"web","title":"How to setup SFTP in Golang Authentication Using Go","description":"How to setup SFTP in Golang Authentication Using Go","duration":"2 min read","thumbnail_alt":"How to setup SFTP in Golang Authentication Using Go","slug":"set-up-sftp-authentication-go","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":""}},{"node":{"tag":"devops","title":"An introductory guide to functional programming concepts","description":"An introductory guide to functional programming concepts","duration":"10 min read","thumbnail_alt":"An introductory guide to functional programming concepts","slug":"introductory-guide-functional-programming-concepts","tarkan":{"name":"Sreedev Kodichath","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://sreedevk.medium.com/"}},"coverImage":"introductory-guide-functional-programming-concepts/introductory-guide-functional-programming-concepts.gif"}},{"node":{"tag":"design","title":"Trying out Material You. A tale of two background colors.","description":"Trying out Material You. A tale of two background colors.","duration":"7 min read","thumbnail_alt":"Trying out Material You. A tale of two background colors.","slug":"material-you-critique-light-mode-background-color-m3","tarkan":{"name":"Andy Reed","role":"A tarkan","image":"anonymous.jpg","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@andy.reed89"}},"coverImage":"material-you-critique-light-mode-background-color-m3/material-you-critique-light-mode-background-color-m3.webp"}},{"node":{"tag":"web","title":"How to Build a Web Application using Rust — Part III","description":"How to Build a Web Application using Rust — Part III","duration":"2 min read","thumbnail_alt":"How to Build a Web Application using Rust — Part III","slug":"how-to-build-a-web-application-with-rust-part-3","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"how-to-build-a-web-application-with-rust-part-3/how-to-build-a-web-application-with-rust-part-3.webp"}},{"node":{"tag":"devops","title":"Handling multiple environments with Helm","description":"Handling multiple environments with Helm","duration":"4 min read","thumbnail_alt":"Handling multiple environments with Helm","slug":"handling-multiple-environments-with-helm","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"handling-multiple-environments-with-helm/handling-multiple-environments-with-helm.webp"}},{"node":{"tag":"devops","title":"How to reduce your Node.js docker image size by 70%","description":"How to reduce your Node.js docker image size by 70%","duration":"4 min read","thumbnail_alt":"How to reduce your Node.js docker image size by 70%","slug":"reduce-nodejs-docker-image-size","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"reduce-nodejs-docker-image-size/how-to-reduce.gif"}},{"node":{"tag":"web","title":"How to build a Web Application with Rust: Part II","description":"How to build a Web Application with Rust: Part II","duration":"2 min read","thumbnail_alt":"How to build a Web Application with Rust: Part II","slug":"how-to-build-a-web-application-with-rust-part-2","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"how-to-build-a-web-application-with-rust-part-2/how-to-build-a-web-application-with-rust-part-2.webp"}},{"node":{"tag":"","title":"How to build a Web Application with Rust: Part I","description":"How to build a Web Application with Rust: Part I","duration":"2 min read","thumbnail_alt":"How to build a Web Application with Rust: Part I","slug":"how-to-build-a-web-application-with-rust-part-1","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"how-to-build-a-web-application-with-rust-part-1/how-to-build-a-web-application-with-rust-part-1.webp"}},{"node":{"tag":"careers","title":"Our Guide To Hiring Great People","description":"How Tarka Labs approaches hiring.","duration":"5 min read","thumbnail_alt":"Colors in geometric shapes with hand-drawn sketches on them","slug":"our-guide-to-hiring-great-people","tarkan":{"name":"Jenifa Newlin","role":"People Champion","image":"jenifa.jpg","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@jenifa_85990"}},"coverImage":"our-guide-to-hiring-great-people/our-guide-to-hiring-great-people.png"}},{"node":{"tag":"devops","title":"Digital Audio 101: Playing Audio From A Microcontroller","description":"Digital Audio 101: Playing Audio From A Microcontroller","duration":"7 min read","thumbnail_alt":"Digital Audio 101: Playing Audio From A Microcontroller","slug":"digital-audio-101-playing-audio-from-a-microcontroller","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"digital-audio-101-playing-audio-from-a-microcontroller/digital-audio-101-playing-audio-from-a-microcontroller.gif"}},{"node":{"tag":"web","title":"What I learned refactoring a monolith into microservices","description":"Here are my learnings from 6 months of refactoring a monolithic MEAN stack web application running on docker inside a virtual machine.","duration":"4 min read","thumbnail_alt":"What I learned refactoring a monolith into microservices","slug":"refactoring-monolith-into-microservices","tarkan":{"name":"Utkarsh Mehta","role":"Developer","image":"bitman.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://life-of-utkarsh.medium.com/"}},"coverImage":"refactoring-monolith-into-microservices/refactoring-monolith-into-microservices.webp"}},{"node":{"tag":"consulting","title":"Don't Rewrite, Refactor: Why Brownfield Development Helps","description":"If you're finding it hard to build and ship new features, spending time to read and refactor the existing code can be better than rewriting it.","duration":"3 min read","thumbnail_alt":"Don't Rewrite, Refactor: Why Brownfield Development Helps","slug":"dont-rewrite-refactor-brownfield-development","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"dont-rewrite-refactor-brownfield-development/dont-rewrite-refactor-brownfield-development.webp"}},{"node":{"tag":"web","title":"Exploring Headless CMS","description":"Exploring Headless CMS","duration":"9 min read","thumbnail_alt":"Exploring Headless CMS","slug":"exploring-headless-cms","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"exploring-headless-cms/exploring-headless-cms.webp"}},{"node":{"tag":"blockchain","title":"My thoughts on Substrate","description":"My thoughts on Substrate","duration":"9 min read","thumbnail_alt":"My thoughts on Substrate","slug":"my-thoughts-on-substrate","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"my-thoughts-on-substrate/my-thoughts-on-substrate.webp"}},{"node":{"tag":"web","title":"Learnings from a failed product","description":"Learnings from a failed product","duration":"3 min read","thumbnail_alt":"Learnings from a failed product","slug":"learnings-from-a-failed-product","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"learning-from-a-failed-product/learning-from.webp"}},{"node":{"tag":"","title":"Filling images with mosaic colors using D3.js","description":"Filling images with mosaic colors using D3.js","duration":"3 min read","thumbnail_alt":"Filling images with mosaic colors using D3.js","slug":"filling-images-with-mosaic-colors-using-d3js","tarkan":{"name":"Alen Thomas","role":"A tarkan","image":"anonymous.jpg","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@alenthomas9"}},"coverImage":"filling-images-with-mosaic-colors-using-d3js/filling-images-with-mosaic-colors-using-d3js.webp"}},{"node":{"tag":"web","title":"How To Learn Coding Through Live Streaming","description":"How To Learn Coding Through Live Streaming","duration":"5 min read","thumbnail_alt":"How To Learn Coding Through Live Streaming","slug":"learn-coding-through-live-streaming","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"learn-youtube-video/rahul-blog-1.webp"}},{"node":{"tag":"web","title":"Remote pairing in mac (with low latency)","description":"Remote pairing in mac (with low latency)","duration":"3 min read","thumbnail_alt":"Remote pairing in mac (with low latency)","slug":"remote-pairing-mac-low-latency","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":""}},{"node":{"tag":"mobile","title":"Debounce in Swift","description":"All about debounce: 4 ways to achieve debounce in Swift","duration":"5 min read","thumbnail_alt":"A representation of a function called 'debounce' which is accepting, as input, a green circle labelled '3' and outputting an identical-looking green circle with no label","slug":"debounce-in-swift","tarkan":{"name":"Pavan Kumar C","role":"iOS Developer","image":"pavan.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://pavankumarchalla.medium.com/"}},"coverImage":""}},{"node":{"tag":"web","title":"Service Mesh in Kubernetes — Pictorially","description":"Service Mesh in Kubernetes — Pictorially","duration":"5 min read","thumbnail_alt":"Service Mesh in Kubernetes — Pictorially","slug":"service-mesh-kubernetes-guide","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":"service-mesh-in-kubernetes/service-mesh-2.webp"}},{"node":{"tag":"web","title":"Javascript Sandbox for your Node Project","description":"Guide to safely run customer javascript code in your node.js environment using vm2.","duration":"3 min read","thumbnail_alt":"Sandbox with a pail and shovel","slug":"javascript-sandbox-for-your-node-project","tarkan":{"name":"Utkarsh Mehta","role":"Developer","image":"bitman.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://life-of-utkarsh.medium.com/"}},"coverImage":"javascript-sandbox-for-your-node-project/javascript-sandbox-for-your-node-project.png"}},{"node":{"tag":"web","title":"Deploying your Rails application using dokku","description":"Deploying your Rails application using dokku","duration":"5 min read","thumbnail_alt":"Deploying your Rails application using dokku","slug":"how-to-deploy-rails-application-with-dokku","tarkan":{"name":"Vinoth","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@avinoth"}},"coverImage":"how-to-deploy-rails-application-with-dokku/header.webp"}},{"node":{"tag":"web","title":"Searching with MongoDB and Elastic Search","description":"Searching with MongoDB and Elastic Search","duration":"4 min read","thumbnail_alt":"Searching with MongoDB and Elastic Search","slug":"searching-with-mongodb-and-elastic-search","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"searching-with-mongodb-and-elastic-search/header.webp"}},{"node":{"tag":"web","title":"All You Need To Know About Comments in Ruby","description":"All You Need To Know About Comments in Ruby","duration":"5 min read","thumbnail_alt":"All You Need To Know About Comments in Ruby","slug":"all-you-need-to-know-about-comments-in-ruby","tarkan":{"name":"Sreedev Kodichath","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://sreedevk.medium.com/"}},"coverImage":"all-you-need-to-know-about-comments-in-ruby/header.webp"}},{"node":{"tag":"AI","title":"Person of Interest: How I built a Facial Recognition Machine Learning model.","description":"Person of Interest: How I built a Facial Recognition Machine Learning model.","duration":"5 min read","thumbnail_alt":"Person of Interest: How I built a Facial Recognition Machine Learning model.","slug":"building-a-facial-recognition-machine-learning-model","tarkan":{"name":"Rajiv Manivannan","role":"Developer","image":"rajiv.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"building-a-facial-recognition-machine-learning-model/1.webp"}},{"node":{"tag":"web","title":"Why we refuse fixed bid projects","description":"Why we refuse fixed bid projects","duration":"4 min read","thumbnail_alt":"Why we refuse fixed bid projects","slug":"why-we-refuse-fixed-bid-project","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"why-we-refuse-fixed-bid-project/why-we-refuse-fixed-big-projects.webp"}},{"node":{"tag":"web","title":"Know Kubernetes - Pictorially","description":"Understand kubernetes and its components with easily relatable pictorial representations.","duration":"7 min read","thumbnail_alt":"Black and white sketch of a square room labelled 'MASTER' with the following items: disk pack, chest of drawers with a wifi signal-emitting device on top, and two tables","slug":"know-kubernetes-pictorially","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":""}},{"node":{"tag":"mobile","title":"Why flutter","description":"Look beyond react native and why flutter is exciting.","duration":"5 min read","thumbnail_alt":"A hummingbird in flight","slug":"why-flutter","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"why-flutter/why-flutter.png"}},{"node":{"tag":"web","title":"PDF Comparison in Pure Ruby","description":"PDF Comparison in Pure Ruby","duration":"2 min read","thumbnail_alt":"PDF Comparison in Pure Ruby","slug":"pdf-comparison-pure-ruby","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"pdf-comparison-in-pure-ruby/pdf-comparison-in-pure-ruby.webp"}},{"node":{"tag":"careers","title":"How we hire engineers","description":"How Tarka Labs hires engineers. Published in the interest of transparency.","duration":"3 min read","thumbnail_alt":"A dark room with two empty chairs facing each other across a table","slug":"how-we-hire-engineers","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"how-we-hire-engineers/how-we-hire-engineers.png"}},{"node":{"tag":"web","title":"Power of SSH Tunneling","description":"Most developers spend a considerable amount of their time ssh'd into remote machines, however, few are aware of the power of ssh tunnels.","duration":"4 min read","thumbnail_alt":"Silhouette of a man standing inside a glowing blue tunnel with a glowing white circle in front of him","slug":"power-of-ssh-tunneling","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"power-of-ssh-tunneling/power-of-ssh-tunneling.png"}},{"node":{"tag":"careers","title":"All in one's mind.","description":"The effectiveness of a positive mindset and the ability to self-assess.","duration":"4 min read","thumbnail_alt":"A growing plant is layered over the artwork of a human brain","slug":"all-in-ones-mind","tarkan":{"name":"Ramya Raghavan","role":"A tarkan","image":"bitman.png","blurb":"She is still thiking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ramyaraghavan"}},"coverImage":"all-in-ones-mind/onion.webp"}},{"node":{"tag":"web","title":"Event Delegation: Simple yet awesome!","description":"Event Delegation: Simple yet awesome!","duration":"2 min read","thumbnail_alt":"Event Delegation: Simple yet awesome!","slug":"event-delegation-simple-yet-awesome","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"event-delegation/event-delegation.webp"}},{"node":{"tag":"devops","title":"Automating cluster creation with Terraform on DigitalOcean","description":"Automating cluster creation with Terraform on DigitalOcean","duration":"4 min read","thumbnail_alt":"Automating cluster creation with Terraform on DigitalOcean","slug":"automating-cluster-creation-with-terraform-on-digitalocean","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":""}},{"node":{"tag":"AI","title":"Part 2- Creating a neural network using tensorflow to colorize grayscale images.","description":"Part 2- Creating a neural network using tensorflow to colorize grayscale images.\n","duration":"4 min read","thumbnail_alt":"","slug":"colorize-grayscale-images-pt-2","tarkan":{"name":"Deepak Prasanna","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@deepakprasanna"}},"coverImage":""}},{"node":{"tag":"AI","title":"Part I — Creating a neural network using tensorflow to colorize grayscale images.","description":"Part I — Creating a neural network using tensorflow to colorize grayscale images","duration":"4 min read","thumbnail_alt":"","slug":"colorize-grayscale-images-pt-1","tarkan":{"name":"Deepak Prasanna","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@deepakprasanna"}},"coverImage":""}}]}},"context":{}}