{"hash":"f3e9a5f748ca34c62cf71f17e13d28001608b0d5","data":{"blog":{"id":"a7653e8ecf0509d97c043c1bd02cd205","slug":"debounce-in-swift","content":"<p>Often times we come to a situation where we have to search 100 000+ records from local database (coredata or realm) or from a file or a plist etc.</p>\n<p>And when user starts to search, each key press will make the call to method that queries this large data resulting in unresponsive app.</p>\n<p>One way to optimise this will be implementing debounce.</p>\n<img src=\"/blog/debounce-in-swift/debounce-timeline.png\">\n<h2 id=\"what-is-debounce\"><a href=\"#what-is-debounce\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>What is debounce?</h2>\n<p>Its a function which forces the execution to wait a certain amount of time before running again.</p>\n<p>We have 4(may be more) ways to achieve debounce in Swift</p>\n<h1 id=\"timer\"><a href=\"#timer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Timer</h1>\n<p>Timers are a great way to run code on a repeating basis, and iOS has the <code class=\"language-inline-text\">Timer</code> class to handle it.</p>\n<div class=\"gridsome-code-title\"><span>TimerDebounce.swift</span></div><div class=\"gridsome-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> searchTimer<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Timer</span><span class=\"token operator\">?</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">updateSearchResults</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">for</span> searchController<span class=\"token punctuation\">:</span> <span class=\"token class-name\">UISearchController</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">//Invalidate and Reinitialise</span>\n  <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>searchTimer<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">invalidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">guard</span> <span class=\"token keyword\">let</span> searchText <span class=\"token operator\">=</span> searchController<span class=\"token punctuation\">.</span>searchBar<span class=\"token punctuation\">.</span>text <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">}</span>\n\n  searchTimer <span class=\"token operator\">=</span> <span class=\"token class-name\">Timer</span><span class=\"token punctuation\">.</span><span class=\"token function\">scheduledTimer</span><span class=\"token punctuation\">(</span>withTimeInterval<span class=\"token punctuation\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> repeats<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> block<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">weak</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n    <span class=\"token class-name\">DispatchQueue</span><span class=\"token punctuation\">.</span><span class=\"token function\">global</span><span class=\"token punctuation\">(</span>qos<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>userInteractive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">weak</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span>\n      <span class=\"token comment\">//Use search text and perform the query</span>\n      <span class=\"token class-name\">DispatchQueue</span><span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//Update UI</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-inline-text\">updateSearchResults</code> is the UISearchController delegate method which gets called on each key press.</p>\n<p><code class=\"language-inline-text\">searchTimer</code> is an instance variable to store the <code class=\"language-inline-text\">Timer</code>, Timer is scheduled to execute the closure for 0.5s but if the method gets called before that, then the timer is invalidated and reinitialised.</p>\n<h1 id=\"dispatchworkitem\"><a href=\"#dispatchworkitem\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>DispatchWorkItem</h1>\n<p>A <code class=\"language-inline-text\">DispatchWorkItem</code> encapsulates work to be performed on a dispatch queue or within a dispatch group.</p>\n<div class=\"gridsome-code-title\"><span>DispatchWorkItemDebounce.swift</span></div><div class=\"gridsome-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> searchTask<span class=\"token punctuation\">:</span> <span class=\"token class-name\">DispatchWorkItem</span><span class=\"token operator\">?</span>\n\n<span class=\"token comment\">//SearchController delegate method</span>\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">updateSearchResults</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">for</span> searchController<span class=\"token punctuation\">:</span> <span class=\"token class-name\">UISearchController</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">guard</span> <span class=\"token keyword\">let</span> searchText <span class=\"token operator\">=</span> searchController<span class=\"token punctuation\">.</span>searchBar<span class=\"token punctuation\">.</span>text <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">//Invalidate and reinitiate</span>\n  <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>searchTask<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">let</span> task <span class=\"token operator\">=</span> <span class=\"token class-name\">DispatchWorkItem</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">weak</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span>\n    <span class=\"token class-name\">DispatchQueue</span><span class=\"token punctuation\">.</span><span class=\"token function\">global</span><span class=\"token punctuation\">(</span>qos<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>userInteractive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">weak</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span>\n      <span class=\"token comment\">//Use search text and perform the query</span>\n      <span class=\"token class-name\">DispatchQueue</span><span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//Update UI</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>searchTask <span class=\"token operator\">=</span> task\n\n  <span class=\"token comment\">//0.5 is the wait or idle time for execution of the function applyFilter</span>\n  <span class=\"token class-name\">DispatchQueue</span><span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span><span class=\"token function\">asyncAfter</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">:</span> <span class=\"token class-name\">DispatchTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> execute<span class=\"token punctuation\">:</span> task<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-inline-text\">updateSearchResults</code> is the UISearchController delegate method which gets called on each key press.</p>\n<p><code class=\"language-inline-text\">searchTask</code> has the property to store <code class=\"language-inline-text\">DispatchWorkItem</code>. DispatchQueue executes the DispatchWorkItem closure after the deadline time 0.5s and if the method gets called before the deadline then the searchTask is invalidated and reinitialised.</p>\n<h1 id=\"rxswift\"><a href=\"#rxswift\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>RxSwift</h1>\n<p><code class=\"language-inline-text\">RxSwift</code> is a framework for interacting with the Swift programming language, while <code class=\"language-inline-text\">RxCocoa</code> is a framework that makes Cocoa APIs used in iOS, easier to use with reactive techniques.</p>\n<p>First you will have to add RxSwift and RxCocoa to the project. You could use Cocoapods or Carthage or Swift Package Manager to add these dependencies</p>\n<div class=\"gridsome-code-title\"><span>RxSwiftDebounce.swift</span></div><div class=\"gridsome-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">//Import Rx dependencies</span>\n<span class=\"token keyword\">import</span> <span class=\"token class-name\">RxSwift</span>\n<span class=\"token keyword\">import</span> <span class=\"token class-name\">RxCocoa</span>\n\n<span class=\"token comment\">//holds all the disposables</span>\n<span class=\"token keyword\">let</span> disposeBag <span class=\"token operator\">=</span> <span class=\"token class-name\">DisposeBag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">viewDidLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">viewDidLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">applyRxSwiftSearch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//Initialise the publisher and subscriber for search</span>\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">applyRxSwiftSearch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  searchController<span class=\"token punctuation\">.</span>searchBar\n    <span class=\"token punctuation\">.</span>rx<span class=\"token punctuation\">.</span>text\n    <span class=\"token punctuation\">.</span><span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token function\">milliseconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> scheduler<span class=\"token punctuation\">:</span> <span class=\"token class-name\">MainScheduler</span><span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>onNext<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">unowned</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">]</span> query <span class=\"token keyword\">in</span>\n      <span class=\"token class-name\">DispatchQueue</span><span class=\"token punctuation\">.</span><span class=\"token function\">global</span><span class=\"token punctuation\">(</span>qos<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>userInteractive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">weak</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span>\n        <span class=\"token comment\">//Use search text and perform the query</span>\n        <span class=\"token class-name\">DispatchQueue</span><span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">//Update UI</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">disposed</span><span class=\"token punctuation\">(</span>by<span class=\"token punctuation\">:</span> disposeBag<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Disposebag is used for memory management and it holds all the disposables and allows us not to have to dispose of each subscription individually</p>\n<p>searchBar is wrapped to Rx and is subscribed to search text changes.</p>\n<p>debounce() listens to user events and publishes if there is a delay of 0.5s in user activity.</p>\n<p>Subscriber receives the event of the search text which then is queried against the actual records.</p>\n<p>DisposeBag collects all the disposables.</p>\n<h1 id=\"combine\"><a href=\"#combine\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Combine</h1>\n<p><code class=\"language-inline-text\">Combine</code> is Apple’s new reactive framework for handling events over time. Combine Framework is Natively supported from iOS 13 and Swift 5 onwards.</p>\n<p>First you will have to import Combine Framework.</p>\n<div class=\"gridsome-code-title\"><span>CombineDebounce.swift</span></div><div class=\"gridsome-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">//Import Framework</span>\n<span class=\"token keyword\">import</span> <span class=\"token class-name\">Combine</span>\n\n<span class=\"token comment\">//holds all the cancellables</span>\n<span class=\"token keyword\">var</span> cancellable <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">AnyCancellable</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">viewDidLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">viewDidLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">applyCombineSearch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//Initialise the publisher and subscriber for search</span>\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">applyCombineSearch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> publisher <span class=\"token operator\">=</span> <span class=\"token class-name\">NotificationCenter</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">.</span><span class=\"token function\">publisher</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">UISearchTextField</span><span class=\"token punctuation\">.</span>textDidChangeNotification<span class=\"token punctuation\">,</span> object<span class=\"token punctuation\">:</span> searchController<span class=\"token punctuation\">.</span>searchBar<span class=\"token punctuation\">.</span>searchTextField<span class=\"token punctuation\">)</span>\n  publisher\n    <span class=\"token punctuation\">.</span>map <span class=\"token punctuation\">{</span>\n      <span class=\"token punctuation\">(</span><span class=\"token short-argument\">$0</span><span class=\"token punctuation\">.</span>object <span class=\"token keyword\">as</span><span class=\"token operator\">!</span> <span class=\"token class-name\">UISearchTextField</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span><span class=\"token function\">milliseconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> scheduler<span class=\"token punctuation\">:</span> <span class=\"token class-name\">RunLoop</span><span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">sink</span><span class=\"token punctuation\">(</span>receiveValue<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n    <span class=\"token class-name\">DispatchQueue</span><span class=\"token punctuation\">.</span><span class=\"token function\">global</span><span class=\"token punctuation\">(</span>qos<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>userInteractive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">weak</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span>\n      <span class=\"token comment\">//Use search text and perform the query</span>\n      <span class=\"token class-name\">DispatchQueue</span><span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//Update UI</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">store</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">in</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>cancellable<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cancellable is a protocol indicating that an activity or action supports cancellation. It frees up any allocated resources. It also stops side effects such as timers, network access, or disk I/O.</p>\n<p>Publisher publishes the events whenever there is a change in the text in searchBar.</p>\n<p>debounce() listens to user events and publishes if there is a delay of 0.5s in user activity.</p>\n<p>sink() collects all the cancellable activities.</p>\n<h1 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Conclusion</h1>\n<p>The query happens only if the user activity is idle for 0.5s while entering the search text, in this way we would be limiting a lot of redundant queries which results in app being responsive.</p>\n<p>Now we are left with a question. Which one to choose?</p>\n<p>In my opinion, if you are using RxSwift or Combine in your projects then you already know what you should go for and if you aren’t then using RxSwift or Combine to achieve debounce is bit overkill, in which case you could achieve using Timer or DispatchWorkItem.</p>\n<p>Please find the sample solution here:\n<a href=\"https://github.com/pavankumarchalla/ResponsiveSearch?source=post_page-----e8f8ce22f544--------------------------------\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a></p>\n<p>Thanks for reading. Happy coding.</p>\n"},"blogs":{"edges":[{"node":{"tag":"web","title":"Using Tarka Chat in your React/Vue apps","description":"Using Tarka Chat in your React/Vue apps","duration":"5 min read","thumbnail_alt":"Using Tarka Chat in your React/Vue apps","slug":"using-tarka-chat-in-your-react-vue-apps","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"using-tarka-chat-in-your-react-vue-apps/Photo-by-Volodymyr-Hryshchenko-on-Unsplash.webp"}},{"node":{"tag":"web","title":"Neovim as a java IDE","description":"Neovim as a java IDE","duration":"5 min read","thumbnail_alt":"Neovim as a java IDE","slug":"neovim-as-java-ide","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":""}},{"node":{"tag":"consulting","title":"Navigating Change: The BA's Role in Managing Agile Transformations","description":"Navigating change: The BA's Role in Managing Agile Transformations","duration":"3 min read","thumbnail_alt":"Navigating change: The BA's Role in Managing Agile Transformations","slug":"navigating-change","tarkan":{"name":"Sparsh Gupta","role":"Product Owner","image":"sparsh.png","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@sparsh28"}},"coverImage":"navigating-change/navigating-change.webp"}},{"node":{"tag":"AI","title":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","description":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","duration":"7 min read","thumbnail_alt":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","slug":"extracting-structured-data","tarkan":{"name":"Kesavan","role":"Developer","image":"k7.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@itzk7"}},"coverImage":""}},{"node":{"tag":"","title":"Functional Programming for Humans — Foundations","description":"Functional Programming for Humans — Foundations","duration":"6 min read","thumbnail_alt":"Functional Programming for Humans — Foundations","slug":"functional-programming-for-humans-foundation","tarkan":{"name":"Sameer Kumar","role":"Technical Consultant","image":"sameer.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"functional-programming-for-humans-foundation/Functional-Programming-for-Humans—Foundations.webp"}},{"node":{"tag":"web","title":"Leveraging DTO pattern in Go-based web apps","description":"Leveraging DTO pattern in Go-based web apps","duration":"4 min read","thumbnail_alt":"Leveraging DTO pattern in Go-based web apps","slug":"go-dto-pattern","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"go-dto-pattern/go-dto-pattern.webp"}},{"node":{"tag":"web","title":"Handling message duplication in Kafka","description":"Handling message duplication in Kafka","duration":"5 min read","thumbnail_alt":"Handling message duplication in Kafka","slug":"kafka-message-duplication","tarkan":{"name":"Vignesh Ravichandran","role":"Developer","image":"vignesh.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@vignesh-ravichandran"}},"coverImage":"kafka-message-duplication/kafka-message-duplication.webp"}},{"node":{"tag":"web","title":"Generic Callbacks in Rust","description":"Generic Callbacks in Rust","duration":"3 min read","thumbnail_alt":"Generic Callbacks in Rust","slug":"generic-callbacks-rust","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"generic-callbacks-rust/generic-callbacks-rust.webp"}},{"node":{"tag":"AI","title":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","description":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","duration":"8 min read","thumbnail_alt":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","slug":"batch-transcription","tarkan":{"name":"Kesavan","role":"Developer","image":"k7.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@itzk7"}},"coverImage":"batch-transcription/batch-transcription.webp"}},{"node":{"tag":"mobile","title":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","description":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","duration":"3 min read","thumbnail_alt":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","slug":"kotlin-multiplatform-mobile","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"kotlin-multiplatform-mobile/kotlin-multiplatform-mobile.webp"}},{"node":{"tag":"consulting","title":"Documentation: Yes, We Should!","description":"Imagine you recently joined a new team, and after a couple of weeks, you were assigned a bug ticket. You look at the ticket and decide to see if this issue surfaced in the past and so do a search in the bug tracking tool.","duration":"4 min read","thumbnail_alt":"A 3D image of a file folder with purple, yellow and green color rectangles for pages","slug":"documentation-yes-we-should","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"documentation-yes-we-should/documentation-yes-we-should.png"}},{"node":{"tag":"consulting","title":"Building Serious Software","description":"Do you know what every software startup entrepreneur dreams of after they validate the market? Software that does not break with scale and is adaptable to change.","duration":"4 min read","thumbnail_alt":"A cartoon of loosely held blocks which are held by stick figures from collapsing","slug":"building-serious-software","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":"building-serious-software/banner.png"}},{"node":{"tag":"consulting","title":"Wait! Don't write code yet","description":"As developers, it is necessary to understand how the code we write helps solve real-world problems. Often, it is easier to think about users while writing the application layer of code.","duration":"3 min read","thumbnail_alt":"A isometric image of a 3D maze","slug":"wait-dont-write-code-yet","tarkan":{"name":"Vidhya Desikan","role":"Developer","image":"vidhya.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@vdviddin"}},"coverImage":"wait-dont-write-code-yet/wait-dont-write-code-yet.png"}},{"node":{"tag":"consulting","title":"What does a CTO do?","description":"There has been a lot of hand-wringing and discussions about what a CTO does on the interwebs. Does a CTO write code? Does a CTO's calendar look like it is on the maker's or the manager's schedule? Does a CTO sit in on interviews?","duration":"6 min read","thumbnail_alt":"A isometric image of a balancing scale with code on one side and detective lens on the other side","slug":"what-does-a-cto-do","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"what-does-a-cto-do/cover.png"}},{"node":{"tag":"careers","title":"A writer's guide to working in a tech consultancy","description":"A manual for writers who work with cross-functional teams or roles.","duration":"4 min read","thumbnail_alt":"A circular red shape surrounded by cubes","slug":"a-writers-guide-to-working-in-a-tech-consultancy","tarkan":{"name":"Puneetha Jagannathan","role":"Brand Communications Specialist","image":"puneetha.jpg","blurb":"She is still thiking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://puneetha-j.medium.com/"}},"coverImage":"a-writers-guide-to-working-in-a-tech-consultancy/a-writers-guide-to-working-in-a-tech-consultancy.png"}},{"node":{"tag":"web","title":"How to setup SFTP in Golang Authentication Using Go","description":"How to setup SFTP in Golang Authentication Using Go","duration":"2 min read","thumbnail_alt":"How to setup SFTP in Golang Authentication Using Go","slug":"set-up-sftp-authentication-go","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":""}},{"node":{"tag":"devops","title":"How to reduce your Node.js docker image size by 70%","description":"How to reduce your Node.js docker image size by 70%","duration":"4 min read","thumbnail_alt":"How to reduce your Node.js docker image size by 70%","slug":"reduce-nodejs-docker-image-size","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"reduce-nodejs-docker-image-size/how-to-reduce.gif"}},{"node":{"tag":"careers","title":"Our Guide To Hiring Great People","description":"How Tarka Labs approaches hiring.","duration":"5 min read","thumbnail_alt":"Colors in geometric shapes with hand-drawn sketches on them","slug":"our-guide-to-hiring-great-people","tarkan":{"name":"Jenifa Newlin","role":"People Champion","image":"jenifa.jpg","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@jenifa_85990"}},"coverImage":"our-guide-to-hiring-great-people/our-guide-to-hiring-great-people.png"}},{"node":{"tag":"web","title":"Remote pairing in mac (with low latency)","description":"Remote pairing in mac (with low latency)","duration":"3 min read","thumbnail_alt":"Remote pairing in mac (with low latency)","slug":"remote-pairing-mac-low-latency","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":""}},{"node":{"tag":"mobile","title":"Debounce in Swift","description":"All about debounce: 4 ways to achieve debounce in Swift","duration":"5 min read","thumbnail_alt":"A representation of a function called 'debounce' which is accepting, as input, a green circle labelled '3' and outputting an identical-looking green circle with no label","slug":"debounce-in-swift","tarkan":{"name":"Pavan Kumar C","role":"iOS Developer","image":"pavan.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://pavankumarchalla.medium.com/"}},"coverImage":""}},{"node":{"tag":"web","title":"Javascript Sandbox for your Node Project","description":"Guide to safely run customer javascript code in your node.js environment using vm2.","duration":"3 min read","thumbnail_alt":"Sandbox with a pail and shovel","slug":"javascript-sandbox-for-your-node-project","tarkan":{"name":"Utkarsh Mehta","role":"Developer","image":"bitman.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://life-of-utkarsh.medium.com/"}},"coverImage":"javascript-sandbox-for-your-node-project/javascript-sandbox-for-your-node-project.png"}},{"node":{"tag":"web","title":"Know Kubernetes - Pictorially","description":"Understand kubernetes and its components with easily relatable pictorial representations.","duration":"7 min read","thumbnail_alt":"Black and white sketch of a square room labelled 'MASTER' with the following items: disk pack, chest of drawers with a wifi signal-emitting device on top, and two tables","slug":"know-kubernetes-pictorially","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":""}},{"node":{"tag":"mobile","title":"Why flutter","description":"Look beyond react native and why flutter is exciting.","duration":"5 min read","thumbnail_alt":"A hummingbird in flight","slug":"why-flutter","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"why-flutter/why-flutter.png"}},{"node":{"tag":"careers","title":"How we hire engineers","description":"How Tarka Labs hires engineers. Published in the interest of transparency.","duration":"3 min read","thumbnail_alt":"A dark room with two empty chairs facing each other across a table","slug":"how-we-hire-engineers","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"how-we-hire-engineers/how-we-hire-engineers.png"}},{"node":{"tag":"web","title":"Power of SSH Tunneling","description":"Most developers spend a considerable amount of their time ssh'd into remote machines, however, few are aware of the power of ssh tunnels.","duration":"4 min read","thumbnail_alt":"Silhouette of a man standing inside a glowing blue tunnel with a glowing white circle in front of him","slug":"power-of-ssh-tunneling","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"power-of-ssh-tunneling/power-of-ssh-tunneling.png"}},{"node":{"tag":"careers","title":"All in one's mind.","description":"The effectiveness of a positive mindset and the ability to self-assess.","duration":"4 min read","thumbnail_alt":"A growing plant is layered over the artwork of a human brain","slug":"all-in-ones-mind","tarkan":{"name":"Ramya Raghavan","role":"A tarkan","image":"bitman.png","blurb":"She is still thiking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ramyaraghavan"}},"coverImage":"all-in-ones-mind/onion.webp"}}]}},"context":{}}