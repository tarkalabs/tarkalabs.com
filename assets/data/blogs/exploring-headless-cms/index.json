{"hash":"349efe6f807fb4dc611d3a5c293683182afb837a","data":{"blog":{"id":"011a013c67df97592314f9cc35550611","slug":"exploring-headless-cms","content":"<p>For the while now I have heard rumblings of <a href=\"https://jamstack.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jamstack</a> and in particular the buzz around the world of headless CMS (Content Management System) so I decide to take a dive and explore what the hype is all about.</p>\n<h2 id=\"jamstack-whats-that\"><a href=\"#jamstack-whats-that\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Jamstack… what’s that?</h2>\n<p>Jamstack is a software architecture based on three building blocks; <em>client-side</em> JavaScript, <em>reusable</em> API and <em>prebuilt</em> Markup. The underlying principle of Jamstack is to deliver your application as flat HTML as quickly as possible and achieve dynamic behaviour by calling various self-owned and third-party APIs. Headless CMS is one of the popular Jamstack approaches.</p>\n<h2 id=\"what-is-a-headless-cms\"><a href=\"#what-is-a-headless-cms\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>What is a Headless CMS?</h2>\n<p>Before diving in, it would be good to understand what really is a headless CMS. Here’s a definition found on <a href=\"https://en.wikipedia.org/wiki/Headless_content_management_system\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Wikipedia</a>:</p>\n<blockquote>\n<p>A headless CMS is a <strong>back-end only</strong> content management system (CMS) built from the ground up as a <strong>content repository</strong> that makes content <strong>accessible via an API</strong> for display on any device.</p>\n</blockquote>\n<p>The three key points in the above definition are:</p>\n<ul>\n<li>back-end only</li>\n<li>content repository</li>\n<li>accessible via API</li>\n</ul>\n<p>Therefore, when working with a headless CMS we are focusing primarily on the content storage and retrieval and NOT the presentation of content. In other words, a headless CMS provides you with tools to manage content and an API to pull the content.</p>\n<h1 id=\"why-use-a-headless-cms\"><a href=\"#why-use-a-headless-cms\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Why use a “Headless” CMS?</h1>\n<p>Before the smartphone revolution (circa 2007) content on the internet was primarily consumed using a browser. During those times a <em>traditional</em> CMS would consist a whole package that would include:</p>\n<ul>\n<li><strong>Backend</strong>: Database, Admin interface, Plugins</li>\n<li><strong>Frontend</strong>: Templating engine, Views layer</li>\n</ul>\n<p>As technology evolved over the past decade consumption of digital content expanded to multiple viewports and devices like smartphones, tablets, smartwatches, etc. Although <em>traditional</em> CMS use of responsive design would accommodate different viewports it would fail for devices that are consuming content outside the realm of a browser. This is where headless CMS shines as it inherently separates the data layer from the presentation layer, it provides an API to pull content and delegates the concern of presentation to the frontend application.</p>\n<h1 id=\"minimum-viable-product-mvp\"><a href=\"#minimum-viable-product-mvp\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Minimum Viable Product (MVP)</h1>\n<p>To facilitate the exploration I set myself a goal to build the backend for news publishing website. The MVP should includes the following features:</p>\n<ol>\n<li>Post story articles with image</li>\n<li>For the home page provide the editor the ability to select from three layout variations for “Top Stories” section:</li>\n</ol>\n<ul>\n<li>One large top story</li>\n<li>Two top stories</li>\n<li>Three top stories</li>\n</ul>\n<p>Here’s a visual representation of the above home page layout options</p>\n<img src=\"/blog/exploring-headless-cms/1.webp\">\n<h2 id=\"the-solutions\"><a href=\"#the-solutions\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>The Solutions</h2>\n<p>Although the ecosystem of <a href=\"https://jamstack.org/headless-cms/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">headless CMS</a> has a plethora of choices available, in the interest of time I decided to look at the following three solutions:</p>\n<ul>\n<li><a href=\"https://strapi.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Strapi</a></li>\n<li><a href=\"https://www.sanity.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Sanity</a></li>\n<li><a href=\"https://www.contentful.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Contentful</a></li>\n</ul>\n<h1 id=\"strapi\"><a href=\"#strapi\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Strapi</h1>\n<p><a href=\"https://strapi.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Strapi</a> is one of the most popular open source headless CMS. When compared to the other two headless CMSes (Sanity and Contentful) it gives you <em>complete control</em> over the backend storage and admin interface used.</p>\n<p><strong>Setup</strong>\nBelow is how we would quickly setup a Strapi project along with GraphQL plugin using <a href=\"https://strapi.io/documentation/developer-docs/latest/installation/cli.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">command line</a>.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npx create-strapi-app strapi-publishing --quickstart\n$ strapi install graphql</code></pre></div>\n<p>Next we need to create an admin user by accessing: <a href=\"http://localhost:1337/admin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://localhost:1337/admin</a>.</p>\n<p><strong>Content Modeling</strong></p>\n<p>Strapi has rich constructs to model entities in your system. There are two <strong>types</strong> of models:</p>\n<ol>\n<li>Content Types: Traditional models that represent an entities in your system like post, tags, etc..</li>\n<li>Components: Represents a custom collection of information (e.g. card component containing an image, title and summary fields).</li>\n</ol>\n<p>The “Content Types” model are further categorized into two <strong>kinds</strong>:</p>\n<ol>\n<li>Collection Type: Allows multiple instances of the type (e.g. post).</li>\n<li>Single Type: Allows only a single instance of the type (e.g. homepage).</li>\n</ol>\n<p>For our MVP we would need a “Content Type” type model that is of “Collection Type” kind called <code class=\"language-inline-text\">article</code>. We will create is using CLI as follows:</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ strapi generate:api article title:string summary:string body:richtext --draft-and-publish</code></pre></div>\n<p>We would also like to add a cover image attribute to this model. But since this depends on <code class=\"language-inline-text\">strapi-plugin-upload</code> it is easier to do this using the admin panel:</p>\n<p><a href=\"https://drive.google.com/file/d/1HqgLM6vcMK0z6xtwKI6Abe75TOVe8Es3/view?source=post_page-----f94466b765a2--------------------------------\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Adding image field to model</a></p>\n<p>Next we need to model our home page. As the home page is primarily a collection of existing <code class=\"language-inline-text\">articles</code> we would need to create a “Component” type model that is of “Single Type” kind called <code class=\"language-inline-text\">homepage</code>. There is no CLI options provided to create this type so we can use the <a href=\"https://strapi.io/documentation/user-docs/latest/content-types-builder/introduction-to-content-types-builder.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Content-Types Builder</a> in the admin panel to create this type.</p>\n<p>First we build an <code class=\"language-inline-text\">ArticleCard</code> component that would store the necessary information to display a story on the home page. This component would be reused to create the different layouts of the homepage.</p>\n<img src=\"/blog/exploring-headless-cms/2.webp\">\n<p>Next we would create three additional components for the three different layouts:</p>\n<ul>\n<li><strong>OneTopStory:</strong> Contains <code class=\"language-inline-text\">ArticleCard</code> as single component.</li>\n</ul>\n<img src=\"/blog/exploring-headless-cms/3.webp\">\n<ul>\n<li><strong>TwoTopStories</strong>: Contains <code class=\"language-inline-text\">ArticleCard</code> as repeatable component with validation rules of max and min value of 2.</li>\n</ul>\n<img src=\"/blog/exploring-headless-cms/4.webp\">\n<ul>\n<li><strong>ThreeTopStories</strong>:Contains <code class=\"language-inline-text\">ArticleCard</code> as repeatable component with validation rules of max and min value of 3.</li>\n</ul>\n<img src=\"/blog/exploring-headless-cms/5.webp\">\n<p>Strapi has a powerful native feature called <a href=\"https://strapi.io/blog/release-beta-18-dynamic-zones\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dynamic Zones</a> which allows you to create complex UI structure dynamically. Using Dynamic Zones we can quickly implement the feature that would allow the editor to choose between the three different layout without having to write any code.</p>\n<p><a href=\"https://drive.google.com/file/d/1SGBURC-35XAok7qnIM8KuMMfMzGr1pwC/view?source=post_page-----f94466b765a2--------------------------------\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Create Homepage model</a></p>\n<p><strong>Querying content</strong></p>\n<p>With the content modelling completed for our MVP we can add content and query them in GraphQL playground at <a href=\"http://localhost:1337/graphql\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://localhost:1337/graphql</a></p>\n<p><strong>A few additional learning:</strong></p>\n<ul>\n<li>The API endpoint and admin panel are the same code. This simplifies adding your own customization and business logic. The downside off course is that you are responsible for managing the API endpoint.</li>\n<li>Strapi provides <a href=\"https://strapi.io/documentation/developer-docs/latest/concepts/models.html#lifecycle-hooks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">lifecycle hooks</a> for models. This can be very helpful if you want to perform custom business logic before returning results.</li>\n<li><a href=\"https://strapi.io/documentation/developer-docs/latest/concepts/policies.html#policies\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Policies</a> allows you to implement cross-cutting concerns easily.</li>\n<li>Limited document workflow. Currently, it only supports “Draft” and “Publish” workflow.</li>\n<li>Deleting content types is not straightforward. It required manually deleting model/api files and restarting the server.</li>\n</ul>\n<h1 id=\"sanity\"><a href=\"#sanity\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Sanity</h1>\n<p><a href=\"https://www.sanity.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Sanity</a> is another popular headless CMS. Sanity manages the storage layer and provides a custom open source query language <a href=\"https://www.sanity.io/docs/overview-groq\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GROQ</a> to query for content. Sanity Studio is used to work with content.</p>\n<p><strong>Setup</strong></p>\n<p>Below is how we would quickly setup a Sanity project using <a href=\"https://strapi.io/documentation/developer-docs/latest/installation/cli.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">command line</a>:</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm install -g @sanity/cli\n$ sanity init -y --create-project \"Sanity Publishing Demo\" \\\n  --dataset publishing-demo \\\n  --visibility private</code></pre></div>\n<p><strong>Note</strong>: If you want to start from scratch for project template choose <em>“Clean project with no predefined schemas”</em></p>\n<p>Next we start Sanity Studio</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sanity start</code></pre></div>\n<p>Sanity Studio should now be accessible at <a href=\"http://localhost:3333/desk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://localhost:3333/</a>. If you didn’t select any pre-existing template you would see the following message:</p>\n<blockquote>\n<p>Empty schema</p>\n<p>Your schema does not contain any document types. If it did, those types would be listed here. Read more about how to add schema types.</p>\n</blockquote>\n<p>So let’s create our document types.</p>\n<p><strong>Content Modeling</strong></p>\n<p><a href=\"https://www.sanity.io/docs/content-modelling\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Creating models</a> in Sanity is a manual process that requires creating JavaScript files to define the models in your system. Sanity supports a number of <a href=\"https://www.sanity.io/docs/schema-types\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">schema types</a>. The two important types that we will use are:</p>\n<ul>\n<li><a href=\"https://www.sanity.io/docs/document-type\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">document</a>: Traditional model that represent an entities in your system like post, tags, etc..</li>\n<li><a href=\"https://www.sanity.io/docs/object-type\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">object</a>: Represents a custom collection of information (e.g. card component containing an image, title and summary fields).</li>\n</ul>\n<p>For our MVP we would need a document type called <code class=\"language-inline-text\">article</code>. Inside <code class=\"language-inline-text\">schemas</code> folder of your project create a file called <code class=\"language-inline-text\">article.</code>js with following lines of code:</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"article\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Article\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"document\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">fields</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Title\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cover\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Cover\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">hotspot</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"slug\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Slug\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"slug\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">source</span><span class=\"token operator\">:</span> <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">maxLength</span><span class=\"token operator\">:</span> <span class=\"token number\">96</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"summary\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Summary\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"body\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Body\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Next we need to tell Sanity about our new document type by adding it to <code class=\"language-inline-text\">schemas/schema.js</code></p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> createSchema <span class=\"token keyword\">from</span> <span class=\"token string\">\"part:@sanity/base/schema-creator\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> schemaTypes <span class=\"token keyword\">from</span> <span class=\"token string\">\"all:part:@sanity/base/schema-type\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> article <span class=\"token keyword\">from</span> <span class=\"token string\">\"./article\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">createSchema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">types</span><span class=\"token operator\">:</span> schemaTypes<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>article<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Sanity Studio reloads and now you should see the <code class=\"language-inline-text\">Article</code> document type listed under “Content”.</p>\n<img src=\"/blog/exploring-headless-cms/6.webp\">\n<p>Next we will replicate the steps we followed in Strapi by creating the necessary object types as follows:</p>\n<ol>\n<li><code class=\"language-inline-text\">[articleCard](https://gist.github.com/jahangiranwari/6b380ad5285fffeb2ed3b3001dcb12ba)</code>: contains <code class=\"language-inline-text\">headline</code> , <code class=\"language-inline-text\">summary</code> and <code class=\"language-inline-text\">cover</code> attributes along with a reference to <code class=\"language-inline-text\">article</code></li>\n<li><code class=\"language-inline-text\">[oneTopStory](https://gist.github.com/jahangiranwari/545e42fe3a6b109d846df7f8e1d75855)</code>: contains <code class=\"language-inline-text\">articleCard</code> as single field.</li>\n<li><code class=\"language-inline-text\">[topTwoStories](https://gist.github.com/jahangiranwari/33f1b0618e6a1a3c0c2a544599f0c60e)</code>: contains two <code class=\"language-inline-text\">articleCard</code> as fields grouped in <a href=\"https://www.sanity.io/docs/object-type#fieldsets-b8b5507db1d3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">fieldset</a>.</li>\n<li><code class=\"language-inline-text\">[topThreeStories](https://gist.github.com/jahangiranwari/cdf70413a6ebd6813c648c0cfcc40a0d)</code>: contains three <code class=\"language-inline-text\">articleCard</code> as fields grouped in <a href=\"https://www.sanity.io/docs/object-type#fieldsets-b8b5507db1d3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">fieldset</a>.</li>\n<li><code class=\"language-inline-text\">[topStories](https://gist.github.com/jahangiranwari/a6f68e4742dc1cd33eaaf0b93b93733c)</code>: applies <a href=\"https://www.sanity.io/guides/how-to-use-structured-content-for-page-building\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">page builder pattern</a> that allows editor to select one of the three layouts.</li>\n</ol>\n<p>With the required object types in place we can now create a <code class=\"language-inline-text\">homepage</code>document type that has a single <code class=\"language-inline-text\">topStories</code> field.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"homepage\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"document\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Home Page\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">fields</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"topStories\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"topStories\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>After creating the required types our <code class=\"language-inline-text\">schema.js</code> looks like this:</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> createSchema <span class=\"token keyword\">from</span> <span class=\"token string\">\"part:@sanity/base/schema-creator\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> schemaTypes <span class=\"token keyword\">from</span> <span class=\"token string\">\"all:part:@sanity/base/schema-type\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> article <span class=\"token keyword\">from</span> <span class=\"token string\">\"./article\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> articleCard <span class=\"token keyword\">from</span> <span class=\"token string\">\"./objects/articleCard\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> oneTopStory <span class=\"token keyword\">from</span> <span class=\"token string\">\"./objects/oneTopStory\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> topTwoStories <span class=\"token keyword\">from</span> <span class=\"token string\">\"./objects/topTwoStories\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> topThreeStories <span class=\"token keyword\">from</span> <span class=\"token string\">\"./objects/topThreeStories\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> topStories <span class=\"token keyword\">from</span> <span class=\"token string\">\"./objects/topStories\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> homepage <span class=\"token keyword\">from</span> <span class=\"token string\">\"./homepage\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">createSchema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">types</span><span class=\"token operator\">:</span> schemaTypes<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    article<span class=\"token punctuation\">,</span>\n    articleCard<span class=\"token punctuation\">,</span>\n    oneTopStory<span class=\"token punctuation\">,</span>\n    topTwoStories<span class=\"token punctuation\">,</span>\n    topThreeStories<span class=\"token punctuation\">,</span>\n    topStories<span class=\"token punctuation\">,</span>\n    homepage\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Once Sanity reloads we can see our HomePage type available in Sanity Studio:</p>\n<img src=\"/blog/exploring-headless-cms/7.webp\">\n<p><strong>Querying content</strong></p>\n<p>With the content modelling completed for our MVP we can add content and query them in GraphQL playground. But before we can query in GraphQL we need to deploy</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sanity login\n$ sanity graphql deploy</code></pre></div>\n<p>Once the deployment completes the GraphQL playground is accessible at <a href=\"https://%5C%5BprojectId%5C%5D.api.sanity.io/v1/graphql/%5C%5Bdataset%5C%5D/default\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://\\[projectId\\].api.sanity.io/v1/graphql/\\[dataset\\]/default</a></p>\n<p><strong>A few additional learning:</strong></p>\n<ul>\n<li>To retrieve content Sanity provides multiple CDN backed endpoints (i.e. <a href=\"https://www.sanity.io/docs/api-cdn\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">API CDN</a>, <a href=\"https://www.sanity.io/docs/asset-cdn\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Asset CDN</a>). This makes your backend robust. The downside is that your ability to perform customization on the backend is limited.</li>\n<li>As Sanity Studio is a React app it can be easily extended.</li>\n<li>Sanity Studio can be customized for complex layout <a href=\"https://www.sanity.io/docs/overview-structure-builder\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Structure Builder</a>.</li>\n<li>You can implement a <a href=\"https://www.sanity.io/docs/custom-workflows\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">custom document workflow</a>.</li>\n<li><a href=\"https://www.sanity.io/docs/access-control#custom-access-control-ce4a077926aa\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Custom access control</a> is available in enterprise plan.</li>\n<li><a href=\"https://www.sanity.io/docs/localization\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Localization</a> can be done at field or document level. But it requires some effort in getting it setup.</li>\n</ul>\n<h1 id=\"contentful\"><a href=\"#contentful\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Contentful</h1>\n<p><a href=\"https://www.contentful.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Contentful</a> is another well known headless CMS. Unlike Sanity and Strapi the admin interface is hosted by Contentful.</p>\n<p><strong>Setup</strong></p>\n<p>To create a Contentful application we first need to create a space. <a href=\"https://www.contentful.com/help/contentful-101/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">This guide</a> provides a good explanation of setting up a space.</p>\n<p><strong>Content Modeling</strong></p>\n<p>Contentful support creating <a href=\"https://www.contentful.com/developers/docs/concepts/data-model/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">custom types</a> and provides a number of field types. The <a href=\"https://github.com/contentful/contentful-cli/tree/master/docs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CLI tool</a> currently doesn’t support creating content types from command line. So we use the content management web app to create the models. Under “Content model” we create <code class=\"language-inline-text\">Article</code> type with following fields:</p>\n<img src=\"/blog/exploring-headless-cms/8.webp\">\n<p>For home page content type tried to create reusable component like <code class=\"language-inline-text\">ArticleCard</code>by following this <a href=\"https://www.contentful.com/blog/2019/01/11/building-flexible-content-models-budget/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">blog post</a> but could not get it working. So ended up with a working but not ideal solution of creating a <em>1-many</em> reference to articles and a checkbox to select a layout. This solution has no validations and relies on editor making the correct selections.</p>\n<img src=\"/blog/exploring-headless-cms/9.webp\">\n<p><strong>Querying content</strong></p>\n<p>With the content modelling completed for our MVP we can add content and query them in GraphQL playground. To do that we would need to install the app first by going to <a href=\"https://app.contentful.com/spaces/%5Bspace-id%5D/apps?app=graphql-playground\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://app.contentful.com/spaces/[space-id]/apps?app=graphql-playground</a></p>\n<p>After installation you can access the GraphQL playground at this URL: <a href=\"https://app.contentful.com/spaces/%5Bspace-id%5D/apps/app_installations/graphql-playground/graphql\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://app.contentful.com/spaces/[space-id]/apps/app_installations/graphql-playground/graphql</a></p>\n<p><strong>A few additional learning:</strong></p>\n<ul>\n<li>Existing apps are available for installation from Contentful’s <a href=\"https://www.contentful.com/marketplace/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">marketplace</a>.</li>\n<li>Has rich validation and appearance options for fields.</li>\n<li>Has <a href=\"https://www.contentful.com/developers/docs/tutorials/general/setting-locales/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">localization</a> support out-of-the-box.</li>\n<li>Adding custom behaviour to the admin interface requires developing a custom extension by following the painful approach of <a href=\"https://contentful.com/developers/docs/extensibility/app-framework/create-contentful-app/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">creating a contentful app</a> and then installing it to your space.</li>\n<li>Similar to Sanity, Contentful provides multiple <a href=\"https://www.contentful.com/developers/docs/concepts/apis/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CDN backed APIs</a> (e.g. Content Delivery API, Images API, etc.)</li>\n<li>Running a few nested GraphQL queries to retrieve embedded entries information would too often result in TOO_COMPLEX_QUERY error. Could be because I was using a “free” space.</li>\n</ul>\n<h1 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Conclusion</h1>\n<p>Headless CMS provides a quick and flexible way of managing and pulling content. However, choosing between the different solutions available depends on specific requirements of the project. Below are a few requirements and suggestion on which would be the suitable CMSes.</p>\n<ul>\n<li>Full control: Strapi</li>\n<li>Execute custom business logic when handling API query: Strapi</li>\n<li>Ease of customization content management interface: Strapi / Sanity</li>\n<li>Ease of creating custom types: Strapi / Contentful</li>\n<li>Out-of-the-box CDN support for API endpoints: Sanity / Contentful</li>\n<li>Localization: Contentful</li>\n<li>Marketplace: Contentful / Sanity</li>\n</ul>\n<blockquote>\n<p>Hello Montreal! We’ll be at the <a href=\"https://startupfestival.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Startupfest ’22</a> all three days, so drop by and say hi. We’d love to see what you’re building, and early birds get a free (limited) design audit or tech consultation. DM us on Twitter (<a href=\"https://twitter.com/tarkalabs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@tarkalabs</a>) and let’s talk.</p>\n</blockquote>\n"},"blogs":{"edges":[{"node":{"tag":"web","title":"Scaling Royalty Payouts in Music Distribution: Challenges and Solutions from the Frontlines (Part 2)","description":"Scaling Royalty Payouts in Music Distribution: Challenges and Solutions from the Frontlines (Part 2)","duration":"5 min read","thumbnail_alt":"","slug":"scaling-royalty-payout-p2","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":""}},{"node":{"tag":"web","title":"Scaling Royalty Payouts in Music Distribution: Challenges and Solutions from the Frontlines (Part 1)","description":"Scaling Royalty Payouts in Music Distribution: Challenges and Solutions from the Frontlines (Part 1)","duration":"6 min read","thumbnail_alt":"","slug":"scaling-royalty-payout-p1","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":""}},{"node":{"tag":"careers","title":"A Marketer's Guide to Surviving B2B IT Consulting","description":"","duration":"3 min read","thumbnail_alt":"A growing plant is layered over the artwork of a human brain","slug":"a-marketers-guide-to-surviving-b2b-it-consulting","tarkan":{"name":"Saudnya Kharade","role":"Brand Specialist","image":"saudnya.jpg","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"a-marketers-guide/b2b-blog.webp"}},{"node":{"tag":"web","title":"Blockchain as public ledger","description":"","duration":"5 min read","thumbnail_alt":"Blockchain FTW","slug":"smart-contracts-store-information","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":""}},{"node":{"tag":"web","title":"Using Tarka Chat in your React/Vue apps","description":"Using Tarka Chat in your React/Vue apps","duration":"5 min read","thumbnail_alt":"Using Tarka Chat in your React/Vue apps","slug":"using-tarka-chat-in-your-react-vue-apps","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"using-tarka-chat-in-your-react-vue-apps/Photo-by-Volodymyr-Hryshchenko-on-Unsplash.webp"}},{"node":{"tag":"web","title":"Neovim as a java IDE","description":"Neovim as a java IDE","duration":"5 min read","thumbnail_alt":"Neovim as a java IDE","slug":"neovim-as-java-ide","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":""}},{"node":{"tag":"consulting","title":"Navigating Change: The BA's Role in Managing Agile Transformations","description":"Navigating change: The BA's Role in Managing Agile Transformations","duration":"3 min read","thumbnail_alt":"Navigating change: The BA's Role in Managing Agile Transformations","slug":"navigating-change","tarkan":{"name":"Sparsh Gupta","role":"Product Owner","image":"sparsh.png","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@sparsh28"}},"coverImage":"navigating-change/navigating-change.webp"}},{"node":{"tag":"AI","title":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","description":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","duration":"7 min read","thumbnail_alt":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","slug":"extracting-structured-data","tarkan":{"name":"Kesavan","role":"Developer","image":"k7.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@itzk7"}},"coverImage":""}},{"node":{"tag":"web","title":"Functional Programming for Humans — Foundations","description":"Functional Programming for Humans — Foundations","duration":"6 min read","thumbnail_alt":"Functional Programming for Humans — Foundations","slug":"functional-programming-for-humans-foundation","tarkan":{"name":"Sameer Kumar","role":"Technical Consultant","image":"sameer.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"functional-programming-for-humans-foundation/Functional-Programming-for-Humans—Foundations.webp"}},{"node":{"tag":"web","title":"Leveraging DTO pattern in Go-based web apps","description":"Leveraging DTO pattern in Go-based web apps","duration":"4 min read","thumbnail_alt":"Leveraging DTO pattern in Go-based web apps","slug":"go-dto-pattern","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"go-dto-pattern/go-dto-pattern.webp"}},{"node":{"tag":"web","title":"Handling message duplication in Kafka","description":"Handling message duplication in Kafka","duration":"5 min read","thumbnail_alt":"Handling message duplication in Kafka","slug":"kafka-message-duplication","tarkan":{"name":"Vignesh Ravichandran","role":"Developer","image":"vignesh.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@vignesh-ravichandran"}},"coverImage":"kafka-message-duplication/kafka-message-duplication.webp"}},{"node":{"tag":"web","title":"Generic Callbacks in Rust","description":"Generic Callbacks in Rust","duration":"3 min read","thumbnail_alt":"Generic Callbacks in Rust","slug":"generic-callbacks-rust","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"generic-callbacks-rust/generic-callbacks-rust.webp"}},{"node":{"tag":"AI","title":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","description":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","duration":"8 min read","thumbnail_alt":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","slug":"batch-transcription","tarkan":{"name":"Kesavan","role":"Developer","image":"k7.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@itzk7"}},"coverImage":"batch-transcription/batch-transcription.webp"}},{"node":{"tag":"devops","title":"OpenText Magellan and AKS: An unofficial deployment guide","description":"OpenText Magellan and AKS: An unofficial deployment guide","duration":"11 min read","thumbnail_alt":"OpenText Magellan and AKS: An unofficial deployment guide","slug":"opentext-magellan-aks-unofficial-deployment-guide","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":""}},{"node":{"tag":"web","title":"Searching For The Perfect Fit: Our Move from Algolia to Typesense","description":"Our search for an open-source, cost-effective, scalable, and self-hosted solution led us to Typesense, an alternative to the very popular Algolia.","duration":"5 min read","thumbnail_alt":"Searching For The Perfect Fit: Our Move from Algolia to Typesense","slug":"searching-perfect-fit-move-from-algolia-to-typesense","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"searching-perfect-fit-move-from-algolia-to-typesense/searching-perfect-fit-move-from-algolia-to-typesense.webp"}},{"node":{"tag":"mobile","title":"5 essential tools and tips for every iOS developer","description":"5 essential tools and tips for every iOS developer","duration":"4 min read","thumbnail_alt":"5 essential tools and tips for every iOS developer","slug":"essential-tools-and-tips-for-every-ios-developer","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"ios-tips-and-tools/Recommended-tools-tips-for-iOS-developers.png"}},{"node":{"tag":"web","title":"Build your first Swift command-line tool with ArgumentParser","description":"Using Swift Package Manager (SPM) and swift-argument-parser, it's easy to create command-line tools in Swift. Here's how you can do it.","duration":"10 min read","thumbnail_alt":"Build your first Swift command-line tool with ArgumentParser","slug":"build-your-first-swift-command-line-tool-with-argumentparser","tarkan":{"name":"Ajith Renjala","role":"A tarkan","image":"bitman.png","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ajithrnayak"}},"coverImage":"build-your-first-swift-command-line-tool-with-argumentparser/build-your-first-swift-command-line-tool-with-argumentparser.webp"}},{"node":{"tag":"mobile","title":"The ultimate VPN detection guide for iOS and Android","description":"The ultimate VPN detection guide for iOS and Android","duration":"3 min read","thumbnail_alt":"The ultimate VPN detection guide for iOS and Android","slug":"vpn-detection-guide-ios-android","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"the-ultimate-vpn-detection/the-ultimate-vpn.webp"}},{"node":{"tag":"mobile","title":"React Native vs. Flutter in 2023: A Comprehensive Comparison","description":"A detailed comparison of React Native vs. Flutter to help engineering managers make decisions on how, where, and when to use React or Flutter.","duration":"14 min read","thumbnail_alt":"React Native vs. Flutter in 2023: A Comprehensive Comparison","slug":"react-native-vs-flutter-2023-comparison","tarkan":{"name":"Ajith Renjala","role":"A tarkan","image":"bitman.png","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ajithrnayak"}},"coverImage":"react-native-vs-flutter-2023-comparison/react-native-vs-flutter-2023-comparison.webp"}},{"node":{"tag":"mobile","title":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","description":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","duration":"3 min read","thumbnail_alt":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","slug":"kotlin-multiplatform-mobile","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"kotlin-multiplatform-mobile/kotlin-multiplatform-mobile.webp"}},{"node":{"tag":"web","title":"Reshaping data with PostgreSQL pivot tables","description":"Reshaping data with PostgreSQL pivot tables","duration":"4 min read","thumbnail_alt":"Reshaping data with PostgreSQL pivot tables","slug":"reshaping-data-postgresql-pivot-tables","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"reshaping-data-with-postgres/reshaping-data-with-postgreSQL.webp"}},{"node":{"tag":"web","title":"Effortlessly update YouTube videos on your Gridsome site","description":"How to build an auto-updating YouTube feed on your site using the YouTube API and Gridsome for Vue.js with step-by-step instructions and code samples.","duration":"10 min read","thumbnail_alt":"Effortlessly update YouTube videos on your Gridsome site","slug":"effortlessly-update-youtube-videos-on-your-gridsome-site","tarkan":{"name":"Ajith Renjala","role":"A tarkan","image":"bitman.png","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ajithrnayak"}},"coverImage":"effortlessly-update-youtube-videos-on-your-gridsome-site/effortlessly-update-youtube-videos-on-your-gridsome-site.webp"}},{"node":{"tag":"devops","title":"The only in-depth AWS ECS monitoring solution you'll need","description":"This is a detailed blog on how to set up in-depth AWS ECS monitoring. The bundled alerts that come with ECS are inadequate. DevOps teams need more insight to be efficient.","duration":"6 min read","thumbnail_alt":"The only in-depth AWS ECS monitoring solution you'll need","slug":"aws-ecs-monitoring-solution","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"aws-ecs-monitoring-solution/cover.gif"}},{"node":{"tag":"devops","title":"Designing a centralized alert routing system using AWS Lambda","description":"Who wouldn't love a centralized monitoring and alerting system, right? Are you in the process of consolidating all your alerting systems into a single one?","duration":"4 min read","thumbnail_alt":"Designing a centralized alert routing system using AWS Lambda","slug":"centralized-alert-routing-system-aws-lambda","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"centralized-alert-routing-system-aws-lambda/cover.gif"}},{"node":{"tag":"web","title":"Rate limiting for distributed environments","description":"Different ways to architect distributed environments with rate limiting code snippets available","duration":"5 min read","thumbnail_alt":"Rate limiting for distributed environments","slug":"rate-limiting-for-distributed-environments","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"rate-limiting-for-distributed-environments/rate-limiting-for-distributed-environments.webp"}},{"node":{"tag":"consulting","title":"Documentation: Yes, We Should!","description":"Imagine you recently joined a new team, and after a couple of weeks, you were assigned a bug ticket. You look at the ticket and decide to see if this issue surfaced in the past and so do a search in the bug tracking tool.","duration":"4 min read","thumbnail_alt":"A 3D image of a file folder with purple, yellow and green color rectangles for pages","slug":"documentation-yes-we-should","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"documentation-yes-we-should/documentation-yes-we-should.png"}},{"node":{"tag":"mobile","title":"Java Life vs Kotlin Life","description":"Developers using Kotlin don't use it to its fullest potential because they use it just like Java. Kotlin is so much more powerful and concise. Here's how.","duration":"3 min read","thumbnail_alt":"Java Life vs Kotlin Life","slug":"java-life-vs-kotlin-life","tarkan":{"name":"Nandagopal Ravichandran","role":"Mobile Developer","image":"nanda.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"java-life-vs-kotlin-life/java-life-vs-kotlin-life.webp"}},{"node":{"tag":"consulting","title":"Building Serious Software","description":"Do you know what every software startup entrepreneur dreams of after they validate the market? Software that does not break with scale and is adaptable to change.","duration":"4 min read","thumbnail_alt":"A cartoon of loosely held blocks which are held by stick figures from collapsing","slug":"building-serious-software","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":"building-serious-software/banner.png"}},{"node":{"tag":"consulting","title":"Wait! Don't write code yet","description":"As developers, it is necessary to understand how the code we write helps solve real-world problems. Often, it is easier to think about users while writing the application layer of code.","duration":"3 min read","thumbnail_alt":"A isometric image of a 3D maze","slug":"wait-dont-write-code-yet","tarkan":{"name":"Vidhya Desikan","role":"Developer","image":"vidhya.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@vdviddin"}},"coverImage":"wait-dont-write-code-yet/wait-dont-write-code-yet.png"}},{"node":{"tag":"web","title":"Rust : Testing API Requests — HttpMock","description":"Rust : Testing API Requests — HttpMock","duration":"3 min read","thumbnail_alt":"Rust : Testing API Requests — HttpMock","slug":"rust-testing-api-requests-httpmock","tarkan":{"name":"Arun Kumar","role":"A tarkan","image":"anonymous.jpg","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@arunkumar_33617"}},"coverImage":"rust-testing/Rust-testing.webp"}},{"node":{"tag":"web","title":"Considering a GraphQL switch? Here's why it is worth it.","description":"Considering a switch to GraphQL? From better data aggregation to schema stitching, here's why you should consider adopting GraphQL in your stack.","duration":"5 min read","thumbnail_alt":"Considering a GraphQL switch? Here's why it is worth it.","slug":"graphql-switch-worth-it","tarkan":{"name":"Deepak Prasanna","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@deepakprasanna"}},"coverImage":"graphql-switch-worth-it/graphql-switch-worth-it.webp"}},{"node":{"tag":"consulting","title":"What does a CTO do?","description":"There has been a lot of hand-wringing and discussions about what a CTO does on the interwebs. Does a CTO write code? Does a CTO's calendar look like it is on the maker's or the manager's schedule? Does a CTO sit in on interviews?","duration":"6 min read","thumbnail_alt":"A isometric image of a balancing scale with code on one side and detective lens on the other side","slug":"what-does-a-cto-do","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"what-does-a-cto-do/cover.png"}},{"node":{"tag":"careers","title":"A writer's guide to working in a tech consultancy","description":"A manual for writers who work with cross-functional teams or roles.","duration":"4 min read","thumbnail_alt":"A circular red shape surrounded by cubes","slug":"a-writers-guide-to-working-in-a-tech-consultancy","tarkan":{"name":"Puneetha Jagannathan","role":"Brand Communications Specialist","image":"puneetha.jpg","blurb":"She is still thiking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://puneetha-j.medium.com/"}},"coverImage":"a-writers-guide-to-working-in-a-tech-consultancy/a-writers-guide-to-working-in-a-tech-consultancy.png"}},{"node":{"tag":"mobile","title":"How to create shortcuts in your Android app","description":"Here's how you can implement static, dynamic and pinned shortcuts using our code snippets and guidelines.","duration":"4 min read","thumbnail_alt":"How to create shortcuts in your Android app","slug":"create-shortcuts-android-app","tarkan":{"name":"Raja Jawahar","role":"Mobile Developer","image":"raja.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"create-shortcuts-android-app/create-shortcuts-android-app.webp"}},{"node":{"tag":"mobile","title":"Launching a screen within an app using custom Siri voice commands","description":"Here's how you can configure NSUserActivity and IntentsUI in iOS to enable users to navigate to a specific screen inside an app using voice commands.","duration":"3 min read","thumbnail_alt":"Launching a screen within an app using custom Siri voice commands","slug":"launch-screen-siri-voice-commands","tarkan":{"name":"Naren Krishna","role":"iOS Developer","image":"naren.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"launch-screen-siri-voice-commands/launch-screen-siri-voice-commands.gif"}},{"node":{"tag":"web","title":"Testim 101: Automation Testing on Steroids","description":"Testim is an AI-based testing framework that helps you automate website testing. Here's a detailed review of its features, pros, and cons.","duration":"5 min read","thumbnail_alt":"Testim 101: Automation Testing on Steroids","slug":"testim-automation-testing-on-steroids","tarkan":{"name":"Sameer Kumar","role":"Technical Consultant","image":"sameer.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"testim-automation-testing-on-steroids/testim-automation-testing-on-steroids.webp"}},{"node":{"tag":"web","title":"How to setup SFTP in Golang Authentication Using Go","description":"How to setup SFTP in Golang Authentication Using Go","duration":"2 min read","thumbnail_alt":"How to setup SFTP in Golang Authentication Using Go","slug":"set-up-sftp-authentication-go","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":""}},{"node":{"tag":"devops","title":"An introductory guide to functional programming concepts","description":"An introductory guide to functional programming concepts","duration":"10 min read","thumbnail_alt":"An introductory guide to functional programming concepts","slug":"introductory-guide-functional-programming-concepts","tarkan":{"name":"Sreedev Kodichath","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://sreedevk.medium.com/"}},"coverImage":"introductory-guide-functional-programming-concepts/introductory-guide-functional-programming-concepts.gif"}},{"node":{"tag":"design","title":"Trying out Material You. A tale of two background colors.","description":"Trying out Material You. A tale of two background colors.","duration":"7 min read","thumbnail_alt":"Trying out Material You. A tale of two background colors.","slug":"material-you-critique-light-mode-background-color-m3","tarkan":{"name":"Andy Reed","role":"A tarkan","image":"anonymous.jpg","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@andy.reed89"}},"coverImage":"material-you-critique-light-mode-background-color-m3/material-you-critique-light-mode-background-color-m3.webp"}},{"node":{"tag":"web","title":"How to Build a Web Application using Rust — Part III","description":"How to Build a Web Application using Rust — Part III","duration":"2 min read","thumbnail_alt":"How to Build a Web Application using Rust — Part III","slug":"how-to-build-a-web-application-with-rust-part-3","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"how-to-build-a-web-application-with-rust-part-3/how-to-build-a-web-application-with-rust-part-3.webp"}},{"node":{"tag":"devops","title":"Handling multiple environments with Helm","description":"Handling multiple environments with Helm","duration":"4 min read","thumbnail_alt":"Handling multiple environments with Helm","slug":"handling-multiple-environments-with-helm","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"handling-multiple-environments-with-helm/handling-multiple-environments-with-helm.webp"}},{"node":{"tag":"devops","title":"How to reduce your Node.js docker image size by 70%","description":"How to reduce your Node.js docker image size by 70%","duration":"4 min read","thumbnail_alt":"How to reduce your Node.js docker image size by 70%","slug":"reduce-nodejs-docker-image-size","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"reduce-nodejs-docker-image-size/how-to-reduce.gif"}},{"node":{"tag":"web","title":"How to build a Web Application with Rust: Part II","description":"How to build a Web Application with Rust: Part II","duration":"2 min read","thumbnail_alt":"How to build a Web Application with Rust: Part II","slug":"how-to-build-a-web-application-with-rust-part-2","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"how-to-build-a-web-application-with-rust-part-2/how-to-build-a-web-application-with-rust-part-2.webp"}},{"node":{"tag":"","title":"How to build a Web Application with Rust: Part I","description":"How to build a Web Application with Rust: Part I","duration":"2 min read","thumbnail_alt":"How to build a Web Application with Rust: Part I","slug":"how-to-build-a-web-application-with-rust-part-1","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"how-to-build-a-web-application-with-rust-part-1/how-to-build-a-web-application-with-rust-part-1.webp"}},{"node":{"tag":"careers","title":"Our Guide To Hiring Great People","description":"How Tarka Labs approaches hiring.","duration":"5 min read","thumbnail_alt":"Colors in geometric shapes with hand-drawn sketches on them","slug":"our-guide-to-hiring-great-people","tarkan":{"name":"Jenifa Newlin","role":"People Champion","image":"jenifa.jpg","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@jenifa_85990"}},"coverImage":"our-guide-to-hiring-great-people/our-guide-to-hiring-great-people.png"}},{"node":{"tag":"devops","title":"Digital Audio 101: Playing Audio From A Microcontroller","description":"Digital Audio 101: Playing Audio From A Microcontroller","duration":"7 min read","thumbnail_alt":"Digital Audio 101: Playing Audio From A Microcontroller","slug":"digital-audio-101-playing-audio-from-a-microcontroller","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"digital-audio-101-playing-audio-from-a-microcontroller/digital-audio-101-playing-audio-from-a-microcontroller.gif"}},{"node":{"tag":"web","title":"What I learned refactoring a monolith into microservices","description":"Here are my learnings from 6 months of refactoring a monolithic MEAN stack web application running on docker inside a virtual machine.","duration":"4 min read","thumbnail_alt":"What I learned refactoring a monolith into microservices","slug":"refactoring-monolith-into-microservices","tarkan":{"name":"Utkarsh Mehta","role":"Developer","image":"bitman.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://life-of-utkarsh.medium.com/"}},"coverImage":"refactoring-monolith-into-microservices/refactoring-monolith-into-microservices.webp"}},{"node":{"tag":"consulting","title":"Don't Rewrite, Refactor: Why Brownfield Development Helps","description":"If you're finding it hard to build and ship new features, spending time to read and refactor the existing code can be better than rewriting it.","duration":"3 min read","thumbnail_alt":"Don't Rewrite, Refactor: Why Brownfield Development Helps","slug":"dont-rewrite-refactor-brownfield-development","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"dont-rewrite-refactor-brownfield-development/dont-rewrite-refactor-brownfield-development.webp"}},{"node":{"tag":"web","title":"Exploring Headless CMS","description":"Exploring Headless CMS","duration":"9 min read","thumbnail_alt":"Exploring Headless CMS","slug":"exploring-headless-cms","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"exploring-headless-cms/exploring-headless-cms.webp"}},{"node":{"tag":"blockchain","title":"My thoughts on Substrate","description":"My thoughts on Substrate","duration":"9 min read","thumbnail_alt":"My thoughts on Substrate","slug":"my-thoughts-on-substrate","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"my-thoughts-on-substrate/my-thoughts-on-substrate.webp"}},{"node":{"tag":"web","title":"Learnings from a failed product","description":"Learnings from a failed product","duration":"3 min read","thumbnail_alt":"Learnings from a failed product","slug":"learnings-from-a-failed-product","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"learning-from-a-failed-product/learning-from.webp"}},{"node":{"tag":"","title":"Filling images with mosaic colors using D3.js","description":"Filling images with mosaic colors using D3.js","duration":"3 min read","thumbnail_alt":"Filling images with mosaic colors using D3.js","slug":"filling-images-with-mosaic-colors-using-d3js","tarkan":{"name":"Alen Thomas","role":"A tarkan","image":"anonymous.jpg","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@alenthomas9"}},"coverImage":"filling-images-with-mosaic-colors-using-d3js/filling-images-with-mosaic-colors-using-d3js.webp"}},{"node":{"tag":"web","title":"How To Learn Coding Through Live Streaming","description":"How To Learn Coding Through Live Streaming","duration":"5 min read","thumbnail_alt":"How To Learn Coding Through Live Streaming","slug":"learn-coding-through-live-streaming","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"learn-youtube-video/rahul-blog-1.webp"}},{"node":{"tag":"web","title":"Remote pairing in mac (with low latency)","description":"Remote pairing in mac (with low latency)","duration":"3 min read","thumbnail_alt":"Remote pairing in mac (with low latency)","slug":"remote-pairing-mac-low-latency","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":""}},{"node":{"tag":"mobile","title":"Debounce in Swift","description":"All about debounce: 4 ways to achieve debounce in Swift","duration":"5 min read","thumbnail_alt":"A representation of a function called 'debounce' which is accepting, as input, a green circle labelled '3' and outputting an identical-looking green circle with no label","slug":"debounce-in-swift","tarkan":{"name":"Pavan Kumar C","role":"iOS Developer","image":"pavan.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://pavankumarchalla.medium.com/"}},"coverImage":""}},{"node":{"tag":"web","title":"Service Mesh in Kubernetes — Pictorially","description":"Service Mesh in Kubernetes — Pictorially","duration":"5 min read","thumbnail_alt":"Service Mesh in Kubernetes — Pictorially","slug":"service-mesh-kubernetes-guide","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":"service-mesh-in-kubernetes/service-mesh-2.webp"}},{"node":{"tag":"web","title":"Javascript Sandbox for your Node Project","description":"Guide to safely run customer javascript code in your node.js environment using vm2.","duration":"3 min read","thumbnail_alt":"Sandbox with a pail and shovel","slug":"javascript-sandbox-for-your-node-project","tarkan":{"name":"Utkarsh Mehta","role":"Developer","image":"bitman.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://life-of-utkarsh.medium.com/"}},"coverImage":"javascript-sandbox-for-your-node-project/javascript-sandbox-for-your-node-project.png"}},{"node":{"tag":"web","title":"Deploying your Rails application using dokku","description":"Deploying your Rails application using dokku","duration":"5 min read","thumbnail_alt":"Deploying your Rails application using dokku","slug":"how-to-deploy-rails-application-with-dokku","tarkan":{"name":"Vinoth","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@avinoth"}},"coverImage":"how-to-deploy-rails-application-with-dokku/header.webp"}},{"node":{"tag":"web","title":"Searching with MongoDB and Elastic Search","description":"Searching with MongoDB and Elastic Search","duration":"4 min read","thumbnail_alt":"Searching with MongoDB and Elastic Search","slug":"searching-with-mongodb-and-elastic-search","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"searching-with-mongodb-and-elastic-search/header.webp"}},{"node":{"tag":"web","title":"All You Need To Know About Comments in Ruby","description":"All You Need To Know About Comments in Ruby","duration":"5 min read","thumbnail_alt":"All You Need To Know About Comments in Ruby","slug":"all-you-need-to-know-about-comments-in-ruby","tarkan":{"name":"Sreedev Kodichath","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://sreedevk.medium.com/"}},"coverImage":"all-you-need-to-know-about-comments-in-ruby/header.webp"}},{"node":{"tag":"AI","title":"Person of Interest: How I built a Facial Recognition Machine Learning model.","description":"Person of Interest: How I built a Facial Recognition Machine Learning model.","duration":"5 min read","thumbnail_alt":"Person of Interest: How I built a Facial Recognition Machine Learning model.","slug":"building-a-facial-recognition-machine-learning-model","tarkan":{"name":"Rajiv Manivannan","role":"Developer","image":"rajiv.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"building-a-facial-recognition-machine-learning-model/1.webp"}},{"node":{"tag":"web","title":"Why we refuse fixed bid projects","description":"Why we refuse fixed bid projects","duration":"4 min read","thumbnail_alt":"Why we refuse fixed bid projects","slug":"why-we-refuse-fixed-bid-project","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"why-we-refuse-fixed-bid-project/why-we-refuse-fixed-big-projects.webp"}},{"node":{"tag":"web","title":"Know Kubernetes - Pictorially","description":"Understand kubernetes and its components with easily relatable pictorial representations.","duration":"7 min read","thumbnail_alt":"Black and white sketch of a square room labelled 'MASTER' with the following items: disk pack, chest of drawers with a wifi signal-emitting device on top, and two tables","slug":"know-kubernetes-pictorially","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":""}},{"node":{"tag":"mobile","title":"Why flutter","description":"Look beyond react native and why flutter is exciting.","duration":"5 min read","thumbnail_alt":"A hummingbird in flight","slug":"why-flutter","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"why-flutter/why-flutter.png"}},{"node":{"tag":"web","title":"PDF Comparison in Pure Ruby","description":"PDF Comparison in Pure Ruby","duration":"2 min read","thumbnail_alt":"PDF Comparison in Pure Ruby","slug":"pdf-comparison-pure-ruby","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"pdf-comparison-in-pure-ruby/pdf-comparison-in-pure-ruby.webp"}},{"node":{"tag":"careers","title":"How we hire engineers","description":"How Tarka Labs hires engineers. Published in the interest of transparency.","duration":"3 min read","thumbnail_alt":"A dark room with two empty chairs facing each other across a table","slug":"how-we-hire-engineers","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"how-we-hire-engineers/how-we-hire-engineers.png"}},{"node":{"tag":"web","title":"Power of SSH Tunneling","description":"Most developers spend a considerable amount of their time ssh'd into remote machines, however, few are aware of the power of ssh tunnels.","duration":"4 min read","thumbnail_alt":"Silhouette of a man standing inside a glowing blue tunnel with a glowing white circle in front of him","slug":"power-of-ssh-tunneling","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"power-of-ssh-tunneling/power-of-ssh-tunneling.png"}},{"node":{"tag":"careers","title":"All in one's mind.","description":"The effectiveness of a positive mindset and the ability to self-assess.","duration":"4 min read","thumbnail_alt":"A growing plant is layered over the artwork of a human brain","slug":"all-in-ones-mind","tarkan":{"name":"Ramya Raghavan","role":"A tarkan","image":"bitman.png","blurb":"She is still thiking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ramyaraghavan"}},"coverImage":"all-in-ones-mind/onion.webp"}},{"node":{"tag":"web","title":"Event Delegation: Simple yet awesome!","description":"Event Delegation: Simple yet awesome!","duration":"2 min read","thumbnail_alt":"Event Delegation: Simple yet awesome!","slug":"event-delegation-simple-yet-awesome","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"event-delegation/event-delegation.webp"}},{"node":{"tag":"devops","title":"Automating cluster creation with Terraform on DigitalOcean","description":"Automating cluster creation with Terraform on DigitalOcean","duration":"4 min read","thumbnail_alt":"Automating cluster creation with Terraform on DigitalOcean","slug":"automating-cluster-creation-with-terraform-on-digitalocean","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":""}},{"node":{"tag":"AI","title":"Part 2- Creating a neural network using tensorflow to colorize grayscale images.","description":"Part 2- Creating a neural network using tensorflow to colorize grayscale images.\n","duration":"4 min read","thumbnail_alt":"","slug":"colorize-grayscale-images-pt-2","tarkan":{"name":"Deepak Prasanna","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@deepakprasanna"}},"coverImage":""}},{"node":{"tag":"AI","title":"Part I — Creating a neural network using tensorflow to colorize grayscale images.","description":"Part I — Creating a neural network using tensorflow to colorize grayscale images","duration":"4 min read","thumbnail_alt":"","slug":"colorize-grayscale-images-pt-1","tarkan":{"name":"Deepak Prasanna","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@deepakprasanna"}},"coverImage":""}}]}},"context":{}}