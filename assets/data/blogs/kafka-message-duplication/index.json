{"hash":"a92d0a7aa26f8cebd9d116562e0db9b5b999676c","data":{"blog":{"id":"fc9594b07b671d9babc60a4f5b40aeff","slug":"kafka-message-duplication","content":"<p>Imagine you are working on a large-scale e-commerce application which uses Kafka for messaging.\nAll seems to be going well until one fine day you look at your metrics dashboard and you start noticing an uptick in the number of deliveries compared to the number of orders placed.\nThis leaves your team scrambling for an answer. After hours of debugging and a lot of coffee, the root cause turns out to not be a coding error, but duplicate messages flooding your topics.\nIn this blog, we will do a deep dive into the scenarios that can lead to duplicates and the various approaches that can be used to avoid them.</p>\n<h1 id=\"producer-side-duplicate-messages\"><a href=\"#producer-side-duplicate-messages\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Producer side duplicate messages</h1>\n<p>Let us consider an order service that publishes messages to an order topic.</p>\n<img src=\"/blog/kafka-message-duplication/producer-1.webp\">\n<p>In step 3, it is possible for the acknowledgement from Kafka to be lost due to transient network issues, such as temporary loss of network connectivity.\nThis will lead the order service to retry the same message until a successful acknowledgement is received, resulting in a duplicate.</p>\n<img src=\"/blog/kafka-message-duplication/producer-2.webp\">\n<h2 id=\"resolution-idempotent-producer\"><a href=\"#resolution-idempotent-producer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Resolution: Idempotent Producer</h2>\n<p><a href=\"https://en.wikipedia.org/wiki/Idempotence\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Idempotent</a> producer can help resolve the issue.\nTo achieve this, the order service should be assigned a unique producer ID (PID) and each message published should be given a sequence number.\nThe combination of PID and the sequence number is tracked by Kafka as a unique ID for a message.\nSo, when a retry happens for an existing message, Kafka gives an acknowledgement back without appending the message to the log.</p>\n<img src=\"/blog/kafka-message-duplication/producer-3.webp\">\n<p><a href=\"https://kafka.apache.org/documentation/#producerconfigs_enable.idempotence\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Idempotency can be enabled in Kafka producer</a> by setting\n<code class=\"language-inline-text\">enable.idempotence</code> configuration property to <code class=\"language-inline-text\">true</code> , <code class=\"language-inline-text\">retries</code> to a value greater than 0 and <code class=\"language-inline-text\">acks</code> to <code class=\"language-inline-text\">all</code>.</p>\n<p><code class=\"language-inline-text\">enable.idempotence</code> — When set to <code class=\"language-inline-text\">true</code> , the producer automatically does retries on retryable errors.\nThese can be errors that are transient in nature, such as leader not available or not enough replicas.</p>\n<p><code class=\"language-inline-text\">acks</code> — When set to <code class=\"language-inline-text\">all</code> , Kafka makes sure that the leader waits for minimum number of in-sync replica partitions to have acknowledged the message before sending an acknowledgement to the producer.</p>\n<h1 id=\"consumer-side-duplicate-messages\"><a href=\"#consumer-side-duplicate-messages\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Consumer side duplicate messages</h1>\n<p>Now, let us consider a fulfillment service which:</p>\n<ol>\n<li>Reads messages from the Order Topic.</li>\n<li>Performs a POST call to the Audit Service.</li>\n<li>Creates a new record in the Fulfillment Table.</li>\n<li>Publishes a message to the Fulfillment Topic.</li>\n<li>Updates the offset in Kafka.</li>\n</ol>\n<img src=\"/blog/kafka-message-duplication/consumer-1.webp\">\n<p>If the instance running the service, does not process steps 2–5 within the set timeout, Kafka will assume that the service is dead.\nThis will cause the service instance to be removed from the consumer group and the partition to be rebalanced.\nThis means, the same message will then be assigned to, and processed by, another consumer in the group.</p>\n<h2 id=\"resolution-idempotent-consumer\"><a href=\"#resolution-idempotent-consumer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Resolution: Idempotent Consumer</h2>\n<p>Tracking all successfully consumed messages can help to avoid this scenario.\nThis can be achieved by assigning a unique ID to every message created at the producer side (order service),\nand tracking them on the consumer side (fulfillment service) by storing each ID in a database table (Message ID Tracking Table).\nWhen a message with a duplicate ID is received(identified by searching the Message ID Tracking Table), the offset is immediately updated and further processing skipped.</p>\n<img src=\"/blog/kafka-message-duplication/consumer-2.webp\">\n<p>Also, inserting the record into the Tracking and Fulfillment Tables should done as a DB transaction.\nThis ensures that both actions are rollbacked in the event of any failure.</p>\n<p><a href=\"https://stackoverflow.com/questions/62266911/jpa-stop-executing-code-in-transaction-if-exception-occurs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">There is a possibility for transaction to fail, after publishing message to the fulfillment topic.</a>\nThis will lead to a retry, which will then result in a duplicate message in the fulfillment topic.\nThis approach does not address this scenario.</p>\n<h2 id=\"resolution-idempotent-consumer--transactional-outbox\"><a href=\"#resolution-idempotent-consumer--transactional-outbox\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Resolution: Idempotent Consumer + Transactional Outbox</h2>\n<p>It is not possible to have a distributed transaction that would span the database as well as Kafka, as the latter does not support XA transactions.\nSo an approach to resolve the issue, will be to have an outbox table for capturing events to be published.\nWrites to this table should be included in the same DB transaction which writes to the Tracking and Fulfillment tables.</p>\n<img src=\"/blog/kafka-message-duplication/consumer-3.webp\">\n<p>This ensures database writes, and message publishing to Kafka, are an atomic action.\nBy using a Change Data Capture (CDC) tool, such as Kafka Connect or <a href=\"https://debezium.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Debezium</a>, the event can then be published to the fulfillment topic.</p>\n<p>Even with this approach, there is a still a possibility for duplicate POST calls,\nsince retires can be triggered when there is a <a href=\"https://stackoverflow.com/questions/62266911/jpa-stop-executing-code-in-transaction-if-exception-occurs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">transaction failure followed by a rollback after the making the call</a>.\nThis is irrespective of the order of execution of the call. The only resolution for which, will be to make sure that the POST call is idempotent on the receiver side.</p>\n<h1 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Conclusion</h1>\n<p>These approaches introduce a lot of moving parts which increase complexity and maintainability.\nSo, it will be wise to take an incremental approach and implement them only when there are substantial metrics to support their incorporation.</p>\n"},"blogs":{"edges":[{"node":{"tag":"consulting","title":"Navigating Change: The BA's Role in Managing Agile Transformations","duration":"3 min read","thumbnail_alt":"Navigating change: The BA's Role in Managing Agile Transformations","slug":"navigating-change","tarkan":{"name":"Sparsh Gupta","role":"Product Owner","image":"sparsh.png","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@sparsh28"}},"coverImage":"navigating-change/navigating-change.webp"}},{"node":{"tag":"ai","title":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","duration":"7 min read","thumbnail_alt":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","slug":"extracting-structured-data","tarkan":{"name":"Kesavan","role":"Developer","image":"k7.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@itzk7"}},"coverImage":""}},{"node":{"tag":"web","title":"Leveraging DTO pattern in Go-based web apps","duration":"4 min read","thumbnail_alt":"Leveraging DTO pattern in Go-based web apps","slug":"go-dto-pattern","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"go-dto-pattern/go-dto-pattern.webp"}},{"node":{"tag":"web","title":"Handling message duplication in Kafka","duration":"5 min read","thumbnail_alt":"Handling message duplication in Kafka","slug":"kafka-message-duplication","tarkan":{"name":"Vignesh Ravichandran","role":"Developer","image":"vignesh.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@vignesh-ravichandran"}},"coverImage":"kafka-message-duplication/kafka-message-duplication.webp"}},{"node":{"tag":"web","title":"Generic Callbacks in Rust","duration":"3 min read","thumbnail_alt":"Generic Callbacks in Rust","slug":"generic-callbacks-rust","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"generic-callbacks-rust/generic-callbacks-rust.webp"}},{"node":{"tag":"ai","title":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","duration":"8 min read","thumbnail_alt":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","slug":"batch-transcription","tarkan":{"name":"Kesavan","role":"Developer","image":"k7.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@itzk7"}},"coverImage":"batch-transcription/batch-transcription.webp"}},{"node":{"tag":"consulting","title":"Documentation: Yes, We Should!","duration":"4 min read","thumbnail_alt":"A 3D image of a file folder with purple, yellow and green color rectangles for pages","slug":"documentation-yes-we-should","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"documentation-yes-we-should/documentation-yes-we-should.png"}},{"node":{"tag":"consulting","title":"Building Serious Software","duration":"4 min read","thumbnail_alt":"A cartoon of loosely held blocks which are held by stick figures from collapsing","slug":"building-serious-software","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":"building-serious-software/banner.png"}},{"node":{"tag":"consulting","title":"Wait! Don't write code yet","duration":"3 min read","thumbnail_alt":"A isometric image of a 3D maze","slug":"wait-dont-write-code-yet","tarkan":{"name":"Vidhya Desikan","role":"Developer","image":"vidhya.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@vdviddin"}},"coverImage":"wait-dont-write-code-yet/wait-dont-write-code-yet.png"}},{"node":{"tag":"consulting","title":"What does a CTO do?","duration":"6 min read","thumbnail_alt":"A isometric image of a balancing scale with code on one side and detective lens on the other side","slug":"what-does-a-cto-do","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"what-does-a-cto-do/cover.png"}},{"node":{"tag":"careers","title":"A writer's guide to working in a tech consultancy","duration":"4 min read","thumbnail_alt":"A circular red shape surrounded by cubes","slug":"a-writers-guide-to-working-in-a-tech-consultancy","tarkan":{"name":"Puneetha Jagannathan","role":"Brand Communications Specialist","image":"puneetha.jpg","blurb":"She is still thiking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://puneetha-j.medium.com/"}},"coverImage":"a-writers-guide-to-working-in-a-tech-consultancy/a-writers-guide-to-working-in-a-tech-consultancy.png"}},{"node":{"tag":"careers","title":"Our Guide To Hiring Great People","duration":"5 min read","thumbnail_alt":"Colors in geometric shapes with hand-drawn sketches on them","slug":"our-guide-to-hiring-great-people","tarkan":{"name":"Jenifa Newlin","role":"People Champion","image":"jenifa.jpg","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@jenifa_85990"}},"coverImage":"our-guide-to-hiring-great-people/our-guide-to-hiring-great-people.png"}},{"node":{"tag":"mobile","title":"Debounce in Swift","duration":"5 min read","thumbnail_alt":"A representation of a function called 'debounce' which is accepting, as input, a green circle labelled '3' and outputting an identical-looking green circle with no label","slug":"debounce-in-swift","tarkan":{"name":"Pavan Kumar C","role":"iOS Developer","image":"pavan.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://pavankumarchalla.medium.com/"}},"coverImage":""}},{"node":{"tag":"web","title":"Javascript Sandbox for your Node Project","duration":"3 min read","thumbnail_alt":"Sandbox with a pail and shovel","slug":"javascript-sandbox-for-your-node-project","tarkan":{"name":"Utkarsh Mehta","role":"Developer","image":"bitman.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://life-of-utkarsh.medium.com/"}},"coverImage":"javascript-sandbox-for-your-node-project/javascript-sandbox-for-your-node-project.png"}},{"node":{"tag":"web","title":"Know Kubernetes - Pictorially","duration":"7 min read","thumbnail_alt":"Black and white sketch of a square room labelled 'MASTER' with the following items: disk pack, chest of drawers with a wifi signal-emitting device on top, and two tables","slug":"know-kubernetes-pictorially","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":""}},{"node":{"tag":"mobile","title":"Why flutter","duration":"5 min read","thumbnail_alt":"A hummingbird in flight","slug":"why-flutter","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"why-flutter/why-flutter.png"}},{"node":{"tag":"careers","title":"How we hire engineers","duration":"3 min read","thumbnail_alt":"A dark room with two empty chairs facing each other across a table","slug":"how-we-hire-engineers","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"how-we-hire-engineers/how-we-hire-engineers.png"}},{"node":{"tag":"web","title":"Power of SSH Tunneling","duration":"4 min read","thumbnail_alt":"Silhouette of a man standing inside a glowing blue tunnel with a glowing white circle in front of him","slug":"power-of-ssh-tunneling","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"power-of-ssh-tunneling/power-of-ssh-tunneling.png"}},{"node":{"tag":"careers","title":"All in one's mind.","duration":"4 min read","thumbnail_alt":"A growing plant is layered over the artwork of a human brain","slug":"all-in-ones-mind","tarkan":{"name":"Ramya Raghavan","role":"A tarkan","image":"bitman.png","blurb":"She is still thiking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ramyaraghavan"}},"coverImage":"all-in-ones-mind/onion.webp"}}]}},"context":{}}