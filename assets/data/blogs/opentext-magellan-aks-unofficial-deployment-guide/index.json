{"hash":"0cf23ec60406531217e5ce675f99a5997c846f10","data":{"blog":{"id":"b67ec4afaf946c28f44a8ef84d9ab3f1","slug":"opentext-magellan-aks-unofficial-deployment-guide","content":"<p>A couple of days back, I got my first task for 2024 — to deploy a product called <a href=\"https://www.opentext.com/products/magellan-platform\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OpenText Magellan</a> on an Azure cluster. I was provided with the official cloud deployment guide and user guide. It was my first time hearing the product name; but I don’t blame myself though. It is not something that I’d come across every day.</p>\n<p>Anyway, I did what I usually do with when I’m jumping into something new. I looked into the product details, the pros and cons, articles and all those stuff. After I got a brief understanding of what it was, I jumped into the cloud deployment guide — specifically the sections involving the steps for Azure.</p>\n<p>I then headed over to OpenText Support portal, searched for Magellan and downloaded the Helm chart for Magellan 23.4.0.1296. I’ve noted down everything I did for getting the product deployed, and this post will be the same, with a couple of redactions.</p>\n<h1 id=\"pre-requisites\"><a href=\"#pre-requisites\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Pre-requisites</h1>\n<ol>\n<li>A Microsoft Azure account with some credits (or a credit card)</li>\n<li>Azure CLI</li>\n<li>Kubectl</li>\n<li>Helm</li>\n<li>Docker</li>\n<li>A domain address for the deployment</li>\n</ol>\n<blockquote>\n<p><strong>Note</strong>: Magellan RELEASE notes mentions the exact versions of the above requirements. Do refer the RELEASE notes specific to your MTM version for best results :D</p>\n</blockquote>\n<h1 id=\"step-1-authenticate-azure-cli\"><a href=\"#step-1-authenticate-azure-cli\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 1: Authenticate Azure CLI</h1>\n<p>Run the following command and a new browser tab will open up. Login to Azure in the tab, and it’ll authenticate the Azure CLI.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">az login</code></pre></div>\n<h1 id=\"step-2-set-up-resource-group\"><a href=\"#step-2-set-up-resource-group\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 2: Set up Resource group</h1>\n<p>In this step, we’ll create a resource group, which will be used as a grouping for the resources availed for our Magellan deployment. We’ll name it as <strong>aks-magellan-res-grp</strong>.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">az group create \\\n--name aks-magellan-res-grp \\\n--location eastus</code></pre></div>\n<h1 id=\"step-3-set-up-postgresql-service-optional\"><a href=\"#step-3-set-up-postgresql-service-optional\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 3: Set up PostgreSQL service (Optional)</h1>\n<p>Magellan supports using Postgres docker image as well, so this step is optional. In my case, I’ve skipped this step and chosen Postgres docker image. Nonetheless, these are the steps for setting up external PostgreSQL service as per the official guide:</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">az postgres server create \\\n--resource-group aks-magellan-res-grp \\\n--name magellanpostgres \\\n--location eastus \\\n--admin-user admin \\\n--admin-password password \\\n--sku-name B_Gen5_2</code></pre></div>\n<p>Here, the values can be changed, but the name of the resource group should match that of the resource group we created above.</p>\n<p>For accessing the Postgres service from our local device, we should either have a static IP or a VPN that provides one. We’ll then create a firewall rule to allow our local device to communicate with the Postgres server.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">az postgres server firewall-rule create \\\n--resource-group aks-magellan-res-grp \\\n--server magellanpostgres \\\n--name AllowMyIP \\\n--start-ip-address 192.168.1.1 \\\n--end-ip-address 192.168.1.1</code></pre></div>\n<p>Here, the resource group should match the name of the resource group we created, and the server should match the name of the postgres server we created in the previous command. Name can be changed, and start IP address and end IP address should be the static IP address (provided by ISP or VPN).</p>\n<p>We should verify the PostgreSQL configs.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">az postgres server show \\\n--resource-group aks-magellan-res-grp \\\n--name magellanpostgres</code></pre></div>\n<p>Like before, resource group should match and name should be the name of the postgres service we created earlier.</p>\n<p>We can then verify the database SQL connection with the following comand (enter password when prompted):</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">psql \\\n--host=magellanpostgres.postgres.database.azure.com \\\n--port=5432 \\\n--username=admin@magellanpostgres \\\n--dbname=postgres</code></pre></div>\n<p>Here, we can find the host address of the Postgres service when we go to the newly created Postgres service through the Azure Portal. The default port and DB is 5432 and postgres respectively. Username should be in the format username@host , where the host is the name of the Postgres service we created.</p>\n<h1 id=\"step-4-create-the-aks-cluster\"><a href=\"#step-4-create-the-aks-cluster\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 4: Create the AKS Cluster</h1>\n<p>As per the guide, we’ll create an Azure Kubernetes Service (AKS) cluster with 2 or more nodes (specify node count and VM size depending on Magellan tier). This command might take a couple of minutes to create the cluster.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">az aks create \\\n--name aks-magellan-cluster \\\n--resource-group aks-magellan-res-grp \\\n--node-count 2 \\\n--generate-ssh-keys</code></pre></div>\n<p>In this command, we’re specifying node count as 2, but the Magellan tier that I deployed required 4 nodes to run. If requirements are high, the easiest way is to navigate to the nodepools for the cluster in Azure portal, and then enable autoscale for the nodepool (mine was minimum 2 and maximum 10 nodes). I also required the VM size <strong>B4ms</strong> for 4 vCPUs as per my spec, which I specified using node-vm-size key in the above command.</p>\n<p>We should then run the following command to download the credentials for the cluster, and this also updates the kubectl config to access the cluster.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">az aks get-credentials \\\n--name aks-magellan-cluster \\\n--resource-group aks-magellan-res-grp</code></pre></div>\n<p>We can then verify that kubectl config is updated to access our cluster.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl get nodes</code></pre></div>\n<p>The command above should get us a small table with the details of nodes in our newly created cluster.</p>\n<h1 id=\"step-5-create-an-azure-container-registry-acr\"><a href=\"#step-5-create-an-azure-container-registry-acr\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 5: Create an Azure Container Registry (ACR)</h1>\n<p>We’ll be using docker images provided by OpenText, so we’ll start by creating an Azure Container Registry to store the images.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">az acr create \\\n--resource-group aks-magellan-res-grp \\\n--name magellanacr \\\n--sku Basic</code></pre></div>\n<p>Here, we are naming the ACR as <strong>magellanacr</strong>, but that can be any other name too. Resource group should match though.</p>\n<p>We’ll then update our AKS cluster to attach the newly created ACR.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">az aks update \\\n--name aks-magellan-cluster \\\n--resource-group aks-magellan-res-grp \\\n--attach-acr magellanacr</code></pre></div>\n<p>We also need to allow a default admin credentials for our ACR. So, navigate to the ACR in Azure portal, and select <strong>Admin User</strong> under <strong>Access keys</strong> section.</p>\n<h1 id=\"step-6-add-images-to-acr\"><a href=\"#step-6-add-images-to-acr\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 6: Add images to ACR</h1>\n<p>After setting up our ACR, we have to add the images from OpenText. We’ll begin by authenticating our Docker to access OpenText Container Registry.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker login registry.opentext.com</code></pre></div>\n<p>When prompted, enter the username and password, which should be the same as the credentials used for accessing OpenText Support portal.</p>\n<p>We’ll pull all the images mentioned in the guide to our local docker, though some of them might be omittable depending on one’s requirements.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker pull registry.opentext.com/mtm-admin:23.4.0.1296\ndocker pull registry.opentext.com/mtm-benchmarking:23.4.0.1296\ndocker pull registry.opentext.com/mtm-ecm-crawler:23.4.0.1296\ndocker pull registry.opentext.com/mtm-ecm-crawler-service:23.4.0.1296\ndocker pull registry.opentext.com/mtm-ecm-integration-services:23.4.0.1296\ndocker pull registry.opentext.com/mtm-engine:23.4.0.1296\ndocker pull registry.opentext.com/mtm-gateway:23.4.0.1296\ndocker pull registry.opentext.com/mtm-kafka:23.4.0.1296\ndocker pull registry.opentext.com/mtm-mongodb:23.4.0.1296\ndocker pull registry.opentext.com/mtm-pipeline:23.4.0.1296\ndocker pull registry.opentext.com/mtm-search-api:23.4.0.1296\ndocker pull registry.opentext.com/mtm-security:23.4.0.1296\ndocker pull registry.opentext.com/mtm-service-discovery-api:23.4.0.1296\ndocker pull registry.opentext.com/mtm-solr:23.4.0.1296\ndocker pull registry.opentext.com/mtm-web-crawler:23.4.0.1296\ndocker pull registry.opentext.com/mtm-zookeeper:23.4.0.1296\ndocker pull registry.opentext.com/mtm-engine-data:23.4.0.1296\ndocker pull registry.opentext.com/mtm-postgres:23.4.0.1296\ndocker pull registry.opentext.com/mtm-alpine:23.4.0.1296\ndocker pull registry.opentext.com/mtm-dynamic-crawler:23.4.0.1296\ndocker pull registry.opentext.com/mtm-external-model:23.4.0.1296</code></pre></div>\n<p>Here, <strong>mtm</strong> stands for Magellan Text Mining. And if you are using a different version, update the tag (which is 23.4.0.1296 in this command).</p>\n<p>After pulling the images to our local Docker, we’ll retag them for our Azure Container Registry.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker tag registry.opentext.com/mtm-admin:23.4.0.1296 magellanacr.azurecr.io/mtm-admin:23.4.0.1296\ndocker tag registry.opentext.com/mtm-benchmarking:23.4.0.1296 magellanacr.azurecr.io/mtm-benchmarking:23.4.0.1296\ndocker tag registry.opentext.com/mtm-ecm-crawler:23.4.0.1296 magellanacr.azurecr.io/mtm-ecm-crawler:23.4.0.1296\ndocker tag registry.opentext.com/mtm-ecm-crawler-service:23.4.0.1296 magellanacr.azurecr.io/mtm-ecm-crawler-service:23.4.0.1296\ndocker tag registry.opentext.com/mtm-ecm-integration-services:23.4.0.1296 magellanacr.azurecr.io/mtm-ecm-integration-services:23.4.0.1296\ndocker tag registry.opentext.com/mtm-engine:23.4.0.1296 magellanacr.azurecr.io/mtm-engine:23.4.0.1296\ndocker tag registry.opentext.com/mtm-gateway:23.4.0.1296 magellanacr.azurecr.io/mtm-gateway:23.4.0.1296\ndocker tag registry.opentext.com/mtm-kafka:23.4.0.1296 magellanacr.azurecr.io/mtm-kafka:23.4.0.1296\ndocker tag registry.opentext.com/mtm-mongodb:23.4.0.1296 magellanacr.azurecr.io/mtm-mongodb:23.4.0.1296\ndocker tag registry.opentext.com/mtm-pipeline:23.4.0.1296 magellanacr.azurecr.io/mtm-pipeline:23.4.0.1296\ndocker tag registry.opentext.com/mtm-search-api:23.4.0.1296 magellanacr.azurecr.io/mtm-search-api:23.4.0.1296\ndocker tag registry.opentext.com/mtm-security:23.4.0.1296 magellanacr.azurecr.io/mtm-security:23.4.0.1296\ndocker tag registry.opentext.com/mtm-service-discovery-api:23.4.0.1296 magellanacr.azurecr.io/mtm-service-discovery-api:23.4.0.1296\ndocker tag registry.opentext.com/mtm-solr:23.4.0.1296 magellanacr.azurecr.io/mtm-solr:23.4.0.1296\ndocker tag registry.opentext.com/mtm-web-crawler:23.4.0.1296 magellanacr.azurecr.io/mtm-web-crawler:23.4.0.1296\ndocker tag registry.opentext.com/mtm-zookeeper:23.4.0.1296 magellanacr.azurecr.io/mtm-zookeeper:23.4.0.1296\ndocker tag registry.opentext.com/mtm-engine-data:23.4.0.1296 magellanacr.azurecr.io/mtm-engine-data:23.4.0.1296\ndocker tag registry.opentext.com/mtm-postgres:23.4.0.1296 magellanacr.azurecr.io/mtm-postgres:23.4.0.1296\ndocker tag registry.opentext.com/mtm-alpine:23.4.0.1296 magellanacr.azurecr.io/mtm-alpine:23.4.0.1296\ndocker tag registry.opentext.com/mtm-dynamic-crawler:23.4.0.1296 magellanacr.azurecr.io/mtm-dynamic-crawler:23.4.0.1296\ndocker tag registry.opentext.com/mtm-external-model:23.4.0.1296 magellanacr.azurecr.io/mtm-external-model:23.4.0.1296</code></pre></div>\n<p>You can omit the images that you omitted in the previous step. If your ACR name is different, you should replace <strong>magellanacr.azure.io</strong> with the URL for your ACR (which can be found in the Azure portal).</p>\n<p>We’ll now authenticate our local Docker to our ACR, using the Azure CLI.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">az acr login \\\n--name magellanacr</code></pre></div>\n<p>Next step is to push the images that we had retagged in our previous step.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker push magellanacr.azurecr.io/mtm-admin:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-benchmarking:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-ecm-crawler:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-ecm-crawler-service:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-ecm-integration-services:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-engine:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-gateway:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-kafka:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-mongodb:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-pipeline:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-search-api:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-security:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-service-discovery-api:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-solr:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-web-crawler:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-zookeeper:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-engine-data:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-postgres:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-alpine:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-dynamic-crawler:23.4.0.1296\ndocker push magellanacr.azurecr.io/mtm-external-model:23.4.0.1296</code></pre></div>\n<p>Like earlier, images that were not pulled can be omitted. And the <strong>magellanacr.azurecr.io</strong> part might need to be replaced depending on your ACR name.</p>\n<blockquote>\n<p><strong>Note</strong>: The Docker images might be quite large, so the pull and push commands might take a bit of time. If pull or push command fails midway, just re-run the same command — docker won’t duplicate the images that were successfully pushed/pulled.</p>\n</blockquote>\n<p>We can then verify that all the images are in our ACR with the following command, which lists the images in ACR.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">az acr repository list \\\n--name magellanacr</code></pre></div>\n<h1 id=\"step-7-create-a-storage-class\"><a href=\"#step-7-create-a-storage-class\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 7: Create a Storage Class</h1>\n<p>The helm chart already provides a YAML file to create a Storage Class, called <strong>mtm</strong>. Once you are in the root folder (parent of aws, azure, gcp and mtm folders), run the following command.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f azure/mtm-storage-class-azure.yaml</code></pre></div>\n<p>We’ll then verify that the Storage Class is created.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl get sc mtm</code></pre></div>\n<h1 id=\"step-8-create-a-namespace\"><a href=\"#step-8-create-a-namespace\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 8: Create a namespace</h1>\n<p>We’ll create a namespace to use for our Magellan deployment using the following command.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl create namespace magellan-namespace</code></pre></div>\n<p>Here, I’ve named the namespace as <strong>magellan-namespace</strong>. We can verify that it is created by running the following command, which should return the name of the namespace.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl config view --minify | grep \"namespace: magellan-namespace\"</code></pre></div>\n<p>We’ll then set the new namespace as the current context.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl config set-context \\\n--current --namespace=\"magellan-namespace\"</code></pre></div>\n<h1 id=\"step-9-create-persistent-volume-claim\"><a href=\"#step-9-create-persistent-volume-claim\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 9: Create Persistent Volume Claim</h1>\n<p>Firstly, we need to verify that our subscription to <strong>Microsoft.Storage</strong> is registered.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">az provider list \\\n--query \"[?namespace=='Microsoft.Storage']\" \\\n--output table</code></pre></div>\n<p>If the status of the response is <strong>NotRegistered</strong>, we’ll have to register for it manually using the following command.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">az provider register \\\n--namespace Microsoft.Storage</code></pre></div>\n<p>You can re-verify the subscription status after running the above command.</p>\n<p>We’ll then apply the azure/mtm-pvc-azure-file.yaml file in our folder as per instructions mentioned in the guide.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f azure/mtm-pvc-azure-file.yaml</code></pre></div>\n<p>Verify that the new PVC has been created by running the following command and checking that the status is <strong>Bound</strong>.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl get pvc mtm</code></pre></div>\n<p>In my case, where I was using a PostgreSQL docker image instead of the service, I had to apply azure/mtm-pvc-azure-disk.yaml as well.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f azure/mtm-pvc-azure-disk.yaml</code></pre></div>\n<p>If we check the status of this PVC (named <strong>mtm-azuredisk</strong>), it will be in <strong>Pending</strong> state. That is because this will only become bound when it is initially used by the deployment.</p>\n<h1 id=\"step-10-create-a-static-ip\"><a href=\"#step-10-create-a-static-ip\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 10: Create a static IP</h1>\n<p>We’ll ask Azure to provision a static IP which we’ll later be connecting with our domain address.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">az network public-ip create \\\n--name magellan-ip \\\n--resource-group aks-magellan-res-grp \\\n--allocation-method static \\\n--query publicIP.ipAddress \\\n--sku Standard \\\n-o tsv</code></pre></div>\n<p>Here, we’ve named the IP as <strong>magellan-ip</strong>. The resource group should match as well.</p>\n<p>Next, we should verify that our IP is present in the public IP list.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">az network public-ip list</code></pre></div>\n<h1 id=\"step-11-deploy-an-ingress-controller\"><a href=\"#step-11-deploy-an-ingress-controller\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 11: Deploy an Ingress Controller</h1>\n<p>We’ll be using ingress-nginx controller, which is different from the default one that we can avail from Azure. So, we’ll add it to our helm repo list and update the list.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo update</code></pre></div>\n<p>We’ll then create our Ingress controller using the following command, which is a little different from the command provided in the official guide.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">helm install magellan-ingress-controller ingress-nginx/ingress-nginx \\\n--set rbac.create=true \\\n--set controller.service.loadBalancerIP=100.100.100.100 \\\n--set controller.config.proxy-body-size=1024m \\\n--set controller.service.annotations.\"service\\.beta\\.kubernetes\\.io/azure-load-balancer-health-probe-request-path\"=/healthz</code></pre></div>\n<p>In the above command, replace 100.100.100.100 with the static IP that we created in step 10 above.</p>\n<p>Also, notice the <strong>controller.service.annotations</strong> section — this is not in the guide. This part was added after going through a lot of debugging sessions. Apparently, Azure expects the health probe path to be /healthz (reference: <a href=\"https://github.com/Azure/AKS/issues/3210\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/Azure/AKS/issues/3210</a>).</p>\n<h1 id=\"step-12-update-helm-chart-values\"><a href=\"#step-12-update-helm-chart-values\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 12: Update Helm Chart values</h1>\n<p>Before deployment, we’ll update the Helm chart <strong>values.yaml</strong> file as mentioned in the guide (with occasional explanations given below):</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubernetes.cluster.provider: \"azure\"\nkubernetes.cluster.domain: \"my-domain-address.com\"\nkubernetes.cluster.storageClassName: \"mtm\"</code></pre></div>\n<p>Here, domain address should be replaced with the domain address provisioned for the deployment. Also, update the DNS record to point to the static IP that we created for the deployment (which I earlier named as <strong>magellan-ip</strong> in step 10).</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker.registry: \"magellanacr.azurecr.io”</code></pre></div>\n<p>I am using the PostgreSQL docker image, so I filled the Postgres-related stuff in my values.yaml file as follows (Refer the guide if you’re using Azure Postgres service).</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">postgresql.use_docker_image: true\npostgresql.pvc_name: \"mtm-azuredisk\"\npostgresql.host: \"mtm-postgres\"\npostgresql.port: 5432\npostgresql.admin_database: \"postgres\"\n\ncredentials.postgresql.admin_user: \"admin\"\ncredentials.postgresql.admin_password: \"YWRtaW4=\"</code></pre></div>\n<p>Here, the admin_password given is the base64 encoded version of the string <strong>admin</strong>, which is the default password. All the passwords in the file are instructed to be base64 encoded versions as per the guide.</p>\n<p>I’ve also opted to not use HTTPS here, but it can be configured by following the guide. So, we’ll update the following values.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gateway.ssl.enabled: false\ngateway.ssl.custom_certificate: false\n\ncredentials.gateway.ssl.key_store_password: \"\"\ncredentials.gateway.ssl.key_manager_password: \"\"</code></pre></div>\n<p>Then, we have a few more values as mentioned in the guide.</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">engine.replicas: 1\nengine.replica_size: “10Gi”\n\nsolr.replicas: 1\nsolr.replica_size: “10Gi”\nsolr.num_shards: 1\nsolr.replication_factor: 1\nsolr.sc_name: \"mtm\"\n\nzookeeper.replicas: 1\nzookeeper.replica_size: \"1Gi\"\nzookeeper.sc_name: \"mtm\"\n\nkafka.replicas: 1\nkafka.replica_size: \"10Gi\"\nkafka.sc_name: \"mtm\"\n\nmongodb.replica_size: \"10Gi\"\nmongodb.sc_name: \"mtm\"</code></pre></div>\n<h1 id=\"step-13-create-a-custom-tier-optional\"><a href=\"#step-13-create-a-custom-tier-optional\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 13: Create a custom tier (Optional)</h1>\n<p>The tiers for Magellan Text Mining (MTM) deployment are specified in the files inside mtm/tiers folder. In my case, I opted to create a custom tier file and named it as mtm/tiers/mtm-custom.yaml</p>\n<p>I set a few services to not install, using the install.<service>: false value and specified the required resources for the rest of the services, similar to the content in mtm-engine.yaml tier file.</p>\n<h1 id=\"step-14-deploy\"><a href=\"#step-14-deploy\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Step 14: Deploy!</h1>\n<p>The guide mentions specifying the tier file along with the helm install command. I used the custom tier file that I created in step 13, so my command was as follows:</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">helm install mtm-23.4.0.1296 ./mtm/ -f ./mtm/tiers/mtm-custom.yaml</code></pre></div>\n<p>The command should deploy the product and render a brief note regarding which URLs to access.</p>\n<h1 id=\"bonus-steps\"><a href=\"#bonus-steps\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Bonus steps</h1>\n<p>If you decide to use HTTPS, you need to SSH into the node where the gateway service component is deployed. There is no direct way for this — but you can look into <a href=\"https://learn.microsoft.com/en-us/azure/bastion/bastion-overview\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Azure Bastions</a> or refer <a href=\"https://ystatit.medium.com/azure-ssh-into-aks-nodes-471c07ad91ef\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this tutorial</a>. After accessing the node, refer the guide to create a Java keystore file and update the <strong>values.yaml</strong> file.</p>\n<p>There are scenarios where you might want to upgrade the deployment. Redeployment after setting up SSL (as mentioned in above paragraph) would be a good example. In this case, we can run the following command:</p>\n<div class=\"gridsome-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">helm upgrade -f ./tiers/mtm-custom.yaml mtm-23.4.0.1296 . \\\n--set=reconfigure={mtm-gateway,mtm-security}</code></pre></div>\n<p>Here, I’ve asked to reconfigure <strong>mtm-gateway</strong> and <strong>mtm-security</strong> for SSL configuration. If you have other components to be reconfigured, mention that as well.</p>\n<p>Also, in case some of your changes are not reflecting, the PVC might need to be recreated (I learned it the hard way!).</p>\n<h1 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Conclusion</h1>\n<p>My deployment wasn’t as smooth as it might seem from the article. I had to debug a lot of stuff, and pairing up with other colleagues helped. Sometimes, you’ll learn new things, and at other times, fresh eyes help find stuff you overlooked.</p>\n<p>An additional recommendation from me — use <a href=\"https://k8slens.dev/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lens</a>, it helps.</p>\n"},"blogs":{"edges":[{"node":{"tag":"careers","title":"A Marketer's Guide to Surviving B2B IT Consulting","description":"","duration":"3 min read","thumbnail_alt":"A growing plant is layered over the artwork of a human brain","slug":"a-marketers-guide-to-surviving-b2b-it-consulting","tarkan":{"name":"Saudnya Kharade","role":"Brand Specialist","image":"saudnya.jpg","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"a-marketers-guide/b2b-blog.webp"}},{"node":{"tag":"web","title":"Blockchain as public ledger","description":"","duration":"5 min read","thumbnail_alt":"Blockchain FTW","slug":"smart-contracts-store-information","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":""}},{"node":{"tag":"web","title":"Using Tarka Chat in your React/Vue apps","description":"Using Tarka Chat in your React/Vue apps","duration":"5 min read","thumbnail_alt":"Using Tarka Chat in your React/Vue apps","slug":"using-tarka-chat-in-your-react-vue-apps","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"using-tarka-chat-in-your-react-vue-apps/Photo-by-Volodymyr-Hryshchenko-on-Unsplash.webp"}},{"node":{"tag":"web","title":"Neovim as a java IDE","description":"Neovim as a java IDE","duration":"5 min read","thumbnail_alt":"Neovim as a java IDE","slug":"neovim-as-java-ide","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":""}},{"node":{"tag":"consulting","title":"Navigating Change: The BA's Role in Managing Agile Transformations","description":"Navigating change: The BA's Role in Managing Agile Transformations","duration":"3 min read","thumbnail_alt":"Navigating change: The BA's Role in Managing Agile Transformations","slug":"navigating-change","tarkan":{"name":"Sparsh Gupta","role":"Product Owner","image":"sparsh.png","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@sparsh28"}},"coverImage":"navigating-change/navigating-change.webp"}},{"node":{"tag":"AI","title":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","description":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","duration":"7 min read","thumbnail_alt":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","slug":"extracting-structured-data","tarkan":{"name":"Kesavan","role":"Developer","image":"k7.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@itzk7"}},"coverImage":""}},{"node":{"tag":"web","title":"Functional Programming for Humans — Foundations","description":"Functional Programming for Humans — Foundations","duration":"6 min read","thumbnail_alt":"Functional Programming for Humans — Foundations","slug":"functional-programming-for-humans-foundation","tarkan":{"name":"Sameer Kumar","role":"Technical Consultant","image":"sameer.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"functional-programming-for-humans-foundation/Functional-Programming-for-Humans—Foundations.webp"}},{"node":{"tag":"web","title":"Leveraging DTO pattern in Go-based web apps","description":"Leveraging DTO pattern in Go-based web apps","duration":"4 min read","thumbnail_alt":"Leveraging DTO pattern in Go-based web apps","slug":"go-dto-pattern","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"go-dto-pattern/go-dto-pattern.webp"}},{"node":{"tag":"web","title":"Handling message duplication in Kafka","description":"Handling message duplication in Kafka","duration":"5 min read","thumbnail_alt":"Handling message duplication in Kafka","slug":"kafka-message-duplication","tarkan":{"name":"Vignesh Ravichandran","role":"Developer","image":"vignesh.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@vignesh-ravichandran"}},"coverImage":"kafka-message-duplication/kafka-message-duplication.webp"}},{"node":{"tag":"web","title":"Generic Callbacks in Rust","description":"Generic Callbacks in Rust","duration":"3 min read","thumbnail_alt":"Generic Callbacks in Rust","slug":"generic-callbacks-rust","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"generic-callbacks-rust/generic-callbacks-rust.webp"}},{"node":{"tag":"AI","title":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","description":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","duration":"8 min read","thumbnail_alt":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","slug":"batch-transcription","tarkan":{"name":"Kesavan","role":"Developer","image":"k7.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@itzk7"}},"coverImage":"batch-transcription/batch-transcription.webp"}},{"node":{"tag":"devops","title":"OpenText Magellan and AKS: An unofficial deployment guide","description":"OpenText Magellan and AKS: An unofficial deployment guide","duration":"11 min read","thumbnail_alt":"OpenText Magellan and AKS: An unofficial deployment guide","slug":"opentext-magellan-aks-unofficial-deployment-guide","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":""}},{"node":{"tag":"web","title":"Searching For The Perfect Fit: Our Move from Algolia to Typesense","description":"Our search for an open-source, cost-effective, scalable, and self-hosted solution led us to Typesense, an alternative to the very popular Algolia.","duration":"5 min read","thumbnail_alt":"Searching For The Perfect Fit: Our Move from Algolia to Typesense","slug":"searching-perfect-fit-move-from-algolia-to-typesense","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"searching-perfect-fit-move-from-algolia-to-typesense/searching-perfect-fit-move-from-algolia-to-typesense.webp"}},{"node":{"tag":"mobile","title":"5 essential tools and tips for every iOS developer","description":"5 essential tools and tips for every iOS developer","duration":"4 min read","thumbnail_alt":"5 essential tools and tips for every iOS developer","slug":"essential-tools-and-tips-for-every-ios-developer","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"ios-tips-and-tools/Recommended-tools-tips-for-iOS-developers.png"}},{"node":{"tag":"web","title":"Build your first Swift command-line tool with ArgumentParser","description":"Using Swift Package Manager (SPM) and swift-argument-parser, it's easy to create command-line tools in Swift. Here's how you can do it.","duration":"10 min read","thumbnail_alt":"Build your first Swift command-line tool with ArgumentParser","slug":"build-your-first-swift-command-line-tool-with-argumentparser","tarkan":{"name":"Ajith Renjala","role":"A tarkan","image":"bitman.png","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ajithrnayak"}},"coverImage":"build-your-first-swift-command-line-tool-with-argumentparser/build-your-first-swift-command-line-tool-with-argumentparser.webp"}},{"node":{"tag":"mobile","title":"The ultimate VPN detection guide for iOS and Android","description":"The ultimate VPN detection guide for iOS and Android","duration":"3 min read","thumbnail_alt":"The ultimate VPN detection guide for iOS and Android","slug":"vpn-detection-guide-ios-android","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"the-ultimate-vpn-detection/the-ultimate-vpn.webp"}},{"node":{"tag":"mobile","title":"React Native vs. Flutter in 2023: A Comprehensive Comparison","description":"A detailed comparison of React Native vs. Flutter to help engineering managers make decisions on how, where, and when to use React or Flutter.","duration":"14 min read","thumbnail_alt":"React Native vs. Flutter in 2023: A Comprehensive Comparison","slug":"react-native-vs-flutter-2023-comparison","tarkan":{"name":"Ajith Renjala","role":"A tarkan","image":"bitman.png","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ajithrnayak"}},"coverImage":"react-native-vs-flutter-2023-comparison/react-native-vs-flutter-2023-comparison.webp"}},{"node":{"tag":"mobile","title":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","description":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","duration":"3 min read","thumbnail_alt":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","slug":"kotlin-multiplatform-mobile","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"kotlin-multiplatform-mobile/kotlin-multiplatform-mobile.webp"}},{"node":{"tag":"web","title":"Reshaping data with PostgreSQL pivot tables","description":"Reshaping data with PostgreSQL pivot tables","duration":"4 min read","thumbnail_alt":"Reshaping data with PostgreSQL pivot tables","slug":"reshaping-data-postgresql-pivot-tables","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"reshaping-data-with-postgres/reshaping-data-with-postgreSQL.webp"}},{"node":{"tag":"web","title":"Effortlessly update YouTube videos on your Gridsome site","description":"How to build an auto-updating YouTube feed on your site using the YouTube API and Gridsome for Vue.js with step-by-step instructions and code samples.","duration":"10 min read","thumbnail_alt":"Effortlessly update YouTube videos on your Gridsome site","slug":"effortlessly-update-youtube-videos-on-your-gridsome-site","tarkan":{"name":"Ajith Renjala","role":"A tarkan","image":"bitman.png","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ajithrnayak"}},"coverImage":"effortlessly-update-youtube-videos-on-your-gridsome-site/effortlessly-update-youtube-videos-on-your-gridsome-site.webp"}},{"node":{"tag":"devops","title":"The only in-depth AWS ECS monitoring solution you'll need","description":"This is a detailed blog on how to set up in-depth AWS ECS monitoring. The bundled alerts that come with ECS are inadequate. DevOps teams need more insight to be efficient.","duration":"6 min read","thumbnail_alt":"The only in-depth AWS ECS monitoring solution you'll need","slug":"aws-ecs-monitoring-solution","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"aws-ecs-monitoring-solution/cover.gif"}},{"node":{"tag":"devops","title":"Designing a centralized alert routing system using AWS Lambda","description":"Who wouldn't love a centralized monitoring and alerting system, right? Are you in the process of consolidating all your alerting systems into a single one?","duration":"4 min read","thumbnail_alt":"Designing a centralized alert routing system using AWS Lambda","slug":"centralized-alert-routing-system-aws-lambda","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"centralized-alert-routing-system-aws-lambda/cover.gif"}},{"node":{"tag":"web","title":"Rate limiting for distributed environments","description":"Different ways to architect distributed environments with rate limiting code snippets available","duration":"5 min read","thumbnail_alt":"Rate limiting for distributed environments","slug":"rate-limiting-for-distributed-environments","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"rate-limiting-for-distributed-environments/rate-limiting-for-distributed-environments.webp"}},{"node":{"tag":"consulting","title":"Documentation: Yes, We Should!","description":"Imagine you recently joined a new team, and after a couple of weeks, you were assigned a bug ticket. You look at the ticket and decide to see if this issue surfaced in the past and so do a search in the bug tracking tool.","duration":"4 min read","thumbnail_alt":"A 3D image of a file folder with purple, yellow and green color rectangles for pages","slug":"documentation-yes-we-should","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"documentation-yes-we-should/documentation-yes-we-should.png"}},{"node":{"tag":"mobile","title":"Java Life vs Kotlin Life","description":"Developers using Kotlin don't use it to its fullest potential because they use it just like Java. Kotlin is so much more powerful and concise. Here's how.","duration":"3 min read","thumbnail_alt":"Java Life vs Kotlin Life","slug":"java-life-vs-kotlin-life","tarkan":{"name":"Nandagopal Ravichandran","role":"Mobile Developer","image":"nanda.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"java-life-vs-kotlin-life/java-life-vs-kotlin-life.webp"}},{"node":{"tag":"consulting","title":"Building Serious Software","description":"Do you know what every software startup entrepreneur dreams of after they validate the market? Software that does not break with scale and is adaptable to change.","duration":"4 min read","thumbnail_alt":"A cartoon of loosely held blocks which are held by stick figures from collapsing","slug":"building-serious-software","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":"building-serious-software/banner.png"}},{"node":{"tag":"consulting","title":"Wait! Don't write code yet","description":"As developers, it is necessary to understand how the code we write helps solve real-world problems. Often, it is easier to think about users while writing the application layer of code.","duration":"3 min read","thumbnail_alt":"A isometric image of a 3D maze","slug":"wait-dont-write-code-yet","tarkan":{"name":"Vidhya Desikan","role":"Developer","image":"vidhya.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@vdviddin"}},"coverImage":"wait-dont-write-code-yet/wait-dont-write-code-yet.png"}},{"node":{"tag":"web","title":"Rust : Testing API Requests — HttpMock","description":"Rust : Testing API Requests — HttpMock","duration":"3 min read","thumbnail_alt":"Rust : Testing API Requests — HttpMock","slug":"rust-testing-api-requests-httpmock","tarkan":{"name":"Arun Kumar","role":"A tarkan","image":"anonymous.jpg","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@arunkumar_33617"}},"coverImage":"rust-testing/Rust-testing.webp"}},{"node":{"tag":"web","title":"Considering a GraphQL switch? Here's why it is worth it.","description":"Considering a switch to GraphQL? From better data aggregation to schema stitching, here's why you should consider adopting GraphQL in your stack.","duration":"5 min read","thumbnail_alt":"Considering a GraphQL switch? Here's why it is worth it.","slug":"graphql-switch-worth-it","tarkan":{"name":"Deepak Prasanna","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@deepakprasanna"}},"coverImage":"graphql-switch-worth-it/graphql-switch-worth-it.webp"}},{"node":{"tag":"consulting","title":"What does a CTO do?","description":"There has been a lot of hand-wringing and discussions about what a CTO does on the interwebs. Does a CTO write code? Does a CTO's calendar look like it is on the maker's or the manager's schedule? Does a CTO sit in on interviews?","duration":"6 min read","thumbnail_alt":"A isometric image of a balancing scale with code on one side and detective lens on the other side","slug":"what-does-a-cto-do","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"what-does-a-cto-do/cover.png"}},{"node":{"tag":"careers","title":"A writer's guide to working in a tech consultancy","description":"A manual for writers who work with cross-functional teams or roles.","duration":"4 min read","thumbnail_alt":"A circular red shape surrounded by cubes","slug":"a-writers-guide-to-working-in-a-tech-consultancy","tarkan":{"name":"Puneetha Jagannathan","role":"Brand Communications Specialist","image":"puneetha.jpg","blurb":"She is still thiking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://puneetha-j.medium.com/"}},"coverImage":"a-writers-guide-to-working-in-a-tech-consultancy/a-writers-guide-to-working-in-a-tech-consultancy.png"}},{"node":{"tag":"mobile","title":"How to create shortcuts in your Android app","description":"Here's how you can implement static, dynamic and pinned shortcuts using our code snippets and guidelines.","duration":"4 min read","thumbnail_alt":"How to create shortcuts in your Android app","slug":"create-shortcuts-android-app","tarkan":{"name":"Raja Jawahar","role":"Mobile Developer","image":"raja.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"create-shortcuts-android-app/create-shortcuts-android-app.webp"}},{"node":{"tag":"mobile","title":"Launching a screen within an app using custom Siri voice commands","description":"Here's how you can configure NSUserActivity and IntentsUI in iOS to enable users to navigate to a specific screen inside an app using voice commands.","duration":"3 min read","thumbnail_alt":"Launching a screen within an app using custom Siri voice commands","slug":"launch-screen-siri-voice-commands","tarkan":{"name":"Naren Krishna","role":"iOS Developer","image":"naren.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"launch-screen-siri-voice-commands/launch-screen-siri-voice-commands.gif"}},{"node":{"tag":"web","title":"Testim 101: Automation Testing on Steroids","description":"Testim is an AI-based testing framework that helps you automate website testing. Here's a detailed review of its features, pros, and cons.","duration":"5 min read","thumbnail_alt":"Testim 101: Automation Testing on Steroids","slug":"testim-automation-testing-on-steroids","tarkan":{"name":"Sameer Kumar","role":"Technical Consultant","image":"sameer.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"testim-automation-testing-on-steroids/testim-automation-testing-on-steroids.webp"}},{"node":{"tag":"web","title":"How to setup SFTP in Golang Authentication Using Go","description":"How to setup SFTP in Golang Authentication Using Go","duration":"2 min read","thumbnail_alt":"How to setup SFTP in Golang Authentication Using Go","slug":"set-up-sftp-authentication-go","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":""}},{"node":{"tag":"devops","title":"An introductory guide to functional programming concepts","description":"An introductory guide to functional programming concepts","duration":"10 min read","thumbnail_alt":"An introductory guide to functional programming concepts","slug":"introductory-guide-functional-programming-concepts","tarkan":{"name":"Sreedev Kodichath","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://sreedevk.medium.com/"}},"coverImage":"introductory-guide-functional-programming-concepts/introductory-guide-functional-programming-concepts.gif"}},{"node":{"tag":"design","title":"Trying out Material You. A tale of two background colors.","description":"Trying out Material You. A tale of two background colors.","duration":"7 min read","thumbnail_alt":"Trying out Material You. A tale of two background colors.","slug":"material-you-critique-light-mode-background-color-m3","tarkan":{"name":"Andy Reed","role":"A tarkan","image":"anonymous.jpg","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@andy.reed89"}},"coverImage":"material-you-critique-light-mode-background-color-m3/material-you-critique-light-mode-background-color-m3.webp"}},{"node":{"tag":"web","title":"How to Build a Web Application using Rust — Part III","description":"How to Build a Web Application using Rust — Part III","duration":"2 min read","thumbnail_alt":"How to Build a Web Application using Rust — Part III","slug":"how-to-build-a-web-application-with-rust-part-3","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"how-to-build-a-web-application-with-rust-part-3/how-to-build-a-web-application-with-rust-part-3.webp"}},{"node":{"tag":"devops","title":"Handling multiple environments with Helm","description":"Handling multiple environments with Helm","duration":"4 min read","thumbnail_alt":"Handling multiple environments with Helm","slug":"handling-multiple-environments-with-helm","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"handling-multiple-environments-with-helm/handling-multiple-environments-with-helm.webp"}},{"node":{"tag":"devops","title":"How to reduce your Node.js docker image size by 70%","description":"How to reduce your Node.js docker image size by 70%","duration":"4 min read","thumbnail_alt":"How to reduce your Node.js docker image size by 70%","slug":"reduce-nodejs-docker-image-size","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"reduce-nodejs-docker-image-size/how-to-reduce.gif"}},{"node":{"tag":"web","title":"How to build a Web Application with Rust: Part II","description":"How to build a Web Application with Rust: Part II","duration":"2 min read","thumbnail_alt":"How to build a Web Application with Rust: Part II","slug":"how-to-build-a-web-application-with-rust-part-2","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"how-to-build-a-web-application-with-rust-part-2/how-to-build-a-web-application-with-rust-part-2.webp"}},{"node":{"tag":"","title":"How to build a Web Application with Rust: Part I","description":"How to build a Web Application with Rust: Part I","duration":"2 min read","thumbnail_alt":"How to build a Web Application with Rust: Part I","slug":"how-to-build-a-web-application-with-rust-part-1","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"how-to-build-a-web-application-with-rust-part-1/how-to-build-a-web-application-with-rust-part-1.webp"}},{"node":{"tag":"careers","title":"Our Guide To Hiring Great People","description":"How Tarka Labs approaches hiring.","duration":"5 min read","thumbnail_alt":"Colors in geometric shapes with hand-drawn sketches on them","slug":"our-guide-to-hiring-great-people","tarkan":{"name":"Jenifa Newlin","role":"People Champion","image":"jenifa.jpg","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@jenifa_85990"}},"coverImage":"our-guide-to-hiring-great-people/our-guide-to-hiring-great-people.png"}},{"node":{"tag":"devops","title":"Digital Audio 101: Playing Audio From A Microcontroller","description":"Digital Audio 101: Playing Audio From A Microcontroller","duration":"7 min read","thumbnail_alt":"Digital Audio 101: Playing Audio From A Microcontroller","slug":"digital-audio-101-playing-audio-from-a-microcontroller","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"digital-audio-101-playing-audio-from-a-microcontroller/digital-audio-101-playing-audio-from-a-microcontroller.gif"}},{"node":{"tag":"web","title":"What I learned refactoring a monolith into microservices","description":"Here are my learnings from 6 months of refactoring a monolithic MEAN stack web application running on docker inside a virtual machine.","duration":"4 min read","thumbnail_alt":"What I learned refactoring a monolith into microservices","slug":"refactoring-monolith-into-microservices","tarkan":{"name":"Utkarsh Mehta","role":"Developer","image":"bitman.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://life-of-utkarsh.medium.com/"}},"coverImage":"refactoring-monolith-into-microservices/refactoring-monolith-into-microservices.webp"}},{"node":{"tag":"consulting","title":"Don't Rewrite, Refactor: Why Brownfield Development Helps","description":"If you're finding it hard to build and ship new features, spending time to read and refactor the existing code can be better than rewriting it.","duration":"3 min read","thumbnail_alt":"Don't Rewrite, Refactor: Why Brownfield Development Helps","slug":"dont-rewrite-refactor-brownfield-development","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"dont-rewrite-refactor-brownfield-development/dont-rewrite-refactor-brownfield-development.webp"}},{"node":{"tag":"web","title":"Exploring Headless CMS","description":"Exploring Headless CMS","duration":"9 min read","thumbnail_alt":"Exploring Headless CMS","slug":"exploring-headless-cms","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"exploring-headless-cms/exploring-headless-cms.webp"}},{"node":{"tag":"blockchain","title":"My thoughts on Substrate","description":"My thoughts on Substrate","duration":"9 min read","thumbnail_alt":"My thoughts on Substrate","slug":"my-thoughts-on-substrate","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"my-thoughts-on-substrate/my-thoughts-on-substrate.webp"}},{"node":{"tag":"web","title":"Learnings from a failed product","description":"Learnings from a failed product","duration":"3 min read","thumbnail_alt":"Learnings from a failed product","slug":"learnings-from-a-failed-product","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"learning-from-a-failed-product/learning-from.webp"}},{"node":{"tag":"","title":"Filling images with mosaic colors using D3.js","description":"Filling images with mosaic colors using D3.js","duration":"3 min read","thumbnail_alt":"Filling images with mosaic colors using D3.js","slug":"filling-images-with-mosaic-colors-using-d3js","tarkan":{"name":"Alen Thomas","role":"A tarkan","image":"anonymous.jpg","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@alenthomas9"}},"coverImage":"filling-images-with-mosaic-colors-using-d3js/filling-images-with-mosaic-colors-using-d3js.webp"}},{"node":{"tag":"web","title":"How To Learn Coding Through Live Streaming","description":"How To Learn Coding Through Live Streaming","duration":"5 min read","thumbnail_alt":"How To Learn Coding Through Live Streaming","slug":"learn-coding-through-live-streaming","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"learn-youtube-video/rahul-blog-1.webp"}},{"node":{"tag":"web","title":"Remote pairing in mac (with low latency)","description":"Remote pairing in mac (with low latency)","duration":"3 min read","thumbnail_alt":"Remote pairing in mac (with low latency)","slug":"remote-pairing-mac-low-latency","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":""}},{"node":{"tag":"mobile","title":"Debounce in Swift","description":"All about debounce: 4 ways to achieve debounce in Swift","duration":"5 min read","thumbnail_alt":"A representation of a function called 'debounce' which is accepting, as input, a green circle labelled '3' and outputting an identical-looking green circle with no label","slug":"debounce-in-swift","tarkan":{"name":"Pavan Kumar C","role":"iOS Developer","image":"pavan.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://pavankumarchalla.medium.com/"}},"coverImage":""}},{"node":{"tag":"web","title":"Service Mesh in Kubernetes — Pictorially","description":"Service Mesh in Kubernetes — Pictorially","duration":"5 min read","thumbnail_alt":"Service Mesh in Kubernetes — Pictorially","slug":"service-mesh-kubernetes-guide","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":"service-mesh-in-kubernetes/service-mesh-2.webp"}},{"node":{"tag":"web","title":"Javascript Sandbox for your Node Project","description":"Guide to safely run customer javascript code in your node.js environment using vm2.","duration":"3 min read","thumbnail_alt":"Sandbox with a pail and shovel","slug":"javascript-sandbox-for-your-node-project","tarkan":{"name":"Utkarsh Mehta","role":"Developer","image":"bitman.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://life-of-utkarsh.medium.com/"}},"coverImage":"javascript-sandbox-for-your-node-project/javascript-sandbox-for-your-node-project.png"}},{"node":{"tag":"web","title":"Deploying your Rails application using dokku","description":"Deploying your Rails application using dokku","duration":"5 min read","thumbnail_alt":"Deploying your Rails application using dokku","slug":"how-to-deploy-rails-application-with-dokku","tarkan":{"name":"Vinoth","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@avinoth"}},"coverImage":"how-to-deploy-rails-application-with-dokku/header.webp"}},{"node":{"tag":"web","title":"Searching with MongoDB and Elastic Search","description":"Searching with MongoDB and Elastic Search","duration":"4 min read","thumbnail_alt":"Searching with MongoDB and Elastic Search","slug":"searching-with-mongodb-and-elastic-search","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"searching-with-mongodb-and-elastic-search/header.webp"}},{"node":{"tag":"web","title":"All You Need To Know About Comments in Ruby","description":"All You Need To Know About Comments in Ruby","duration":"5 min read","thumbnail_alt":"All You Need To Know About Comments in Ruby","slug":"all-you-need-to-know-about-comments-in-ruby","tarkan":{"name":"Sreedev Kodichath","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://sreedevk.medium.com/"}},"coverImage":"all-you-need-to-know-about-comments-in-ruby/header.webp"}},{"node":{"tag":"AI","title":"Person of Interest: How I built a Facial Recognition Machine Learning model.","description":"Person of Interest: How I built a Facial Recognition Machine Learning model.","duration":"5 min read","thumbnail_alt":"Person of Interest: How I built a Facial Recognition Machine Learning model.","slug":"building-a-facial-recognition-machine-learning-model","tarkan":{"name":"Rajiv Manivannan","role":"Developer","image":"rajiv.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"building-a-facial-recognition-machine-learning-model/1.webp"}},{"node":{"tag":"web","title":"Why we refuse fixed bid projects","description":"Why we refuse fixed bid projects","duration":"4 min read","thumbnail_alt":"Why we refuse fixed bid projects","slug":"why-we-refuse-fixed-bid-project","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"why-we-refuse-fixed-bid-project/why-we-refuse-fixed-big-projects.webp"}},{"node":{"tag":"web","title":"Know Kubernetes - Pictorially","description":"Understand kubernetes and its components with easily relatable pictorial representations.","duration":"7 min read","thumbnail_alt":"Black and white sketch of a square room labelled 'MASTER' with the following items: disk pack, chest of drawers with a wifi signal-emitting device on top, and two tables","slug":"know-kubernetes-pictorially","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":""}},{"node":{"tag":"mobile","title":"Why flutter","description":"Look beyond react native and why flutter is exciting.","duration":"5 min read","thumbnail_alt":"A hummingbird in flight","slug":"why-flutter","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"why-flutter/why-flutter.png"}},{"node":{"tag":"web","title":"PDF Comparison in Pure Ruby","description":"PDF Comparison in Pure Ruby","duration":"2 min read","thumbnail_alt":"PDF Comparison in Pure Ruby","slug":"pdf-comparison-pure-ruby","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"pdf-comparison-in-pure-ruby/pdf-comparison-in-pure-ruby.webp"}},{"node":{"tag":"careers","title":"How we hire engineers","description":"How Tarka Labs hires engineers. Published in the interest of transparency.","duration":"3 min read","thumbnail_alt":"A dark room with two empty chairs facing each other across a table","slug":"how-we-hire-engineers","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"how-we-hire-engineers/how-we-hire-engineers.png"}},{"node":{"tag":"web","title":"Power of SSH Tunneling","description":"Most developers spend a considerable amount of their time ssh'd into remote machines, however, few are aware of the power of ssh tunnels.","duration":"4 min read","thumbnail_alt":"Silhouette of a man standing inside a glowing blue tunnel with a glowing white circle in front of him","slug":"power-of-ssh-tunneling","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"power-of-ssh-tunneling/power-of-ssh-tunneling.png"}},{"node":{"tag":"careers","title":"All in one's mind.","description":"The effectiveness of a positive mindset and the ability to self-assess.","duration":"4 min read","thumbnail_alt":"A growing plant is layered over the artwork of a human brain","slug":"all-in-ones-mind","tarkan":{"name":"Ramya Raghavan","role":"A tarkan","image":"bitman.png","blurb":"She is still thiking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ramyaraghavan"}},"coverImage":"all-in-ones-mind/onion.webp"}},{"node":{"tag":"web","title":"Event Delegation: Simple yet awesome!","description":"Event Delegation: Simple yet awesome!","duration":"2 min read","thumbnail_alt":"Event Delegation: Simple yet awesome!","slug":"event-delegation-simple-yet-awesome","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"event-delegation/event-delegation.webp"}},{"node":{"tag":"devops","title":"Automating cluster creation with Terraform on DigitalOcean","description":"Automating cluster creation with Terraform on DigitalOcean","duration":"4 min read","thumbnail_alt":"Automating cluster creation with Terraform on DigitalOcean","slug":"automating-cluster-creation-with-terraform-on-digitalocean","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":""}},{"node":{"tag":"AI","title":"Part 2- Creating a neural network using tensorflow to colorize grayscale images.","description":"Part 2- Creating a neural network using tensorflow to colorize grayscale images.\n","duration":"4 min read","thumbnail_alt":"","slug":"colorize-grayscale-images-pt-2","tarkan":{"name":"Deepak Prasanna","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@deepakprasanna"}},"coverImage":""}},{"node":{"tag":"AI","title":"Part I — Creating a neural network using tensorflow to colorize grayscale images.","description":"Part I — Creating a neural network using tensorflow to colorize grayscale images","duration":"4 min read","thumbnail_alt":"","slug":"colorize-grayscale-images-pt-1","tarkan":{"name":"Deepak Prasanna","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@deepakprasanna"}},"coverImage":""}}]}},"context":{}}