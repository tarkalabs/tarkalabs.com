{"hash":"0cf23ec60406531217e5ce675f99a5997c846f10","data":{"blog":{"id":"a201a46b75cab77fad3c0c516bdfdccd","slug":"effortlessly-update-youtube-videos-on-your-gridsome-site","content":"<p>Gridsome is a free and open-source <a href=\"https://gridsome.org/docs/jamstack/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jamstack framework</a> for building fast and modern websites with <a href=\"https://vuejs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vue.js</a>. It uses the GraphQL query language to access and transform data from various sources, including APIs, databases, and local files. It also includes built-in support for static site generation, which makes it a great choice for creating static blogs, documentation sites, and e-commerce storefronts.</p>\n<p>With Gridsome, you have a few different options for working with data, however, in this article, we’ll look at a specific challenge of importing recently uploaded videos from a YouTube channel using the <a href=\"https://developers.google.com/youtube/v3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">YouTube Data API</a>.</p>\n<p>Let’s get started. [<a href=\"#toc-section-10\">Click here for TL,DR</a>]</p>\n<p>We will present the YouTube videos in a two-column grid format, as shown in the image below:</p>\n<figure><img src=\"/blog/effortlessly-update-youtube-videos-on-your-gridsome-site/tarka-screenshot.webp\" alt=\"Screenshot from [www.tarkalabs.com](http://www.tarkalabs.com/)\"><figcaption>Screenshot from <a href=\"http://www.tarkalabs.com/\">www.tarkalabs.com</a></figcaption></figure>\n<h1 id=\"youtube-api-overview\"><a href=\"#youtube-api-overview\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>YouTube API Overview</h1>\n<p>We’ll use Fireship.io, one of my favorite YouTube channels, for our demonstration, so we’ll need to use the REST APIs that YouTube provides to import the <a href=\"https://www.youtube.com/@Fireship/videos\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">recently uploaded videos</a>.</p>\n<p>Here is the API Reference guide for <a href=\"https://developers.google.com/youtube/v3/docs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The YouTube Data API</a>.</p>\n<p>But before we get started, we’ll need an <a href=\"https://developers.google.com/youtube/v3/getting-started#before-you-start\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">API key</a> so that we can authenticate and identify the submitted API requests. Follow the instructions to obtain the key.</p>\n<p>Note that YouTube uses playlists to identify special collections of videos (such as uploaded videos and positively rated/liked videos) for a channel. We are interested in a playlist of uploaded videos, so we must obtain the <code class=\"language-inline-text\">playlistId</code> for this playlist.</p>\n<h1 id=\"get-playlistid\"><a href=\"#get-playlistid\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Get PlaylistId</h1>\n<p><a href=\"https://developers.google.com/youtube/v3/docs/channels/list#try-it\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.google.com/youtube/v3/docs/channels/list#try-it</a></p>\n<p>We can use the channels resource to retrieve the ‘playlist IDs’ of special collections for uploaded and liked videos by specifying either the channel’s user ID or the channel ID itself.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">GET https://youtube.googleapis.com/youtube/v3/channels?part<span class=\"token operator\">=</span>contentDetails<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">forUsername</span><span class=\"token operator\">=</span>GoogleDevelopers<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">key</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>YOUR_API_KEY<span class=\"token punctuation\">]</span></code></pre></div>\n<p>The playlist ID is available as a value for “likes” and “uploads” in the response object under <code class=\"language-inline-text\">relatedPlaylists</code> copy the <code class=\"language-inline-text\">uploads</code> playlist ID.</p>\n<div class=\"gridsome-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"contentDetails\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"relatedPlaylists\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"likes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"uploads\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"UU_x5XG1OV2P6uZZ5FSM9Ttw\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Note:</strong><br>\nIf your response does not contain the expected result, try specifying the channel ID instead of the YouTube username. This <a href=\"https://support.google.com/youtube/answer/3250431?hl=en\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">guide</a> will help you find the channel ID. Alternatively, see this Stack Overflow <a href=\"https://stackoverflow.com/q/14366648/1835803\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">thread</a>.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">GET https://youtube.googleapis.com/youtube/v3/channels?part<span class=\"token operator\">=</span>contentDetails<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span>UCsBjURrPoezykLs9EqgamOA<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">key</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>YOUR_API_KEY<span class=\"token punctuation\">]</span></code></pre></div>\n<p>There you have it; we were able to determine the <code class=\"language-inline-text\">playlistId</code> for uploads to the Fireship.io channel using the channel ID.</p>\n<p>Next, for the obtained <code class=\"language-inline-text\">playlistId</code> retrieve the playlist items, i.e. videos in the “uploads” playlist.</p>\n<h1 id=\"get-playlist-items\"><a href=\"#get-playlist-items\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Get Playlist Items</h1>\n<p><a href=\"https://developers.google.com/youtube/v3/docs/playlistItems/list#try-it\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.google.com/youtube/v3/docs/playlistItems/list#try-it</a></p>\n<p>With the help of the <code class=\"language-inline-text\">playlistitems</code> resource, you can obtain a list of recently uploaded videos by simply providing the <code class=\"language-inline-text\">playlistId</code> and optionally <code class=\"language-inline-text\">maxResults</code> (the default value is 5).</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">GET https://youtube.googleapis.com/youtube/v3/playlistItems?part<span class=\"token operator\">=</span>contentDetails%2Cid%2Csnippet%2Cstatus<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">maxResults</span><span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">playlistId</span><span class=\"token operator\">=</span>UUsBjURrPoezykLs9EqgamOA<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">key</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>YOUR_API_KEY<span class=\"token punctuation\">]</span></code></pre></div>\n<p>You can learn more by watching <a href=\"https://youtu.be/RjUlmco7v2M\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this helpful video</a> from Google Developers.</p>\n<h1 id=\"getting-a-channels-uploads\"><a href=\"#getting-a-channels-uploads\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Getting a Channel’s Uploads</h1>\n<p>With all of our YouTube Data API knowledge, let’s go ahead and implement the API to fetch recent uploads in a javascript module.</p>\n<p>The following function is named <code class=\"language-inline-text\">fetchRecentTalks,</code> and it is an async function that sends a GET request to the YouTube Data API to get information about videos in a given playlist. If the request is successful, the function will extract the relevant data from the response and return an array of objects, each representing a video in the playlist.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// YouTubeUploads.jsconst youtubeKey = \"[YOUR_API_KEY]\"</span>\n<span class=\"token keyword\">const</span> playlistId <span class=\"token operator\">=</span> <span class=\"token string\">\"UUsBjURrPoezykLs9EqgamOA\"</span>\n<span class=\"token keyword\">const</span> maxRecentTalks <span class=\"token operator\">=</span> <span class=\"token string\">\"20\"</span><span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchRecentTalks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create a new URL object with the base URL for the YouTube Data API</span>\n  <span class=\"token keyword\">const</span> videosUrl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"https://youtube.googleapis.com/youtube/v3/playlistItems\"</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Set the necessary query parameters on the URL</span>\n  videosUrl<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"part\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"snippet\"</span><span class=\"token punctuation\">)</span>\n  videosUrl<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"maxResults\"</span><span class=\"token punctuation\">,</span> maxRecentTalks<span class=\"token punctuation\">)</span>\n  videosUrl<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"playlistId\"</span><span class=\"token punctuation\">,</span> playlistId<span class=\"token punctuation\">)</span>\n  videosUrl<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">,</span> youtubeKey<span class=\"token punctuation\">)</span>  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Send a GET request to the API with the constructed URL</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>videosUrl<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// If the response is not successful (i.e. not in the 2xx range), throw an error</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">HTTP error: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>response<span class=\"token punctuation\">.</span>status<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> items <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> data\n    <span class=\"token comment\">// Map the items array to an array of talks with the desired properties</span>\n    <span class=\"token keyword\">return</span> items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Extract the videoId from the snippet</span>\n      <span class=\"token keyword\">let</span> videoId <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>snippet<span class=\"token punctuation\">.</span>resourceId<span class=\"token punctuation\">.</span>videoId\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>snippet<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">videoId</span><span class=\"token operator\">:</span> videoId<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">publishedAt</span><span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>snippet<span class=\"token punctuation\">.</span>publishedAt<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>snippet<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>snippet<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Concatenate the video ID with the base URL to get the full video URL</span>\n        <span class=\"token literal-property property\">videoUrl</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://youtu.be/\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>videoId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">videoEmbedUrl</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://www.youtube.com/embed/\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>videoId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">thumbnails</span><span class=\"token operator\">:</span> item<span class=\"token punctuation\">.</span>snippet<span class=\"token punctuation\">.</span>thumbnails<span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// TODO: We don't have duration information yet.</span>\n        <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token string\">\"NA\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// If there is an error, log it to the console</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Could not get talks: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In our implementation, we used <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">async-await</a>. However, you are free to explicitly configure promise chains or even use an HTTP client library like <a href=\"https://github.com/axios/axios\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">axios</a>.</p>\n<h1 id=\"get-video-duration\"><a href=\"#get-video-duration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Get Video Duration</h1>\n<p>If you recall the design requirement, we need to display the duration of the video in minutes. However, that information wasn’t available in the previous API call to resource. Instead, we are required to use the videos’ resource.</p>\n<p><a href=\"https://developers.google.com/youtube/v3/docs/videos/list#try-it\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.google.com/youtube/v3/docs/videos/list#try-it</a></p>\n<p>Now, remember that because we are dealing with a collection of videos (up to 20 videos based on <code class=\"language-inline-text\">maxRecentTalks</code>), retrieving details about a specific video by looping through playlist items is not the best option. There is a better way; the ‘id’ parameter accepts a list of YouTube video IDs separated by commas. This means that the same API can retrieve data for a collection of videos as well.</p>\n<p>In your API request, you can therefore include one or more video IDs.</p>\n<div class=\"gridsome-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">GET https://youtube.googleapis.com/youtube/v3/videos?part<span class=\"token operator\">=</span>snippet%2CcontentDetails%2Cstatistics<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">id</span><span class=\"token operator\">=</span>eaedq1Jl2fc%2C1v_TEnpqHXE%2CzBZgdTb-dns%2CaXOChLn5ZdQ%2ClkIFF4maKMU<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">key</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>YOUR_API_KEY<span class=\"token punctuation\">]</span></code></pre></div>\n<p><strong>Determine Quota Cost</strong></p>\n<p>Another important consideration when submitting requests to the YouTube Data API is the quota cost for calling each API method. Every API request has a quota cost of at least one point, even if the request is invalid.</p>\n<div style=\"width: 100%; display: block;\">\n  <iframe\n    src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FxAe3BXJVr9tJscgei5%2Ftwitter%2Fiframe&amp;display_name=Giphy&amp;url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2Fv1.Y2lkPTc5MGI3NjExYjU4NGYxYjgxZjc0OTQwZDliMjcyMDFlMjk4Y2U0Y2FlN2U4NGMzYiZjdD1n%2FxAe3BXJVr9tJscgei5%2Fgiphy-downsized-large.gif&amp;image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FxAe3BXJVr9tJscgei5%2Fgiphy-downsized-large.gif&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=giphy\"\n    allowfullscreen=\"\"\n    frameborder=\"0\"\n    width=\"100%\"\n    height=\"400px\"\n    title=\"Plumber Martin Tv Show GIF by Martin - Find &amp; Share on GIPHY\"\n    scrolling=\"no\"\n    style=\"display: block; max-width: 100%;\"\n  ></iframe>\n</div>\n<p>Checkout this <a href=\"https://developers.google.com/youtube/v3/determine_quota_cost\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Quota Calculator</a> for more information.</p>\n<h1 id=\"video-details-api\"><a href=\"#video-details-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><strong>Video Details API</strong></h1>\n<p>Let’s go ahead and implement the API to retrieve information about videos based on their IDs. Because we are only interested in duration of the video, specifying, <code class=\"language-inline-text\">contentDetails</code>as the value for ‘part’ is sufficient.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/// YouTubeUploads.js</span>\n<span class=\"token comment\">//..</span>\n<span class=\"token comment\">//...</span>\n<span class=\"token comment\">//....</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getVideoDetails</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">videoIds</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// create a URL object with the YouTube API endpoint</span>\n  <span class=\"token keyword\">const</span> videoUrl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://youtube.googleapis.com/youtube/v3/videos\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// set query parameters to request the content details of the specified video</span>\n  videoUrl<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"part\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"contentDetails\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  videoUrl<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> videoIds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  videoUrl<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key\"</span><span class=\"token punctuation\">,</span> youtubeKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>videoUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">HTTP error: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>response<span class=\"token punctuation\">.</span>status<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// extract the content details and map it to respective videoID</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> items <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">fromEntries</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>contentDetails<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// log an error message if the request fails</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Could not get video details: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Copy over the <code class=\"language-inline-text\">getVideoDetails</code> function, which sends a <code class=\"language-inline-text\">GET</code> request to the YouTube API in order to retrieve the content details for the specified video IDs. To make it easier to look up video details using a video ID, let’s associate each video ID with its content details, which typically include information such as the video duration, dimensions, definition, etc.</p>\n<p>Now, modify the <code class=\"language-inline-text\">fetchRecentTalks</code> function and address the duration TODO.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fetchRecentTalks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ..</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token comment\">// ......</span>\n\n  <span class=\"token comment\">// **** insert this ***</span>\n  <span class=\"token comment\">// fetch video details(such as duration) using videoId</span>\n  <span class=\"token keyword\">const</span> videoIds <span class=\"token operator\">=</span> items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>snippet<span class=\"token punctuation\">.</span>resourceId<span class=\"token punctuation\">.</span>videoId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> videoDetails <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getVideoDetails</span><span class=\"token punctuation\">(</span>videoIds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Map the items array to an array of talks with the desired properties</span>\n  <span class=\"token keyword\">return</span> items<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Extract the videoId from the snippet</span>\n    <span class=\"token keyword\">let</span> videoId <span class=\"token operator\">=</span> item<span class=\"token punctuation\">.</span>snippet<span class=\"token punctuation\">.</span>resourceId<span class=\"token punctuation\">.</span>videoId<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ..</span>\n      <span class=\"token comment\">// ...</span>\n      <span class=\"token comment\">// ....</span>\n      <span class=\"token comment\">// *** update this ***</span>\n      <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> videoDetails<span class=\"token punctuation\">[</span>videoId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>duration\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ..</span>\n  <span class=\"token comment\">// ....</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Wonderful!</p>\n<p>But wait, the format of the duration string isn’t what we want. Instead, the format is <a href=\"https://en.wikipedia.org/wiki/ISO_8601#Durations\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ISO 8601</a>. So we must figure out how to parse ISO 8601 duration strings in JavaScript.</p>\n<h1 id=\"parse-iso-8601-duration-strings\"><a href=\"#parse-iso-8601-duration-strings\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Parse ISO 8601 Duration Strings</h1>\n<p>There are a few options for parsing ISO 8601 duration strings in JS, but none of them are native solutions <a href=\"https://tc39.es/proposal-temporal/docs/duration.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">yet</a>. There are numerous open-source software programs and libraries available, including the popular library — <a href=\"https://momentjs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">moment.js</a>.</p>\n<p>Make the following change to make it complete:</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> moment <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"moment\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//..</span>\n<span class=\"token comment\">//....</span>\n<span class=\"token comment\">// Replace following line in `fetchRecentTalks`</span>\n<span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> moment<span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span>videoDetails<span class=\"token punctuation\">[</span>videoId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">humanize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>As an alternative, take a look at my suggestion on this Stack Overflow <a href=\"https://stackoverflow.com/a/74743033/1835803\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">thread</a>.</p>\n<h1 id=\"displaying-the-youtube-api-data\"><a href=\"#displaying-the-youtube-api-data\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Displaying the YouTube API Data</h1>\n<p>There are primarily two ways to import external data into our Gridsome site after retrieving it from a REST API data source.</p>\n<p>We can use the <a href=\"https://gridsome.org/docs/data-store-api/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Data Store API</a> to add external data to the store and make it available on the GraphQL data layer. You will then be able to query that data in your Vue components’ <code class=\"language-inline-text\">page-query</code> and <code class=\"language-inline-text\">static-query</code> tags.</p>\n<p>However, this isn’t ideal for our current requirement because we want to keep it out of the generated markup and refresh data after each page load.</p>\n<p>This can be done by loading our data using the <code class=\"language-inline-text\">mounted</code> hook.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> fetchRecentTalks <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../utils/YouTubeUploads\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">talks</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> results <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchRecentTalks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>talks <span class=\"token operator\">=</span> results<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Check out Gridsome documentation on <a href=\"https://gridsome.org/docs/client-side-data/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Client-side data</a> for more.</p>\n<h1 id=\"creating-a-vuejs-component\"><a href=\"#creating-a-vuejs-component\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Creating a Vue.js Component</h1>\n<p>Finally, it’s time to put on our magician’s hat and start working on the front-end component.</p>\n<p>🎩🪄✨</p>\n<p>We’ll begin with a component called <code class=\"language-inline-text\">Talks.vue</code>, which implements the two-column grid. The component is shown here in all its splendor.</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"talks\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>h3<span class=\"token operator\">></span>_talks<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"talks-group\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col-left\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div\n          <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"item\"</span>\n          v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(talk, i) in col1Tiles\"</span>\n          <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"i\"</span>\n          @click<span class=\"token operator\">=</span><span class=\"token string\">\"showTalk(talk.videoEmbedUrl)\"</span>\n        <span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>TalkTile <span class=\"token operator\">:</span>talk<span class=\"token operator\">=</span><span class=\"token string\">\"talk\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"col right\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div\n          <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"item\"</span>\n          v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(talk, i) in col2Tiles\"</span>\n          <span class=\"token operator\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"i\"</span>\n          @click<span class=\"token operator\">=</span><span class=\"token string\">\"showTalk(talk.videoEmbedUrl)\"</span>\n        <span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>TalkTile <span class=\"token operator\">:</span>talk<span class=\"token operator\">=</span><span class=\"token string\">\"talk\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Modal <span class=\"token operator\">:</span>show<span class=\"token operator\">=</span><span class=\"token string\">\"modalVisible\"</span> <span class=\"token operator\">:</span>close<span class=\"token operator\">-</span>handler<span class=\"token operator\">=</span><span class=\"token string\">\"hideTalk\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>iframe\n        width<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span>\n        height<span class=\"token operator\">=</span><span class=\"token string\">\"100%\"</span>\n        <span class=\"token operator\">:</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"talkUrl\"</span>\n        frameborder<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span>\n        allow<span class=\"token operator\">=</span><span class=\"token string\">\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"</span>\n        allowfullscreen\n      <span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>iframe<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Modal<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style lang<span class=\"token operator\">=</span><span class=\"token string\">\"scss\"</span> scoped<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span><span class=\"token operator\">></span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../assets/vars.scss\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">.</span>talks <span class=\"token punctuation\">{</span>\n  margin<span class=\"token operator\">-</span>bottom<span class=\"token operator\">:</span> 100px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">.</span>talks<span class=\"token operator\">-</span>group <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> grid<span class=\"token punctuation\">;</span>\n  grid<span class=\"token operator\">-</span>template<span class=\"token operator\">-</span>columns<span class=\"token operator\">:</span> 1fr 1fr<span class=\"token punctuation\">;</span>\n  column<span class=\"token operator\">-</span>gap<span class=\"token operator\">:</span> 80px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">.</span>right <span class=\"token punctuation\">{</span>\n    margin<span class=\"token operator\">-</span>top<span class=\"token operator\">:</span> 80px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">.</span>item <span class=\"token punctuation\">{</span>\n    margin<span class=\"token operator\">-</span>bottom<span class=\"token operator\">:</span> 80px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n@media #<span class=\"token punctuation\">{</span>$medium<span class=\"token operator\">-</span>only<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">.</span>talks<span class=\"token operator\">-</span>group <span class=\"token punctuation\">{</span>\n    column<span class=\"token operator\">-</span>gap<span class=\"token operator\">:</span> 16px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span>item <span class=\"token punctuation\">{</span>\n      margin<span class=\"token operator\">-</span>bottom<span class=\"token operator\">:</span> 16px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n@media #<span class=\"token punctuation\">{</span>$small<span class=\"token operator\">-</span>and<span class=\"token operator\">-</span>down<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">.</span>talks<span class=\"token operator\">-</span>group <span class=\"token punctuation\">{</span>\n    grid<span class=\"token operator\">-</span>template<span class=\"token operator\">-</span>columns<span class=\"token operator\">:</span> 1fr<span class=\"token punctuation\">;</span>\n    column<span class=\"token operator\">-</span>gap<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span>right <span class=\"token punctuation\">{</span>\n      margin<span class=\"token operator\">-</span>top<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span>item <span class=\"token punctuation\">{</span>\n      margin<span class=\"token operator\">-</span>bottom<span class=\"token operator\">:</span> 16px<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> Modal <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Modal\"</span>\n<span class=\"token keyword\">import</span> TalkTile <span class=\"token keyword\">from</span> <span class=\"token string\">\"./TalkTile.vue\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> fetchRecentTalks <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../utils/YouTubeUploads\"</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> Modal<span class=\"token punctuation\">,</span> TalkTile <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">allTalks</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">modalVisible</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">talkUrl</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> results <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchRecentTalks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>allTalks <span class=\"token operator\">=</span> results\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">col1Tiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>allTalks<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">col2Tiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>allTalks<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> i <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">showTalk</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>talkUrl <span class=\"token operator\">=</span> url\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>modalVisible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">hideTalk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>modalVisible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p>This component fetches a list of recent talks from our <code class=\"language-inline-text\">YoutubeUploads</code> module and displays them in a grid. The user can click on a talk to open a modal that displays the talk’s video. Note: The modal’s implementation is beyond the scope of this post.</p>\n<p>As you can see, for maintainability, readability, and other reasons, I separated the implementation of each tile into a separate component called <code class=\"language-inline-text\">TalkTile.vue</code>.</p>\n<p>This is what it does:</p>\n<div class=\"gridsome-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"talk\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>img <span class=\"token operator\">:</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"thumbnailUrl\"</span> <span class=\"token operator\">:</span>alt<span class=\"token operator\">=</span><span class=\"token string\">\"talk.title\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"talk-details\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>span <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"icon\"</span><span class=\"token operator\">></span><span class=\"token operator\">|</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>span <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"title\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> talk<span class=\"token punctuation\">.</span>title <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"duration\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> talk<span class=\"token punctuation\">.</span>duration <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> video<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style lang<span class=\"token operator\">=</span><span class=\"token string\">\"scss\"</span> scoped<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">.</span>talk <span class=\"token punctuation\">{</span>\n  box<span class=\"token operator\">-</span>sizing<span class=\"token operator\">:</span> border<span class=\"token operator\">-</span>box<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span>\n  flex<span class=\"token operator\">-</span>direction<span class=\"token operator\">:</span> column<span class=\"token punctuation\">;</span>\n  justify<span class=\"token operator\">-</span>content<span class=\"token operator\">:</span> flex<span class=\"token operator\">-</span>start<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">gap</span><span class=\"token operator\">:</span> 16px<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">overflow</span><span class=\"token operator\">:</span> hidden<span class=\"token punctuation\">;</span>\n\n  img <span class=\"token punctuation\">{</span>\n    max<span class=\"token operator\">-</span>width<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n    max<span class=\"token operator\">-</span>height<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span>talk<span class=\"token operator\">-</span>details <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span>\n  align<span class=\"token operator\">-</span>items<span class=\"token operator\">:</span> flex<span class=\"token operator\">-</span>start<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">gap</span><span class=\"token operator\">:</span> 24px<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">cursor</span><span class=\"token operator\">:</span> pointer<span class=\"token punctuation\">;</span>\n  font<span class=\"token operator\">-</span>family<span class=\"token operator\">:</span> <span class=\"token string\">\"heading\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">.</span>icon <span class=\"token punctuation\">{</span>\n    font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> 2rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">.</span>title <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span>\n    flex<span class=\"token operator\">-</span>direction<span class=\"token operator\">:</span> column<span class=\"token punctuation\">;</span>\n    align<span class=\"token operator\">-</span>items<span class=\"token operator\">:</span> flex<span class=\"token operator\">-</span>start<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> 0px<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">gap</span><span class=\"token operator\">:</span> 8px<span class=\"token punctuation\">;</span>\n    font<span class=\"token operator\">-</span>size<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span>25rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">.</span>duration <span class=\"token punctuation\">{</span>\n    font<span class=\"token operator\">-</span>family<span class=\"token operator\">:</span> <span class=\"token string\">\"body-jetbrains\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"talk\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">thumbnailUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>talk<span class=\"token punctuation\">.</span>thumbnails<span class=\"token punctuation\">.</span>maxres\n        <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>talk<span class=\"token punctuation\">.</span>thumbnails<span class=\"token punctuation\">.</span>maxres<span class=\"token punctuation\">.</span>url\n        <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>talk<span class=\"token punctuation\">.</span>thumbnails<span class=\"token punctuation\">.</span>high<span class=\"token punctuation\">.</span>url\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p>The component expects to receive a “talk” object as a prop, which it uses to populate the template with the relevant information. It also has a computed property called <code class=\"language-inline-text\">thumbnailUrl</code> that determines the URL of the thumbnail image to display based on the availability of different thumbnail sizes.</p>\n<p>Let’s take a look at the final result now.</p>\n<p>Hit refresh!</p>\n<img src=\"/blog/effortlessly-update-youtube-videos-on-your-gridsome-site/tarka-video-thumnails.webp\">\n<p>That’s perfect!</p>\n<h1 id=\"wrapping-up\"><a href=\"#wrapping-up\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Wrapping up</h1>\n<p>This tutorial demonstrated how to easily create a YouTube videos feed in a Gridsome site, similar to YouTube’s landing <a href=\"https://www.youtube.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">page</a>, albeit with a small design twist.</p>\n<p>It certainly involved jumping over a few hurdles, so let’s recap what we’ve learned:</p>\n<ul>\n<li>Gridsome is a free and open-source Jamstack solution built with Vue.js, one of the most loved web framework of our time.</li>\n<li>We use the <a href=\"https://developers.google.com/youtube/v3/docs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">YouTube Data API</a> to request data from a YouTube channel’s feed, and each request must be authenticated using an <a href=\"https://developers.google.com/youtube/v3/getting-started#before-you-start\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">API key</a>.</li>\n<li>Remember that each request, including invalid ones, has a point-based quota cost.</li>\n<li>Uploaded videos for a channel are identified as playlists, and a fetch request can be made using a playlist’s unique identifier (id). Hence, knowing the playlist id of the uploaded videos playlist becomes a prerequisite.</li>\n<li>As a first step, the user ID or channel ID of a channel is used to determine the playlist id for uploads.</li>\n<li>A request to the playlist items endpoint with the <code class=\"language-inline-text\">playlistid</code> parameter returns a list of recently uploaded videos.</li>\n<li>The duration of a video is obtained via an additional request to the video’s endpoint, and the duration data is formatted in ISO 8601 duration strings. Thus, a further conversion to a format that humans can understand is required.</li>\n<li>Using Vue.js, we then created a grid-style interface with custom styles.</li>\n</ul>\n<p>Hope this helps. Good luck with your implementation.</p>\n<p>P.S. I love responding to comments. So keep ‘em coming.</p>\n<blockquote>\n<p><strong>Hey there! I’m Ajith! I’m an iOS developer by day and tinker with web frameworks by night. Currently building immersive mobile experiences @</strong> <a href=\"https://tarkalabs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><strong>Tarka Labs</strong></a><strong><em>. The</em> intersection of design and code fascinates me. I also occasionally blog at</strong> <a href=\"https://ajith.blog/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><strong><em>https://ajith.blog</em></strong></a><strong><em>.</em></strong></p>\n</blockquote>\n"},"blogs":{"edges":[{"node":{"tag":"careers","title":"A Marketer's Guide to Surviving B2B IT Consulting","description":"","duration":"3 min read","thumbnail_alt":"A growing plant is layered over the artwork of a human brain","slug":"a-marketers-guide-to-surviving-b2b-it-consulting","tarkan":{"name":"Saudnya Kharade","role":"Brand Specialist","image":"saudnya.jpg","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"a-marketers-guide/b2b-blog.webp"}},{"node":{"tag":"web","title":"Blockchain as public ledger","description":"","duration":"5 min read","thumbnail_alt":"Blockchain FTW","slug":"smart-contracts-store-information","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":""}},{"node":{"tag":"web","title":"Using Tarka Chat in your React/Vue apps","description":"Using Tarka Chat in your React/Vue apps","duration":"5 min read","thumbnail_alt":"Using Tarka Chat in your React/Vue apps","slug":"using-tarka-chat-in-your-react-vue-apps","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"using-tarka-chat-in-your-react-vue-apps/Photo-by-Volodymyr-Hryshchenko-on-Unsplash.webp"}},{"node":{"tag":"web","title":"Neovim as a java IDE","description":"Neovim as a java IDE","duration":"5 min read","thumbnail_alt":"Neovim as a java IDE","slug":"neovim-as-java-ide","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":""}},{"node":{"tag":"consulting","title":"Navigating Change: The BA's Role in Managing Agile Transformations","description":"Navigating change: The BA's Role in Managing Agile Transformations","duration":"3 min read","thumbnail_alt":"Navigating change: The BA's Role in Managing Agile Transformations","slug":"navigating-change","tarkan":{"name":"Sparsh Gupta","role":"Product Owner","image":"sparsh.png","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@sparsh28"}},"coverImage":"navigating-change/navigating-change.webp"}},{"node":{"tag":"AI","title":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","description":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","duration":"7 min read","thumbnail_alt":"Extracting Structured Data from PDFs with Claude Sonnet and Amazon Bedrock","slug":"extracting-structured-data","tarkan":{"name":"Kesavan","role":"Developer","image":"k7.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@itzk7"}},"coverImage":""}},{"node":{"tag":"web","title":"Functional Programming for Humans — Foundations","description":"Functional Programming for Humans — Foundations","duration":"6 min read","thumbnail_alt":"Functional Programming for Humans — Foundations","slug":"functional-programming-for-humans-foundation","tarkan":{"name":"Sameer Kumar","role":"Technical Consultant","image":"sameer.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"functional-programming-for-humans-foundation/Functional-Programming-for-Humans—Foundations.webp"}},{"node":{"tag":"web","title":"Leveraging DTO pattern in Go-based web apps","description":"Leveraging DTO pattern in Go-based web apps","duration":"4 min read","thumbnail_alt":"Leveraging DTO pattern in Go-based web apps","slug":"go-dto-pattern","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"go-dto-pattern/go-dto-pattern.webp"}},{"node":{"tag":"web","title":"Handling message duplication in Kafka","description":"Handling message duplication in Kafka","duration":"5 min read","thumbnail_alt":"Handling message duplication in Kafka","slug":"kafka-message-duplication","tarkan":{"name":"Vignesh Ravichandran","role":"Developer","image":"vignesh.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@vignesh-ravichandran"}},"coverImage":"kafka-message-duplication/kafka-message-duplication.webp"}},{"node":{"tag":"web","title":"Generic Callbacks in Rust","description":"Generic Callbacks in Rust","duration":"3 min read","thumbnail_alt":"Generic Callbacks in Rust","slug":"generic-callbacks-rust","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"generic-callbacks-rust/generic-callbacks-rust.webp"}},{"node":{"tag":"AI","title":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","description":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","duration":"8 min read","thumbnail_alt":"Implementing Serverless Batch Transcription with AWS Step Functions and Azure AI Services","slug":"batch-transcription","tarkan":{"name":"Kesavan","role":"Developer","image":"k7.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@itzk7"}},"coverImage":"batch-transcription/batch-transcription.webp"}},{"node":{"tag":"devops","title":"OpenText Magellan and AKS: An unofficial deployment guide","description":"OpenText Magellan and AKS: An unofficial deployment guide","duration":"11 min read","thumbnail_alt":"OpenText Magellan and AKS: An unofficial deployment guide","slug":"opentext-magellan-aks-unofficial-deployment-guide","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":""}},{"node":{"tag":"web","title":"Searching For The Perfect Fit: Our Move from Algolia to Typesense","description":"Our search for an open-source, cost-effective, scalable, and self-hosted solution led us to Typesense, an alternative to the very popular Algolia.","duration":"5 min read","thumbnail_alt":"Searching For The Perfect Fit: Our Move from Algolia to Typesense","slug":"searching-perfect-fit-move-from-algolia-to-typesense","tarkan":{"name":"Shamil Siddique","role":"Developer","image":"shamil.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@shamilsdq"}},"coverImage":"searching-perfect-fit-move-from-algolia-to-typesense/searching-perfect-fit-move-from-algolia-to-typesense.webp"}},{"node":{"tag":"mobile","title":"5 essential tools and tips for every iOS developer","description":"5 essential tools and tips for every iOS developer","duration":"4 min read","thumbnail_alt":"5 essential tools and tips for every iOS developer","slug":"essential-tools-and-tips-for-every-ios-developer","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"ios-tips-and-tools/Recommended-tools-tips-for-iOS-developers.png"}},{"node":{"tag":"web","title":"Build your first Swift command-line tool with ArgumentParser","description":"Using Swift Package Manager (SPM) and swift-argument-parser, it's easy to create command-line tools in Swift. Here's how you can do it.","duration":"10 min read","thumbnail_alt":"Build your first Swift command-line tool with ArgumentParser","slug":"build-your-first-swift-command-line-tool-with-argumentparser","tarkan":{"name":"Ajith Renjala","role":"A tarkan","image":"bitman.png","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ajithrnayak"}},"coverImage":"build-your-first-swift-command-line-tool-with-argumentparser/build-your-first-swift-command-line-tool-with-argumentparser.webp"}},{"node":{"tag":"mobile","title":"The ultimate VPN detection guide for iOS and Android","description":"The ultimate VPN detection guide for iOS and Android","duration":"3 min read","thumbnail_alt":"The ultimate VPN detection guide for iOS and Android","slug":"vpn-detection-guide-ios-android","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"the-ultimate-vpn-detection/the-ultimate-vpn.webp"}},{"node":{"tag":"mobile","title":"React Native vs. Flutter in 2023: A Comprehensive Comparison","description":"A detailed comparison of React Native vs. Flutter to help engineering managers make decisions on how, where, and when to use React or Flutter.","duration":"14 min read","thumbnail_alt":"React Native vs. Flutter in 2023: A Comprehensive Comparison","slug":"react-native-vs-flutter-2023-comparison","tarkan":{"name":"Ajith Renjala","role":"A tarkan","image":"bitman.png","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ajithrnayak"}},"coverImage":"react-native-vs-flutter-2023-comparison/react-native-vs-flutter-2023-comparison.webp"}},{"node":{"tag":"mobile","title":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","description":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","duration":"3 min read","thumbnail_alt":"We tested out Kotlin Multiplatform Mobile (KMM). Here's our take.","slug":"kotlin-multiplatform-mobile","tarkan":{"name":"Ibrahim Hassan","role":"Mobile Developer","image":"ibrahim.png","blurb":"","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/mdibrahimhassan/","medium":"https://medium.com/@mdibrahimhassan"}},"coverImage":"kotlin-multiplatform-mobile/kotlin-multiplatform-mobile.webp"}},{"node":{"tag":"web","title":"Reshaping data with PostgreSQL pivot tables","description":"Reshaping data with PostgreSQL pivot tables","duration":"4 min read","thumbnail_alt":"Reshaping data with PostgreSQL pivot tables","slug":"reshaping-data-postgresql-pivot-tables","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"reshaping-data-with-postgres/reshaping-data-with-postgreSQL.webp"}},{"node":{"tag":"web","title":"Effortlessly update YouTube videos on your Gridsome site","description":"How to build an auto-updating YouTube feed on your site using the YouTube API and Gridsome for Vue.js with step-by-step instructions and code samples.","duration":"10 min read","thumbnail_alt":"Effortlessly update YouTube videos on your Gridsome site","slug":"effortlessly-update-youtube-videos-on-your-gridsome-site","tarkan":{"name":"Ajith Renjala","role":"A tarkan","image":"bitman.png","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ajithrnayak"}},"coverImage":"effortlessly-update-youtube-videos-on-your-gridsome-site/effortlessly-update-youtube-videos-on-your-gridsome-site.webp"}},{"node":{"tag":"devops","title":"The only in-depth AWS ECS monitoring solution you'll need","description":"This is a detailed blog on how to set up in-depth AWS ECS monitoring. The bundled alerts that come with ECS are inadequate. DevOps teams need more insight to be efficient.","duration":"6 min read","thumbnail_alt":"The only in-depth AWS ECS monitoring solution you'll need","slug":"aws-ecs-monitoring-solution","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"aws-ecs-monitoring-solution/cover.gif"}},{"node":{"tag":"devops","title":"Designing a centralized alert routing system using AWS Lambda","description":"Who wouldn't love a centralized monitoring and alerting system, right? Are you in the process of consolidating all your alerting systems into a single one?","duration":"4 min read","thumbnail_alt":"Designing a centralized alert routing system using AWS Lambda","slug":"centralized-alert-routing-system-aws-lambda","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"centralized-alert-routing-system-aws-lambda/cover.gif"}},{"node":{"tag":"web","title":"Rate limiting for distributed environments","description":"Different ways to architect distributed environments with rate limiting code snippets available","duration":"5 min read","thumbnail_alt":"Rate limiting for distributed environments","slug":"rate-limiting-for-distributed-environments","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"rate-limiting-for-distributed-environments/rate-limiting-for-distributed-environments.webp"}},{"node":{"tag":"consulting","title":"Documentation: Yes, We Should!","description":"Imagine you recently joined a new team, and after a couple of weeks, you were assigned a bug ticket. You look at the ticket and decide to see if this issue surfaced in the past and so do a search in the bug tracking tool.","duration":"4 min read","thumbnail_alt":"A 3D image of a file folder with purple, yellow and green color rectangles for pages","slug":"documentation-yes-we-should","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"documentation-yes-we-should/documentation-yes-we-should.png"}},{"node":{"tag":"mobile","title":"Java Life vs Kotlin Life","description":"Developers using Kotlin don't use it to its fullest potential because they use it just like Java. Kotlin is so much more powerful and concise. Here's how.","duration":"3 min read","thumbnail_alt":"Java Life vs Kotlin Life","slug":"java-life-vs-kotlin-life","tarkan":{"name":"Nandagopal Ravichandran","role":"Mobile Developer","image":"nanda.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"java-life-vs-kotlin-life/java-life-vs-kotlin-life.webp"}},{"node":{"tag":"consulting","title":"Building Serious Software","description":"Do you know what every software startup entrepreneur dreams of after they validate the market? Software that does not break with scale and is adaptable to change.","duration":"4 min read","thumbnail_alt":"A cartoon of loosely held blocks which are held by stick figures from collapsing","slug":"building-serious-software","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":"building-serious-software/banner.png"}},{"node":{"tag":"consulting","title":"Wait! Don't write code yet","description":"As developers, it is necessary to understand how the code we write helps solve real-world problems. Often, it is easier to think about users while writing the application layer of code.","duration":"3 min read","thumbnail_alt":"A isometric image of a 3D maze","slug":"wait-dont-write-code-yet","tarkan":{"name":"Vidhya Desikan","role":"Developer","image":"vidhya.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@vdviddin"}},"coverImage":"wait-dont-write-code-yet/wait-dont-write-code-yet.png"}},{"node":{"tag":"web","title":"Rust : Testing API Requests — HttpMock","description":"Rust : Testing API Requests — HttpMock","duration":"3 min read","thumbnail_alt":"Rust : Testing API Requests — HttpMock","slug":"rust-testing-api-requests-httpmock","tarkan":{"name":"Arun Kumar","role":"A tarkan","image":"anonymous.jpg","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@arunkumar_33617"}},"coverImage":"rust-testing/Rust-testing.webp"}},{"node":{"tag":"web","title":"Considering a GraphQL switch? Here's why it is worth it.","description":"Considering a switch to GraphQL? From better data aggregation to schema stitching, here's why you should consider adopting GraphQL in your stack.","duration":"5 min read","thumbnail_alt":"Considering a GraphQL switch? Here's why it is worth it.","slug":"graphql-switch-worth-it","tarkan":{"name":"Deepak Prasanna","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@deepakprasanna"}},"coverImage":"graphql-switch-worth-it/graphql-switch-worth-it.webp"}},{"node":{"tag":"consulting","title":"What does a CTO do?","description":"There has been a lot of hand-wringing and discussions about what a CTO does on the interwebs. Does a CTO write code? Does a CTO's calendar look like it is on the maker's or the manager's schedule? Does a CTO sit in on interviews?","duration":"6 min read","thumbnail_alt":"A isometric image of a balancing scale with code on one side and detective lens on the other side","slug":"what-does-a-cto-do","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"what-does-a-cto-do/cover.png"}},{"node":{"tag":"careers","title":"A writer's guide to working in a tech consultancy","description":"A manual for writers who work with cross-functional teams or roles.","duration":"4 min read","thumbnail_alt":"A circular red shape surrounded by cubes","slug":"a-writers-guide-to-working-in-a-tech-consultancy","tarkan":{"name":"Puneetha Jagannathan","role":"Brand Communications Specialist","image":"puneetha.jpg","blurb":"She is still thiking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://puneetha-j.medium.com/"}},"coverImage":"a-writers-guide-to-working-in-a-tech-consultancy/a-writers-guide-to-working-in-a-tech-consultancy.png"}},{"node":{"tag":"mobile","title":"How to create shortcuts in your Android app","description":"Here's how you can implement static, dynamic and pinned shortcuts using our code snippets and guidelines.","duration":"4 min read","thumbnail_alt":"How to create shortcuts in your Android app","slug":"create-shortcuts-android-app","tarkan":{"name":"Raja Jawahar","role":"Mobile Developer","image":"raja.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"create-shortcuts-android-app/create-shortcuts-android-app.webp"}},{"node":{"tag":"mobile","title":"Launching a screen within an app using custom Siri voice commands","description":"Here's how you can configure NSUserActivity and IntentsUI in iOS to enable users to navigate to a specific screen inside an app using voice commands.","duration":"3 min read","thumbnail_alt":"Launching a screen within an app using custom Siri voice commands","slug":"launch-screen-siri-voice-commands","tarkan":{"name":"Naren Krishna","role":"iOS Developer","image":"naren.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"launch-screen-siri-voice-commands/launch-screen-siri-voice-commands.gif"}},{"node":{"tag":"web","title":"Testim 101: Automation Testing on Steroids","description":"Testim is an AI-based testing framework that helps you automate website testing. Here's a detailed review of its features, pros, and cons.","duration":"5 min read","thumbnail_alt":"Testim 101: Automation Testing on Steroids","slug":"testim-automation-testing-on-steroids","tarkan":{"name":"Sameer Kumar","role":"Technical Consultant","image":"sameer.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"testim-automation-testing-on-steroids/testim-automation-testing-on-steroids.webp"}},{"node":{"tag":"web","title":"How to setup SFTP in Golang Authentication Using Go","description":"How to setup SFTP in Golang Authentication Using Go","duration":"2 min read","thumbnail_alt":"How to setup SFTP in Golang Authentication Using Go","slug":"set-up-sftp-authentication-go","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":""}},{"node":{"tag":"devops","title":"An introductory guide to functional programming concepts","description":"An introductory guide to functional programming concepts","duration":"10 min read","thumbnail_alt":"An introductory guide to functional programming concepts","slug":"introductory-guide-functional-programming-concepts","tarkan":{"name":"Sreedev Kodichath","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://sreedevk.medium.com/"}},"coverImage":"introductory-guide-functional-programming-concepts/introductory-guide-functional-programming-concepts.gif"}},{"node":{"tag":"design","title":"Trying out Material You. A tale of two background colors.","description":"Trying out Material You. A tale of two background colors.","duration":"7 min read","thumbnail_alt":"Trying out Material You. A tale of two background colors.","slug":"material-you-critique-light-mode-background-color-m3","tarkan":{"name":"Andy Reed","role":"A tarkan","image":"anonymous.jpg","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@andy.reed89"}},"coverImage":"material-you-critique-light-mode-background-color-m3/material-you-critique-light-mode-background-color-m3.webp"}},{"node":{"tag":"web","title":"How to Build a Web Application using Rust — Part III","description":"How to Build a Web Application using Rust — Part III","duration":"2 min read","thumbnail_alt":"How to Build a Web Application using Rust — Part III","slug":"how-to-build-a-web-application-with-rust-part-3","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"how-to-build-a-web-application-with-rust-part-3/how-to-build-a-web-application-with-rust-part-3.webp"}},{"node":{"tag":"devops","title":"Handling multiple environments with Helm","description":"Handling multiple environments with Helm","duration":"4 min read","thumbnail_alt":"Handling multiple environments with Helm","slug":"handling-multiple-environments-with-helm","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"handling-multiple-environments-with-helm/handling-multiple-environments-with-helm.webp"}},{"node":{"tag":"devops","title":"How to reduce your Node.js docker image size by 70%","description":"How to reduce your Node.js docker image size by 70%","duration":"4 min read","thumbnail_alt":"How to reduce your Node.js docker image size by 70%","slug":"reduce-nodejs-docker-image-size","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"reduce-nodejs-docker-image-size/how-to-reduce.gif"}},{"node":{"tag":"web","title":"How to build a Web Application with Rust: Part II","description":"How to build a Web Application with Rust: Part II","duration":"2 min read","thumbnail_alt":"How to build a Web Application with Rust: Part II","slug":"how-to-build-a-web-application-with-rust-part-2","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"how-to-build-a-web-application-with-rust-part-2/how-to-build-a-web-application-with-rust-part-2.webp"}},{"node":{"tag":"","title":"How to build a Web Application with Rust: Part I","description":"How to build a Web Application with Rust: Part I","duration":"2 min read","thumbnail_alt":"How to build a Web Application with Rust: Part I","slug":"how-to-build-a-web-application-with-rust-part-1","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"how-to-build-a-web-application-with-rust-part-1/how-to-build-a-web-application-with-rust-part-1.webp"}},{"node":{"tag":"careers","title":"Our Guide To Hiring Great People","description":"How Tarka Labs approaches hiring.","duration":"5 min read","thumbnail_alt":"Colors in geometric shapes with hand-drawn sketches on them","slug":"our-guide-to-hiring-great-people","tarkan":{"name":"Jenifa Newlin","role":"People Champion","image":"jenifa.jpg","blurb":"She is still thinking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@jenifa_85990"}},"coverImage":"our-guide-to-hiring-great-people/our-guide-to-hiring-great-people.png"}},{"node":{"tag":"devops","title":"Digital Audio 101: Playing Audio From A Microcontroller","description":"Digital Audio 101: Playing Audio From A Microcontroller","duration":"7 min read","thumbnail_alt":"Digital Audio 101: Playing Audio From A Microcontroller","slug":"digital-audio-101-playing-audio-from-a-microcontroller","tarkan":{"name":"Madhava Reddy SV","role":"DevOps","image":"madhava.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"digital-audio-101-playing-audio-from-a-microcontroller/digital-audio-101-playing-audio-from-a-microcontroller.gif"}},{"node":{"tag":"web","title":"What I learned refactoring a monolith into microservices","description":"Here are my learnings from 6 months of refactoring a monolithic MEAN stack web application running on docker inside a virtual machine.","duration":"4 min read","thumbnail_alt":"What I learned refactoring a monolith into microservices","slug":"refactoring-monolith-into-microservices","tarkan":{"name":"Utkarsh Mehta","role":"Developer","image":"bitman.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://life-of-utkarsh.medium.com/"}},"coverImage":"refactoring-monolith-into-microservices/refactoring-monolith-into-microservices.webp"}},{"node":{"tag":"consulting","title":"Don't Rewrite, Refactor: Why Brownfield Development Helps","description":"If you're finding it hard to build and ship new features, spending time to read and refactor the existing code can be better than rewriting it.","duration":"3 min read","thumbnail_alt":"Don't Rewrite, Refactor: Why Brownfield Development Helps","slug":"dont-rewrite-refactor-brownfield-development","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"dont-rewrite-refactor-brownfield-development/dont-rewrite-refactor-brownfield-development.webp"}},{"node":{"tag":"web","title":"Exploring Headless CMS","description":"Exploring Headless CMS","duration":"9 min read","thumbnail_alt":"Exploring Headless CMS","slug":"exploring-headless-cms","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"exploring-headless-cms/exploring-headless-cms.webp"}},{"node":{"tag":"blockchain","title":"My thoughts on Substrate","description":"My thoughts on Substrate","duration":"9 min read","thumbnail_alt":"My thoughts on Substrate","slug":"my-thoughts-on-substrate","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"my-thoughts-on-substrate/my-thoughts-on-substrate.webp"}},{"node":{"tag":"web","title":"Learnings from a failed product","description":"Learnings from a failed product","duration":"3 min read","thumbnail_alt":"Learnings from a failed product","slug":"learnings-from-a-failed-product","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"learning-from-a-failed-product/learning-from.webp"}},{"node":{"tag":"","title":"Filling images with mosaic colors using D3.js","description":"Filling images with mosaic colors using D3.js","duration":"3 min read","thumbnail_alt":"Filling images with mosaic colors using D3.js","slug":"filling-images-with-mosaic-colors-using-d3js","tarkan":{"name":"Alen Thomas","role":"A tarkan","image":"anonymous.jpg","blurb":"He is still thiking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@alenthomas9"}},"coverImage":"filling-images-with-mosaic-colors-using-d3js/filling-images-with-mosaic-colors-using-d3js.webp"}},{"node":{"tag":"web","title":"How To Learn Coding Through Live Streaming","description":"How To Learn Coding Through Live Streaming","duration":"5 min read","thumbnail_alt":"How To Learn Coding Through Live Streaming","slug":"learn-coding-through-live-streaming","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"learn-youtube-video/rahul-blog-1.webp"}},{"node":{"tag":"web","title":"Remote pairing in mac (with low latency)","description":"Remote pairing in mac (with low latency)","duration":"3 min read","thumbnail_alt":"Remote pairing in mac (with low latency)","slug":"remote-pairing-mac-low-latency","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":""}},{"node":{"tag":"mobile","title":"Debounce in Swift","description":"All about debounce: 4 ways to achieve debounce in Swift","duration":"5 min read","thumbnail_alt":"A representation of a function called 'debounce' which is accepting, as input, a green circle labelled '3' and outputting an identical-looking green circle with no label","slug":"debounce-in-swift","tarkan":{"name":"Pavan Kumar C","role":"iOS Developer","image":"pavan.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://pavankumarchalla.medium.com/"}},"coverImage":""}},{"node":{"tag":"web","title":"Service Mesh in Kubernetes — Pictorially","description":"Service Mesh in Kubernetes — Pictorially","duration":"5 min read","thumbnail_alt":"Service Mesh in Kubernetes — Pictorially","slug":"service-mesh-kubernetes-guide","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":"service-mesh-in-kubernetes/service-mesh-2.webp"}},{"node":{"tag":"web","title":"Javascript Sandbox for your Node Project","description":"Guide to safely run customer javascript code in your node.js environment using vm2.","duration":"3 min read","thumbnail_alt":"Sandbox with a pail and shovel","slug":"javascript-sandbox-for-your-node-project","tarkan":{"name":"Utkarsh Mehta","role":"Developer","image":"bitman.png","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://life-of-utkarsh.medium.com/"}},"coverImage":"javascript-sandbox-for-your-node-project/javascript-sandbox-for-your-node-project.png"}},{"node":{"tag":"web","title":"Deploying your Rails application using dokku","description":"Deploying your Rails application using dokku","duration":"5 min read","thumbnail_alt":"Deploying your Rails application using dokku","slug":"how-to-deploy-rails-application-with-dokku","tarkan":{"name":"Vinoth","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@avinoth"}},"coverImage":"how-to-deploy-rails-application-with-dokku/header.webp"}},{"node":{"tag":"web","title":"Searching with MongoDB and Elastic Search","description":"Searching with MongoDB and Elastic Search","duration":"4 min read","thumbnail_alt":"Searching with MongoDB and Elastic Search","slug":"searching-with-mongodb-and-elastic-search","tarkan":{"name":"Harman Sohanpal","role":"Developer","image":"harman.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"searching-with-mongodb-and-elastic-search/header.webp"}},{"node":{"tag":"web","title":"All You Need To Know About Comments in Ruby","description":"All You Need To Know About Comments in Ruby","duration":"5 min read","thumbnail_alt":"All You Need To Know About Comments in Ruby","slug":"all-you-need-to-know-about-comments-in-ruby","tarkan":{"name":"Sreedev Kodichath","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://sreedevk.medium.com/"}},"coverImage":"all-you-need-to-know-about-comments-in-ruby/header.webp"}},{"node":{"tag":"AI","title":"Person of Interest: How I built a Facial Recognition Machine Learning model.","description":"Person of Interest: How I built a Facial Recognition Machine Learning model.","duration":"5 min read","thumbnail_alt":"Person of Interest: How I built a Facial Recognition Machine Learning model.","slug":"building-a-facial-recognition-machine-learning-model","tarkan":{"name":"Rajiv Manivannan","role":"Developer","image":"rajiv.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"building-a-facial-recognition-machine-learning-model/1.webp"}},{"node":{"tag":"web","title":"Why we refuse fixed bid projects","description":"Why we refuse fixed bid projects","duration":"4 min read","thumbnail_alt":"Why we refuse fixed bid projects","slug":"why-we-refuse-fixed-bid-project","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"why-we-refuse-fixed-bid-project/why-we-refuse-fixed-big-projects.webp"}},{"node":{"tag":"web","title":"Know Kubernetes - Pictorially","description":"Understand kubernetes and its components with easily relatable pictorial representations.","duration":"7 min read","thumbnail_alt":"Black and white sketch of a square room labelled 'MASTER' with the following items: disk pack, chest of drawers with a wifi signal-emitting device on top, and two tables","slug":"know-kubernetes-pictorially","tarkan":{"name":"Sudhakar Rayavaram","role":"Developer","image":"sudhakar.jpg","blurb":"Programming is overrated. I mean, there is more to solving a real world problem than writing code","socials":{"twitter":"","linkedin":"https://www.linkedin.com/in/sudocker/","medium":"https://medium.com/@suDocker"}},"coverImage":""}},{"node":{"tag":"mobile","title":"Why flutter","description":"Look beyond react native and why flutter is exciting.","duration":"5 min read","thumbnail_alt":"A hummingbird in flight","slug":"why-flutter","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"why-flutter/why-flutter.png"}},{"node":{"tag":"web","title":"PDF Comparison in Pure Ruby","description":"PDF Comparison in Pure Ruby","duration":"2 min read","thumbnail_alt":"PDF Comparison in Pure Ruby","slug":"pdf-comparison-pure-ruby","tarkan":{"name":"Jahangir Anwari","role":"Developer","image":"jahangir.jpeg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@janwari"}},"coverImage":"pdf-comparison-in-pure-ruby/pdf-comparison-in-pure-ruby.webp"}},{"node":{"tag":"careers","title":"How we hire engineers","description":"How Tarka Labs hires engineers. Published in the interest of transparency.","duration":"3 min read","thumbnail_alt":"A dark room with two empty chairs facing each other across a table","slug":"how-we-hire-engineers","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":"how-we-hire-engineers/how-we-hire-engineers.png"}},{"node":{"tag":"web","title":"Power of SSH Tunneling","description":"Most developers spend a considerable amount of their time ssh'd into remote machines, however, few are aware of the power of ssh tunnels.","duration":"4 min read","thumbnail_alt":"Silhouette of a man standing inside a glowing blue tunnel with a glowing white circle in front of him","slug":"power-of-ssh-tunneling","tarkan":{"name":"Dhruva Sagar","role":"Developer","image":"dhruva.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@dhruvasagar"}},"coverImage":"power-of-ssh-tunneling/power-of-ssh-tunneling.png"}},{"node":{"tag":"careers","title":"All in one's mind.","description":"The effectiveness of a positive mindset and the ability to self-assess.","duration":"4 min read","thumbnail_alt":"A growing plant is layered over the artwork of a human brain","slug":"all-in-ones-mind","tarkan":{"name":"Ramya Raghavan","role":"A tarkan","image":"bitman.png","blurb":"She is still thiking what to write about her","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@ramyaraghavan"}},"coverImage":"all-in-ones-mind/onion.webp"}},{"node":{"tag":"web","title":"Event Delegation: Simple yet awesome!","description":"Event Delegation: Simple yet awesome!","duration":"2 min read","thumbnail_alt":"Event Delegation: Simple yet awesome!","slug":"event-delegation-simple-yet-awesome","tarkan":{"name":"Rahul Nitin Padalkar","role":"Developer","image":"rahul.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":""}},"coverImage":"event-delegation/event-delegation.webp"}},{"node":{"tag":"devops","title":"Automating cluster creation with Terraform on DigitalOcean","description":"Automating cluster creation with Terraform on DigitalOcean","duration":"4 min read","thumbnail_alt":"Automating cluster creation with Terraform on DigitalOcean","slug":"automating-cluster-creation-with-terraform-on-digitalocean","tarkan":{"name":"Vagmi Mudumbai","role":"Developer","image":"vagmi.jpg","blurb":"He is still thinking what to write about him","socials":{"twitter":"","linkedin":"","medium":"https://vagmi.medium.com/"}},"coverImage":""}},{"node":{"tag":"AI","title":"Part 2- Creating a neural network using tensorflow to colorize grayscale images.","description":"Part 2- Creating a neural network using tensorflow to colorize grayscale images.\n","duration":"4 min read","thumbnail_alt":"","slug":"colorize-grayscale-images-pt-2","tarkan":{"name":"Deepak Prasanna","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@deepakprasanna"}},"coverImage":""}},{"node":{"tag":"AI","title":"Part I — Creating a neural network using tensorflow to colorize grayscale images.","description":"Part I — Creating a neural network using tensorflow to colorize grayscale images","duration":"4 min read","thumbnail_alt":"","slug":"colorize-grayscale-images-pt-1","tarkan":{"name":"Deepak Prasanna","role":"A tarkan","image":"bitman.png","blurb":"","socials":{"twitter":"","linkedin":"","medium":"https://medium.com/@deepakprasanna"}},"coverImage":""}}]}},"context":{}}