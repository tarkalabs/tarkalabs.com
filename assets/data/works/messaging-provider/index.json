{"hash":"c06c1a8c023c1850dabeb2b78b17fd1c84e3f58e","data":{"caseStudy":{"id":"ea57acc89347f4d374cb0510b188e208","title":"Messaging Solutions Provider","clientId":11,"bannerText":"Golang based SMS Engine & Elixir based Campaign manager for a Messaging Solution Provider","tech":"","content":"<h1 id=\"brief\"><a href=\"#brief\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Brief</h1>\n<p>Our client was a messaging solution provider. They had a partially completed platform with ruby and microservices, a node.js based engine that connected to the SMS gateways and a campaign management system written in PHP.</p>\n<p>The campaign management system did not quite integrate with the rest of the platform. They also had a load distributor system called the balancer.</p>\n<h1 id=\"solution\"><a href=\"#solution\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Solution</h1>\n<h2 id=\"campaigner\"><a href=\"#campaigner\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Campaigner</h2>\n<p>The old campaigner system was rewritten using elixir and phoenix. We used React.js with Immutable.js and immstruct for the frontend. We achieved close to 90% code coverage on the project with unit test cases and configured CircleCI to not just run the unit tests but to also build a docker image and push it to the registry.</p>\n<h2 id=\"docs-delivered\"><a href=\"#docs-delivered\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Docs Delivered</h2>\n<p>DocsDelivered is a bit like MailChimp or other email marketing tools. Customers can upload their contact lists as CSV files or populate them via an API. They can then setup documents (campaigns). We used liquid and markdown to generate documents which were then delivered via an SMS. The recepient can open the document and download it as PDF if needed or have it emailed to them by providing an email address. We integrated with Google Analytics to provide impressive analytics and visualization. Docs Delivered was written with elixir, phoenix and react.js. As with the campaigner, we used CircleCI to run our tests and to build and push the docker image on to the registry.</p>\n<h2 id=\"engine\"><a href=\"#engine\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Engine</h2>\n<p>There was an existing implementation of the SMS engine that was written with Node.js and had a partial implementation with Go. We finished porting the implementation from Node.js to Golang to support handling incoming SMS from the SMPP gateway. We also reimplemented the distributor with a RabbitMQ based system thus simplyfing the effort needed to build a balancer. This decoupled the implementation of the engine from its consumers allowing us to iterate quickly.</p>\n"},"clients":{"edges":[{"node":{"id":"28","name":"Redacted","style":"green","logo":""}},{"node":{"id":"27","name":"Hotstar","style":"fullBlack","logo":"org/hotstar.png"}},{"node":{"id":"26","name":"Framework","style":"fullBlack","logo":"org/framework.svg"}},{"node":{"id":"25","name":"Routinr","style":"purple-blue","logo":"org/routinr.svg"}},{"node":{"id":"24","name":"eVisitNB","style":"red","logo":""}},{"node":{"id":"23","name":"EquipmentFX","style":"yellow","logo":""}},{"node":{"id":"22","name":"Beatclub","style":"dark-grey","logo":"org/beatclub.svg"}},{"node":{"id":"21","name":"Social Lab","style":"yellow","logo":""}},{"node":{"id":"20","name":"IFAD","style":"yellow","logo":""}},{"node":{"id":"19","name":"10i Commerce","style":"dark-blue","logo":""}},{"node":{"id":"18","name":"IDExcel","style":"grey","logo":""}},{"node":{"id":"17","name":"Aisle","style":"green","logo":""}},{"node":{"id":"16","name":"Trazaar","style":"yellow","logo":""}},{"node":{"id":"15","name":"Jiffle Now","style":"pink","logo":""}},{"node":{"id":"14","name":"Farmstead","style":"green","logo":""}},{"node":{"id":"13","name":"Inkl","style":"dark-blue","logo":""}},{"node":{"id":"12","name":"Glydel","style":"grey","logo":""}},{"node":{"id":"11","name":"Messaging Solution Provider","style":"black","logo":""}},{"node":{"id":"10","name":"EAM360","style":"red","logo":""}},{"node":{"id":"9","name":"TuneCore","style":"black","logo":""}},{"node":{"id":"8","name":"Abridge","style":"orange","logo":""}},{"node":{"id":"7","name":"GE Digital Services","style":"green","logo":""}},{"node":{"id":"6","name":"Gaea Global","style":"red","logo":""}},{"node":{"id":"5","name":"Genetic Direction","style":"dark-blue","logo":""}},{"node":{"id":"4","name":"IDEO","style":"yellow","logo":""}},{"node":{"id":"3","name":"Fankave","style":"black","logo":""}},{"node":{"id":"2","name":"Caratlane","style":"blue","logo":""}},{"node":{"id":"1","name":"Modus","style":"pink","logo":""}}]}},"context":{}}